[{"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/index.js":"1","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/App.js":"2","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/reportWebVitals.js":"3","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/CheckboxList.js":"4","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/SearchResults.js":"5","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/store.js":"6","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/FileUpload.js":"7","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/HtmlViewer.js":"8","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/Box.js":"9","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/Loader.js":"10","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/textinput.js":"11","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/DocumentList.js":"12","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/AddTerm.js":"13","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/DocRankUI.js":"14","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/headercomp.js":"15","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/footercomp.js":"16","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/bodycomp.js":"17","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/fileselector.js":"18","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/reducers/index.js":"19","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/about.js":"20"},{"size":535,"mtime":1710451411198,"results":"21","hashOfConfig":"22"},{"size":42775,"mtime":1713930767341,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1710451411198,"results":"24","hashOfConfig":"22"},{"size":1767,"mtime":1713908564909,"results":"25","hashOfConfig":"22"},{"size":1679,"mtime":1711375259604,"results":"26","hashOfConfig":"22"},{"size":139,"mtime":1710451411198,"results":"27","hashOfConfig":"22"},{"size":5616,"mtime":1711348013796,"results":"28","hashOfConfig":"22"},{"size":3255,"mtime":1710962024924,"results":"29","hashOfConfig":"22"},{"size":2648,"mtime":1710451411194,"results":"30","hashOfConfig":"22"},{"size":455,"mtime":1710451411198,"results":"31","hashOfConfig":"22"},{"size":3972,"mtime":1710963100964,"results":"32","hashOfConfig":"22"},{"size":2931,"mtime":1712797477148,"results":"33","hashOfConfig":"22"},{"size":547,"mtime":1710546735798,"results":"34","hashOfConfig":"22"},{"size":1216,"mtime":1713908564909,"results":"35","hashOfConfig":"22"},{"size":1703,"mtime":1713908564957,"results":"36","hashOfConfig":"22"},{"size":2716,"mtime":1713923628080,"results":"37","hashOfConfig":"22"},{"size":9447,"mtime":1713927709184,"results":"38","hashOfConfig":"22"},{"size":1501,"mtime":1713908564957,"results":"39","hashOfConfig":"22"},{"size":241,"mtime":1710451411198,"results":"40","hashOfConfig":"22"},{"size":10289,"mtime":1713931939549,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cc2rb",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/index.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/App.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],[],"import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\nimport HtmlViewer from \"./HtmlViewer\";\nimport CheckboxList from \"./CheckboxList\";\nimport FileUpload from \"./FileUpload\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport SearchResults from \"./SearchResults\";\nimport Box from \"./Box\";\nimport pdfjsLib from \"pdfjs-dist\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport styles from \"./stylenew.css\";\n\nimport { useLocation } from \"react-router-dom\";\nimport DocumentList from \"./DocumentList\";\nimport AddTerm from \"./AddTerm\";\nimport TextInput from \"./textinput\";\n\nimport FileInput from \"./fileselector\";\n\nimport DocRankUI from \"./DocRankUI\";\n\nimport HeaderPage from \"./headercomp\";\nimport BodyPage from \"./bodycomp\";\nimport FooterPage from \"./footercomp\";\n\n\n\nimport \"./assets/scss/common.scss\";\nimport \"./assets/scss/style.scss\";\n\nimport { Card, Button, CardTitle, CardText } from \"reactstrap\";\nimport About from \"./about\";\n\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport default function App() {\n  const [pdf, setPdf] = React.useState(\"\");\n  const [width, setWidth] = React.useState(0);\n  const [images, setImages] = React.useState([]);\n  const [height, setHeight] = React.useState(0);\n  const [totalPages, setTotalPages] = React.useState(1);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [pdfRendering, setPdfRendering] = React.useState(\"\");\n  const [pageRendering, setPageRendering] = React.useState(\"\");\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [fileText, setFileText] = React.useState({});\n  const [docranks, setDocRanks] = React.useState({});\n  const [alldocsready, setAllDocsReady] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [currhtml, setcurrhtml] = React.useState(\"\");\n  const [queryterms, setqueryterms] = React.useState([]);\n  const [fileData, setFileData] = useState(\"\");\n  const [querymap, setquerymap] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [colorMap, setcolorMap] = React.useState([]);\n  const [showpage, setshowpage] = React.useState(false);\n  const [pdfUrls, setPdfUrls] = useState([]);\n  const [showDocs, setshowdocs] = useState(false);\n  const [allHtmls, setAllHtmls] = useState({});\n  const [currShowing, setCurrShowing] = useState(\"\");\n\n  const [oninit, setonint] = useState(true);\n  const [onranked, setonranked] = useState(false);\n\n  const [newtermsupdate, setnewtermsupdate] = useState(false);\n  const [filesadded, setfilesadded] = useState(false);\n\n  const [showinitbox, setshowinitbox] = useState(true);\n\n  const [showtextinput, setshowtextinput] = useState(false);\n  const [showfileselector, setshowfileselector] = useState(false);\n  const [docrankscreen, setdocrankscreen] = useState(true);\n  const [showrankorpdf, setshowrankorpdf] = useState(true);\n\n  const [enablestartRanking, setenablestartRanking] = useState(false);\n\n  const [isonLanding, setisonLanding] = useState(true);\n\n  const [showabout,setshowabout] = useState(false);\n\n  const openinitscreen = () => {\n    setonint(true);\n    setonranked(false);\n    setshowinitbox(true);\n    setshowtextinput(false);\n    setshowfileselector(false);\n    setdocrankscreen(false);\n    setshowrankorpdf(false);\n  };\n\n  const opentermeditor = () => {\n    // setshowinitbox(false);\n    setshowtextinput(true);\n    // setshowfileselector(false);\n    // setdocrankscreen(false);\n    // setshowrankorpdf(false);\n  };\n  const openfileuploader = () => {\n    setshowinitbox(false);\n    setshowtextinput(false);\n    setshowfileselector(true);\n    setdocrankscreen(true);\n    setshowrankorpdf(true);\n  };\n  const openrankeddocs = () => {\n    setonint(false);\n    setonranked(true);\n    setshowinitbox(false);\n    setshowtextinput(false);\n    setshowfileselector(false);\n    setdocrankscreen(true);\n    setshowrankorpdf(true);\n  };\n  const openshowpdffile = () => {\n    // setonint(false);\n    // setonranked(false);\n    // setshowinitbox(false);\n    // setshowtextinput(false);\n    // setshowfileselector(false);\n    setdocrankscreen(true);\n    setshowrankorpdf(false);\n  };\n\n  const reloadPage = () => {\n    window.location.reload(true); // true indicates a hard reload\n  };\n\n  useEffect(() => {\n    console.log(\"fileNames\");\n    console.log(fileNames);\n\n    if (queryterms.length > 0 && filesadded) {\n      setenablestartRanking(true);\n    }\n  }, [querymap, queryterms, fileNames, filesadded]);\n\n  // const [file, setFile] = useState(null);\n\n  // const handleChange = (event) => {\n  //   setFile(event.target.files[0]);\n  // }\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const reader = new FileReader();\n\n  //   reader.onload = async (event) => {\n  //     const fileData = event.target.result;\n  //     const fileDataString = fileData.toString();\n  //     console.log(fileDataString)\n\n  //     const path = \"./public/dataaaaaaaaaaaaaaaaaa.txt\";\n  //     try {\n  //       localStorage.setItem(path, fileDataString);\n  //       console.log(\"Data written to localStorage!\");\n  //     } catch (e) {\n  //       console.error(\"Error writing data to localStorage:\", e);\n  //     }\n  //   };\n\n  //   reader.readAsText(file);\n\n  //   setFile(null);\n  // };\n\n  const closefileinput = () => {\n    setfilesadded(true);\n    openrankeddocs();\n  };\n\n  const movetorankscreen = () => {\n    setshowinitbox(false);\n    setshowfileselector(false);\n    setshowtextinput(false);\n    setdocrankscreen(true);\n  };\n  const generateUniqueHighlightColors = () => {\n    const result = [];\n    const hues = [0, 45, 90, 135, 180, 225, 270, 315]; // More diverse hues\n    const saturation = 70; // Fixed saturation for better consistency\n\n    for (let hue of hues) {\n      for (let lightness = 60; lightness <= 90; lightness += 10) {\n        const color = `hsl(${hue}, ${saturation}%, ${lightness}%)`; // Use HSL color model for bright and light colors\n        result.push(color);\n      }\n    }\n\n    return result;\n  };\n  // const generateUniqueHighlightColors = () => {\n  //   const result = [];\n  //   const hues = [0, 60, 120, 180, 240, 300]; // More diverse hues\n  //   const saturations = [50, 70, 90]; // Different saturation levels for variation\n\n  //   for (let hue of hues) {\n  //     for (let saturation of saturations) {\n  //       const lightness = Math.floor(Math.random() * 30) + 60; // Random lightness between 60 and 90\n  //       const color = `hsl(${hue}, ${saturation}%, ${lightness}%)`; // Use HSL color model for bright and light colors\n  //       result.push(color);\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const brightColors = generateUniqueHighlightColors();\n\n  const [brightColors, setbrightColors] = useState(\n    generateUniqueHighlightColors()\n  );\n\n  const colorObject = {};\n\n  brightColors.forEach((color) => {\n    colorObject[color] = false;\n  });\n\n  const [documents, setDocuments] = useState([]);\n\n  const [param1, setParam1] = useState(\"\");\n  const [param2, setParam2] = useState(\"\");\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const param1Value = queryParams.get(\"param1\");\n    const param2Value = queryParams.get(\"param2\");\n\n    console.log(\"---------onsole.log(param1Value)\");\n    console.log(param1Value);\n    console.log(\"---------onsole.log(param1Value)\");\n    console.log(param2Value);\n    setParam1(param1Value);\n    setParam2(param2Value);\n  }, []);\n\n  const openReactAppInNewWindow = () => {\n    const url = \"http://sysrev2.cs.binghamton.edu/dart\";\n    const jsonString = JSON.stringify([\n      {\n        resultId: 1971,\n        document: {\n          title: \"Distributional Reinforcement Learning in the Brain.\",\n          articleDate: \"2020 Dec\",\n          authorNames: [\n            \"Lowet AS\",\n            \"Zheng Q\",\n            \"Matias S\",\n            \"Drugowitsch J\",\n            \"Uchida N\",\n          ],\n          affiliationCountry: null,\n          publicationName: \"distributional reinforcement learning in the brain\",\n          issn: \"0166-2236\",\n          affiliationNames: null,\n          url: \"https://pubmed.ncbi.nlm.nih.gov/33092893\",\n        },\n        priority: 0,\n        datasource: \"PUBMED\",\n      },\n      {\n        resultId: 1972,\n        document: {\n          title: \"Reinforcement Distributional Learning in the Brain.\",\n          articleDate: \"2020 Dec\",\n          authorNames: [\n            \"Lowet AS\",\n            \"Zheng Q\",\n            \"Matias S\",\n            \"Drugowitsch J\",\n            \"Uchida N\",\n          ],\n          affiliationCountry: null,\n          publicationName: \"distributional reinforcement learning in the brain\",\n          issn: \"0166-2236\",\n          affiliationNames: null,\n          url: \"https://pubmed.ncbi.nlm.nih.gov/33092893\",\n        },\n        priority: 0,\n        datasource: \"PUBMED\",\n      },\n      {\n        resultId: 1973,\n        document: {\n          title: \"Learning Distributional Reinforcement in the Brain.\",\n          articleDate: \"2020 Dec\",\n          authorNames: [\n            \"Lowet AS\",\n            \"Zheng Q\",\n            \"Matias S\",\n            \"Drugowitsch J\",\n            \"Uchida N\",\n          ],\n          affiliationCountry: null,\n          publicationName: \"distributional reinforcement learning in the brain\",\n          issn: \"0166-2236\",\n          affiliationNames: null,\n          url: \"https://pubmed.ncbi.nlm.nih.gov/33092893\",\n        },\n        priority: 0,\n        datasource: \"PUBMED\",\n      },\n      {\n        resultId: 1974,\n        document: {\n          title: \"Brain Distributional Learning in the Reinforcement.\",\n          articleDate: \"2020 Dec\",\n          authorNames: [\n            \"Lowet AS\",\n            \"Zheng Q\",\n            \"Matias S\",\n            \"Drugowitsch J\",\n            \"Uchida N\",\n          ],\n          affiliationCountry: null,\n          publicationName: \"distributional reinforcement learning in the brain\",\n          issn: \"0166-2236\",\n          affiliationNames: null,\n          url: \"https://pubmed.ncbi.nlm.nih.gov/33092893\",\n        },\n        priority: 0,\n        datasource: \"PUBMED\",\n      },\n    ]);\n    const queryParams = `json=${encodeURIComponent(jsonString)}`;\n    const finalUrl = `${url}?${queryParams}`;\n    const newWindow = window.open(finalUrl, \"_blank\", \"width=800,height=600\");\n\n    if (newWindow) {\n      // Optional: Add any additional logic if needed, such as handling popup blockers\n    } else {\n      // Handle case where the new window could not be opened, e.g., due to popup blockers\n      console.error(\"Failed to open new window\");\n    }\n  };\n\n  const [htmls, setHtmls] = React.useState(\"\");\n\n  const [checkedTerms, setCheckedTerms] = useState({});\n\n  const onMount = async () => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const pdfUrlParam = queryParams.get(\"pdf_urls\");\n\n    const jsonDataParam = queryParams.get(\"json\");\n\n    if (jsonDataParam) {\n      try {\n        const jsonData = JSON.parse(decodeURIComponent(jsonDataParam));\n\n        setDocuments(jsonData);\n        console.log(\"Received JSON data:\", jsonData);\n        // Continue with your logic to process the received JSON data\n      } catch (error) {\n        console.error(\"Error parsing JSON data:\", error);\n      }\n    }\n\n    console.log(\"data in api\", jsonDataParam);\n  };\n\n  const downloadPdfFromUrl = async (pdfUrl) => {\n    try {\n      console.log(\"downloading\" + pdfUrl);\n      // const response = await axios.get(pdfUrl, { responseType: \"arraybuffer\" });\n      // const pdfData = response.data;\n      // // Here, you can save the PDF data or perform any necessary processing.\n      return pdfUrl;\n    } catch (error) {\n      console.error(\"Error downloading PDF from URL:\", pdfUrl, error);\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    onMount();\n  }, []); // Call onMount when the component mounts\n\n  const handleCheckedTerms = (checkedTerms) => {\n    console.log(\"Checked terms:\", checkedTerms);\n    const trueTerms = Object.keys(checkedTerms).filter(\n      (term) => checkedTerms[term]\n    );\n\n    const falseTerms = Object.keys(checkedTerms).filter(\n      (term) => !checkedTerms[term]\n    );\n\n    // const colorMap = colormap;\n\n    // let htmltemp = htmls;\n    let htmltemp = allHtmls[currShowing];\n\n    // for (let i = 0; i < falseTerms.length; i++) {\n    //   const backgroundStyle = `background-color: white;`;\n\n    //   htmltemp = htmltemp.replace(\n    //     new RegExp(falseTerms[i], \"gi\"),\n    //     `<span style=\"${backgroundStyle}\">${falseTerms[i]}</span>`\n    //   );\n    // }\n\n    for (let i = 0; i < trueTerms.length; i++) {\n      const backgroundColor = colorMap[trueTerms[i]];\n      const backgroundStyle = checkedTerms[trueTerms[i]]\n        ? `\n          background-color: ${backgroundColor};\n          border-radius: 3px; /* Rounded corners */\n          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3); /* Drop shadow */\n          padding: 2px 4px; /* Padding for better spacing */\n          color: white; /* Text color on highlighted background */\n          pointer-events: none;\n        `\n        : `background-color: white;`;\n\n      const re = new RegExp(`>${trueTerms[i]}<`, \"gi\");\n      htmltemp = htmltemp.replace(re, (match) => {\n        return match.replace(\n          /<span name = \"highlightedtextdebug\" style=\"[^\"]*\">(.*?)<\\/span>/gi,\n          \"$1\"\n        );\n      });\n\n      // htmltemp = htmltemp.replace(\n      //   new RegExp(`>[^<]*(${trueTerms[i]})[^<]*<`, \"gi\"),\n      //   (match) => {\n      //     return match.replace(\n      //       new RegExp(`(${trueTerms[i]})`, \"gi\"),\n      //       `<span style=\"${backgroundStyle}\">$1</span>`\n      //     );\n      //   }\n      // );\n\n      const iframe = document.getElementById(\"viewer-iframe\");\n\n      iframe.contentWindow.handleClick = function (event, term) {\n        event.preventDefault(); // Prevent default behavior of clicking on the span tag\n        const targetId = term;\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          // Scroll to the target element within the iframe\n          targetElement.scrollIntoView();\n        }\n      };\n\n      // const stylePattern = /<style[^>]*>.*?<\\/style>/gs;\n\n      // // Match and replace the style attribute\n      // htmltemp = htmltemp.replace(stylePattern, (match) => {\n\n      //     // Remove or modify the style for #page-container here\n      //     return match.replace(/#page-container/g, '#mo-page-container');\n      // });\n\n      // const originalSubstring = \"#page-container{bottom:0;right:0;overflow:auto}\";\n      // const replacementSubstring = \"#page-container{bottom:0;overflow:auto}\";\n\n      // htmltemp = htmltemp.replace(originalSubstring, replacementSubstring);\n\n      htmltemp = htmltemp.replace(\n        new RegExp(`(?<![\\\\w</])(${trueTerms[i]})(?![\\\\w/>:=])`, \"gi\"),\n\n        // new RegExp(`(?<=^|>)[^<]*(?<![:=])(${trueTerms[i]})(?![^<]*<|[:=])`, \"gi\"),\n\n        (match, word, index) => {\n          const sentence = htmltemp.substring(index - 15, index + 20);\n          console.log(\"Sentence:\", sentence);\n          console.log(\"printing index\", index);\n          const bodyStartIndex = htmltemp.indexOf(\"<body\");\n          const bodyEndIndex = htmltemp.indexOf(\"</body>\");\n\n          if (bodyStartIndex > index || bodyEndIndex < index) {\n            return match;\n          }\n\n          const lastopen = htmltemp\n            .substring(bodyStartIndex, index)\n            .lastIndexOf(\"<\");\n          const lastclosed = htmltemp\n            .substring(bodyStartIndex, index)\n            .lastIndexOf(\">\");\n          const firstopen = htmltemp\n            .substring(index, bodyEndIndex)\n            .indexOf(\"<\");\n          const firstclose = htmltemp\n            .substring(index, bodyEndIndex)\n            .indexOf(\">\");\n\n          console.log(\"lastopen words----\", lastopen);\n          console.log(\"lastclosed words----\", lastclosed);\n          console.log(\"firstopen words----\", firstopen);\n          console.log(\"firstclose words----\", firstclose);\n\n          if (lastopen > lastclosed || firstopen > firstclose) {\n            return match;\n          }\n\n          console.log(\"matched words----\", match);\n\n          return match.replace(\n            new RegExp(`(?<![\\\\w</])(${trueTerms[i]})(?![\\\\w/>:=])`, \"gi\"),\n            // new RegExp(`(?<=[>])(\\\\b${trueTerms[i]}\\\\b)(?![^<]*<)`, \"gi\"),\n            // new RegExp(`(?<=^|>)[^<]*(?<![:=])(${trueTerms[i]})(?![^<]*<|[:=])`, \"gi\"),\n\n            `<span style=\"${backgroundStyle}\" >$1</span>`\n            // `<span style=\"${backgroundStyle}\" >$1</span>`\n            // `<span style=\"${backgroundStyle}\" pointer-events: none;>$1</span>`\n            // <span style=\"${backgroundStyle}; pointer-events: auto;\" onclick=\"window.location.href = 'http://sysrev2.cs.binghamton.edu:3001/#pf1'\">$1</span>\n          );\n        }\n      );\n\n      // htmltemp = htmltemp.replace(\n      //   new RegExp(`([^<>]*>)?([^<]*(${trueTerms[i]})([^<]*<)?[^<>]*)`, \"gi\"),\n      //   (match, before, term, after) => {\n      //     return `${before}<span style=\"${backgroundStyle}\">${term}</span>${after}`;\n      //   }\n      // );\n    }\n\n    setHtmls(htmltemp);\n  };\n\n  function updateTermObject() {\n    setquerymap((prevQueryMap) => {\n      const updatedQueryMap = { ...prevQueryMap };\n      // Add new terms to the querymap with default value false\n      queryterms.forEach((term) => {\n        if (!updatedQueryMap[term]) {\n          updatedQueryMap[term] = false;\n        }\n      });\n      // Remove terms from the querymap that are missing from queryterms\n      Object.keys(updatedQueryMap).forEach((term) => {\n        if (!queryterms.includes(term)) {\n          delete updatedQueryMap[term];\n        }\n      });\n      return updatedQueryMap;\n    });\n  }\n\n  useEffect(() => {\n    updateTermObject();\n  }, [queryterms]);\n\n  async function showPdf(fnamme) {\n    try {\n      fnamme = fnamme.replace(\"pdf\", \"html\");\n      const path = fnamme;\n\n      fetch(path)\n        .then((response) => response.text())\n        .then((html) => {\n          html = html.replace(/<span class=\"_ _\\d+\"><\\/span>/g, \"\");\n\n          setHtmls(html);\n        });\n    } catch (error) {\n      console.log(\"file not found\");\n    }\n  }\n\n  // const convertPDFToHTML = async () => {\n  //   console.log(\"name of all files--=-=-=-=-\",fileNames);\n  //   let pdfFilePath = \"./sample.pdf\";\n  //   try {\n  //     const response = await fetch(\n  //       `${apiUrl}/api/convert-pdf-to-html?_=${new Date().getTime()}`,\n  //       { timeout: 10000 }\n  //     );\n  //     return await response.text();\n  //   } catch (error) {\n  //     console.error(error);\n  //     throw new Error(\"Failed to convert PDF to HTML\");\n  //   }\n  // };\n\n  const convertPDFToHTML = async () => {\n    console.log(\"name of all files--=-=-=-=-\", fileNames);\n    let pdfFilePath = \"./sample.pdf\";\n    try {\n      const response = await fetch(`${apiUrl}/api/convert-pdf-to-html`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ fileNames }),\n      });\n      return await response.text();\n    } catch (error) {\n      console.error(error);\n      throw new Error(\"Failed to convert PDF to HTML\");\n    }\n  };\n\n  const startconversion = async () => {\n    if (!enablestartRanking) {\n      alert(\"Please upload documents and add search terms!\");\n      return;\n    }\n\n    setnewtermsupdate(false);\n    setIsLoading(true);\n    await convertPDFToHTML()\n      .then((html) => {\n        // alert(\"yes\");\n        setFileText(cleanTexts(fileText));\n        const resultsdemo = rankTextscos(queryterms, fileText);\n\n        console.log(queryterms);\n        // console.log(fileText);\n        console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n        setAllDocsReady(true);\n        setDocRanks(resultsdemo);\n        console.log(resultsdemo);\n        // getAllHTML();\n        handleFetchFile();\n        setIsLoading(false);\n        openrankeddocs();\n      })\n      .catch((error) => {\n        setIsLoading(false);\n      });\n  };\n\n  function rerankjacc() {\n    setIsLoading(true);\n    const resultsdemo = rankTextsjacc(queryterms, fileText);\n    openReactAppInNewWindow();\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function setshowingdocs() {\n    setshowdocs(!showDocs);\n  }\n\n  function rerankbm25() {\n    setIsLoading(true);\n    const resultsdemo = rankTextsbm25(queryterms, fileText);\n\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function rerankcoss() {\n    setIsLoading(true);\n    const resultsdemo = rankTextscos(queryterms, fileText);\n\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function cleanTexts(obj) {\n    const cleanObj = {};\n    const regex = /[^a-zA-Z0-9 ]/g; // Regex to match non-alphanumeric characters\n    for (const [key, value] of Object.entries(obj)) {\n      const cleanText = value.replace(regex, \" \"); // Replace non-alphanumeric characters with spaces\n      cleanObj[key] = cleanText.trim(); // Trim leading and trailing spaces and add to new object\n    }\n    return cleanObj;\n  }\n\n  async function renderPage() {\n    setPageRendering(true);\n    const imagesList = [];\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"className\", \"canv\");\n    let canv = document.querySelector(\".canv\");\n\n    for (let i = 1; i <= pdf.numPages; i++) {\n      var page = await pdf.getPage(i);\n      var viewport = page.getViewport({ scale: 1 });\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      var render_context = {\n        canvasContext: canvas.getContext(\"2d\"),\n        viewport: viewport,\n      };\n      console.log(\"page lenght\", pdf.numPages);\n      setWidth(viewport.width);\n      setHeight(viewport.height);\n      await page.render(render_context).promise;\n      let img = canvas.toDataURL(\"image/png\");\n      imagesList.push(img);\n    }\n    setImages(imagesList);\n    setPageRendering(false);\n  }\n\n  useEffect(() => {\n    pdf && renderPage();\n  }, [pdf, currentPage]);\n\n  function rankTextsbm25(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n\n    // calculate the inverse document frequency for each term\n    const idf = {};\n    docs.forEach((doc) => {\n      const words = new Set(texts[doc].toLowerCase().match(/\\b\\w+\\b/g)); // split the text into words and convert to a set\n      words.forEach((word) => {\n        if (idf[word]) {\n          idf[word]++;\n        } else {\n          idf[word] = 1;\n        }\n      });\n    });\n    Object.keys(idf).forEach((term) => {\n      idf[term] = Math.log(docs.length / idf[term]);\n    });\n\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      const tf = {}; // stores the term frequency for each word\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n      });\n      // store the vector and the word count for the document\n      docVectors[doc] = { vector: tf, wordCount: words.length };\n    });\n\n    // calculate the Okapi BM25 score for each document\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      let score = 0;\n      const matchedWords = [];\n      terms.forEach((term) => {\n        if (docVector[term]) {\n          const tf = docVector[term];\n          const k1 = 1.2;\n          const b = 0.75;\n          const avgDocLength =\n            docs.reduce((sum, doc) => {\n              return sum + docVectors[doc].wordCount;\n            }, 0) / docs.length;\n          const idfScore = idf[term];\n          const docLengthNorm = 1 - b + b * (wordCount / avgDocLength);\n          const tfScore = ((k1 + 1) * tf) / (k1 * docLengthNorm + tf);\n          score += idfScore * tfScore;\n          matchedWords.push({ word: term, count: docVector[term] });\n        }\n      });\n      return {\n        name: doc,\n        score: score,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n\n    return results;\n  }\n\n  function rankTextsjacc(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      const tf = {}; // stores the term frequency for each word\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n      });\n      // store the vector and the word count for the document\n      docVectors[doc] = { vector: tf, wordCount: words.length };\n    });\n\n    // calculate the Jaccard similarity between the term frequency vectors and the query vector\n    const queryVector = {};\n    terms.forEach((term) => {\n      queryVector[term] = 1;\n    });\n\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      const intersection = {};\n      let intersectionSize = 0;\n      let unionSize = wordCount;\n      Object.keys(queryVector).forEach((term) => {\n        if (docVector[term]) {\n          intersection[term] = docVector[term];\n          intersectionSize += docVector[term];\n        } else {\n          unionSize += 1;\n        }\n      });\n\n      const jaccardSimilarity = intersectionSize / unionSize;\n\n      const matchedWords = Object.keys(intersection).map((word) => {\n        return { word: word, count: intersection[word] };\n      });\n\n      return {\n        name: doc,\n        score: jaccardSimilarity,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n\n    return results;\n  }\n\n  function rankTextscos(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n    console.log(\"----docs in ranking\");\n\n    console.log(texts);\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      console.log(\"--------\");\n      console.log(words);\n      console.log(\"--------\");\n      const tf = {}; // stores the term frequency for each word\n      var maxFreq = 0; // stores the highest frequency of any word in the document\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n        maxFreq = Math.max(maxFreq, tf[word]);\n      });\n      // normalize the term frequency vector by dividing each frequency by the max frequency\n      const docVector = {};\n      Object.keys(tf).forEach((word) => {\n        docVector[word] = tf[word];\n      });\n      docVectors[doc] = { vector: docVector, wordCount: words.length }; // store the vector and the word count for the document\n    });\n\n    // calculate the cosine similarity between the term frequency vectors and the query vector\n    const queryVector = {};\n    terms.forEach((term) => {\n      queryVector[term] = 1;\n    });\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      const dotProduct = Object.keys(queryVector).reduce((sum, term) => {\n        if (docVector[term]) {\n          return sum + queryVector[term] * docVector[term];\n        } else {\n          return sum;\n        }\n      }, 0);\n      const queryMagnitude = Math.sqrt(\n        Object.keys(queryVector).reduce((sum, term) => {\n          return sum + queryVector[term] * queryVector[term];\n        }, 0)\n      );\n      const docMagnitude = Math.sqrt(\n        Object.keys(docVector).reduce((sum, term) => {\n          return sum + docVector[term] * docVector[term];\n        }, 0)\n      );\n      const cosineSimilarity = dotProduct / (queryMagnitude * docMagnitude);\n      // find the words in the text that match the query terms and calculate their frequency in the document\n      // find the words in the text that match the query terms and calculate their frequency in the document\n      const matchedWords = Object.keys(docVector)\n        .filter((word) => {\n          return wordSet.has(word);\n        })\n        .map((word) => {\n          return { word: word, count: docVector[word] }; // use the frequency directly\n        });\n\n      return {\n        name: doc,\n        score: cosineSimilarity,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n    setAllDocsReady(true);\n    return results;\n  }\n\n  // const handleFetchFile = async (fileName) => {\n  //   try {\n  //     const response = await axios.get(\n  //       `${apiUrl}/api/getFile/${fileName}`\n  //     );\n  //     console.group(\"found html file \" + response.data);\n  //     setHtmls(response.data);\n  //   } catch (error) {\n  //     console.error(`Error fetching file ${fileName}: ${error.message}`);\n  //   }\n  // };\n\n  const handleFetchFile = async (fileName = \"\") => {\n    console.log(\"handleFetchFile called\");\n\n    if (fileName != \"\" && allHtmls.hasOwnProperty(fileName)) {\n      setHtmls(allHtmls[fileName]);\n      return;\n    }\n    try {\n      const promises = fileNames.map(async (fn) => {\n        fn = fn.replace(\"pdf\", \"html\");\n        const response = await axios.get(`${apiUrl}/api/getFile/${fn}`);\n        let hml = response.data;\n        const originalSubstring =\n          \"#page-container{bottom:0;right:0;overflow:auto}\";\n        const replacementSubstring = \"#page-container{bottom:0;overflow:auto}\";\n\n        hml = hml.replace(originalSubstring, replacementSubstring);\n\n        return { [fn]: hml }; // Return an object with file name as key and file content as value\n      });\n\n      const filesData = await Promise.all(promises);\n\n      // Combine file data into a single object\n      const filesObject = filesData.reduce(\n        (acc, cur) => ({ ...acc, ...cur }),\n        {}\n      );\n      setAllHtmls(filesObject);\n      if (fileName != \"\") {\n        setHtmls(filesObject[fileName]);\n      }\n    } catch (error) {\n      console.error(`Error fetching files: ${error.message}`);\n    }\n  };\n\n  function showranks() {\n    setshowrankorpdf(true);\n    setshowpage(false);\n  }\n  function showthispdf(fnamme) {\n    setshowpage(true);\n    openshowpdffile();\n    // setshowrankorpdf(false);\n    fnamme = fnamme.replace(\"pdf\", \"html\");\n    setCurrShowing(fnamme);\n    handleFetchFile(fnamme);\n  }\n\n  return (\n    <Provider store={store}>\n      {/* <div className=\"container\">\n        <div className=\"first-row\">\n          <div className=\"header\">\n            <h2>PaperRank</h2>\n            <h5>\"Accelerate Your Research\"</h5>\n\n          </div>\n\n          <div className=\"queryupload\">\n            <Loader isLoading={isLoading} />\n            <div class=\"section\">\n              <div class=\"container-fluid\">\n                <div class=\"row\">\n                  <div class=\"q col-sm-6\">\n                    <h4>Query</h4>\n                    <Box queryterms={queryterms} brightColors={brightColors} setbrightColors={setbrightColors} setcolorMap={setcolorMap} setqueryterms={setqueryterms} />\n                  </div>\n                  <div class=\"f col-sm-6\">\n                    <h4>File Upload</h4>\n                    <i class=\"fa-solid fa-cloud-arrow-up\"></i> <FileUpload setIsLoading={setIsLoading} setFileText={setFileText} setFileNames={setFileNames} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"right-column\">\n            <div class=\"row\">\n              <div id=\"pdf-contents\">\n                <div id=\"pdf-meta\">\n                  <div id=\"pdf-buttons\">\n                    <div class=\"terms col-sm-1\"></div>\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={startconversion}>Start Ranking</button>\n                    </div>\n\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={rerankcoss}>Start cosine ranking</button>\n                    </div>\n\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={rerankjacc}>Start jaccard ranking</button>\n                    </div>\n\n                 \n\n                    {documents.length > 0 && <div class=\"terms col-sm-2\">\n                      <button onClick={() => { setshowingdocs() }}>Show docs</button>\n                    </div>}\n\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={showranks}>{\"< Back to document ranks\"}</button>\n                    </div>\n                    <div class=\"terms col-sm-1\"></div>\n\n\n                  </div>\n\n                  <div></div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"second-row\">\n          <div className=\"afterupload\">\n            <div class=\"p row\">\n              <div class=\"first-column\">\n\n\n\n                {(documents.length > 0) && showDocs ? (<div id=\"pdf-main-container\">\n\n                  <DocumentList handleCheckboxChange={() => { console.log(\"hc---\") }} documents={documents} />\n\n                </div>)\n\n                  :\n\n\n                  (showpage ?\n\n                    <div id=\"pdf-main-container\">\n\n                      <HtmlViewer html={htmls} />\n\n                    </div>\n                    // )\n                    :\n                    alldocsready ? (\n                      <div id=\"pdf-main-container\"> <div>\n                        <SearchResults results={docranks} showthispdf={showthispdf} />\n                      </div></div>\n                    ) : (\n                      \"\"\n                    )\n                  )}\n              </div>\n              <div className=\"second-column\">\n                <div class=\"terms col-sm-3\">\n\n                  <h1>Terms</h1>\n                  <CheckboxList\n                    terms={querymap}\n                    colorMap={colorMap}\n                    checkedTerms={checkedTerms}\n                    setCheckedTerms={setCheckedTerms}\n                    onCheckedTerms={handleCheckedTerms}\n                  />\n                </div>\n\n\n              </div>\n            </div>\n\n\n\n          </div>\n\n        </div>\n      </div> */}\n      {/* <div class=\"fotter\">\n      </div> */}\n\n      {/* new ui */}\n\n      <div className=\"app-container\">\n        <Loader isLoading={isLoading} />\n\n        <div>\n          <div>\n            <div id=\"main-wrapper\">\n              <div className=\"topbar\" id=\"top\">\n                <HeaderPage />\n                {isonLanding ? (\n                  <>\n                  \n                  {showabout?\n                  <BodyPage setisonLanding={setisonLanding} />:\n\n                  <About setisonLanding={setisonLanding} />}\n\n                  <FooterPage />\n                  </>\n                ) : (\n                  <div className=\"bodycontainer1\">\n                    {showDocs ? (\n                      <div className=\"showdocsdiv\">\n                        <div id=\"showdocdivs\">\n                          <DocumentList\n                            setshowdocs={setshowdocs}\n                            fileNames={fileNames}\n                            handleCheckboxChange={() => {\n                              console.log(\"hc---\");\n                            }}\n                            documents={documents}\n                          />\n                        </div>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {showfileselector ? (\n                    \n                      <FileInput\n                      setshowfileselector={setshowfileselector}\n                      showfileselector={showfileselector}\n                        fileNames={fileNames}\n                        setIsLoading={setIsLoading}\n                        setFileText={setFileText}\n                        setFileNames={setFileNames}\n                        closefileinput={closefileinput}\n                      />\n                  \n                    ) : (\n                      \"\"\n                    )}\n\n                    {showtextinput ? (\n                    \n                      <TextInput\n                        setnewtermsupdate={setnewtermsupdate}\n                        queryterms={queryterms}\n                        brightColors={brightColors}\n                        setbrightColors={setbrightColors}\n                        setcolorMap={setcolorMap}\n                        setqueryterms={setqueryterms}\n                        closetextinput={closefileinput}\n                      />\n                    ) : (\n                      \"\"\n                    )}\n\n                    {docrankscreen ? (\n                      <>\n                        <div className=\"menubuttons\">\n\n                        <div class=\"terms cs2\">\n                            <Button\n                             color=\"danger\"\n                              // className=\"menubuttonreset\"\n                              onClick={reloadPage}\n                            >\n                              Go Back\n                            </Button>\n                          </div>\n\n\n                          <div class=\"terms cs1\"></div>\n                          <div class=\"terms cs2\">\n                            {newtermsupdate ? (\n                              <Button\n                                // className=\"menubutton2-alert\"\n                                color=\"warning\"\n                                onClick={startconversion}\n                              >\n                                Update Ranks\n                              </Button>\n                            ) : (\n                              <Button\n                              color=\"primary\"\n                                className=\"menubutton2\"\n                                onClick={startconversion}\n                              >\n                                Re-Rank Documents\n                              </Button>\n                            )}\n                          </div>\n                          <div class=\"terms cs2\">\n                            <Button \n                            color=\"primary\"\n                              className=\"menubutton2\"\n                              onClick={opentermeditor}\n                            >\n                              Edit Terms\n                            </Button>\n                          </div>\n\n                          <div class=\"terms cs2\">\n                            <Button\n                             color=\"primary\"\n                              className=\"menubutton2\"\n                              onClick={() => {\n                                setshowdocs(!showDocs);\n                              }}\n                            >\n                              {!showDocs\n                                ? \"Open Files List\"\n                                : \"Close File List\"}\n                            </Button>\n                          </div>\n\n                         \n                          <div class=\"terms cs2\">\n                            <Button\n                             color=\"primary\"\n                              // className=\"menubuttonreset\"\n                              onClick={openfileuploader}\n                            >\n                              Upload Docs\n                            </Button>\n                          </div>\n\n                          {!showrankorpdf && (\n                            <div class=\"terms cs2\">\n                              <Button\n                               color=\"primary\"\n                                className=\"menubutton2\"\n                                onClick={openrankeddocs}\n                              >\n                                SHOW RANKS\n                              </Button>\n                            </div>\n                          )}\n                          <div class=\"terms cs1\"></div>\n                        </div>\n\n                        {showrankorpdf ? (\n                         \n                            <DocRankUI\n                              results={docranks}\n                              showthispdf={showthispdf}\n                            />\n                          \n                        ) : (\n                          <>\n                            <div className=\"mac-book-pro141-container\">\n                              <div id=\"pdf-main-container\">\n                                <HtmlViewer html={htmls} />\n                              </div>\n                              <div class=\"terms col-sm-3\">\n                                <h1>Terms</h1>\n                                <CheckboxList\n                                  currShowing={currShowing}\n                                  results={docranks}\n                                  terms={querymap}\n                                  colorMap={colorMap}\n                                  checkedTerms={checkedTerms}\n                                  setCheckedTerms={setCheckedTerms}\n                                  onCheckedTerms={handleCheckedTerms}\n                                />\n                              </div>\n                            </div>\n                          </>\n                        )}\n                      </>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                )}\n            \n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/reportWebVitals.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/CheckboxList.js",["171","172"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction CheckboxList({ results,currShowing, terms, checkedTerms, setCheckedTerms, onCheckedTerms, colorMap }) {\n\n  useEffect(() => {\n    onCheckedTerms(checkedTerms);\n  }, [checkedTerms]);\n\n  useEffect(() => {\n    console.log(terms);\n  }, [terms]);\n  const [wordc,setwordc]=useState({});\n\n\n\n  \n  useEffect(()=>{\n\n    const baseFileName = currShowing.replace(\".html\", \".pdf\");\n    let wordCounts = {};\n    for (let fileObj of results) {\n      if (fileObj.name === baseFileName) {\n        \n          for (let matchedWord of fileObj.matchedWords) {\n              wordCounts[matchedWord.word] = matchedWord.count;\n          }\n         \n      }\n     \n  }\n  console.log(\"wordCounts\");\n  console.log(wordCounts);\n  setwordc(wordCounts);\n\n  },[currShowing])\n\n\n  const handleCheckboxChange = (event) => {\n    setCheckedTerms({\n      ...checkedTerms,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  return (\n    <form>\n      {Object.keys(terms).map((term) => (\n        <div style={{'font-size':'large'}} key={term}>\n          <label>\n            <input\n              type=\"checkbox\"\n              name={term}\n              checked={checkedTerms[term] || false}\n              onChange={handleCheckboxChange}\n            />\n            {`${term}    (${wordc[term] || 0})`}\n          </label> \n          \n          <span style={{ display: 'inline-block', marginLeft: '10px' }}>\n            <div\n              style={{\n                width: '15px',\n                height: '15px',\n                borderRadius: '50%',\n                backgroundColor: colorMap[term],\n              }}\n            >\n            </div>\n          </span>\n        </div>\n      ))}\n    </form>\n  );\n}\n\nexport default CheckboxList;\n","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/SearchResults.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/store.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/FileUpload.js",["173","174","175","176","177"],[],"import React, { Component } from \"react\";\nimport \"./style.css\"; // import the CSS file with the styles\nimport * as pdfjsLib from 'pdfjs-dist'\nimport { pdfjs, Document } from 'react-pdf';\nimport \"./fileselector.css\"\n// import { Document } from 'react-pdf';\nconst apiUrl = process.env.REACT_APP_API_URL;\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      files: [],\n      loaded: 0,\n      total: 0,\n      error: null,\n      text: {},\n      loadingFiles: false,\n      showcompletebutton: false,\n    };\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n  }\n\n  handleFileChange = async (event) => {\n    this.props.setIsLoading(true);\n    this.setState({ loadingFiles: true });\n\n    const files = event.target.files;\n    const namf = [];\n    const textData = {};\n\n    try {\n      for (const file of files) {\n        const filename = file.name;\n        const pdfData = await this.readFileAsync(file);\n        const pdfText = await this.extractTextFromPdf(pdfData);\n\n        namf.push(filename);\n        textData[filename] = pdfText;\n      }\n\n      this.setState({\n        files: [...this.state.files, ...files],\n        text: { ...this.state.text, ...textData },\n        fileNames: namf,\n\n\n      }, () => {\n        this.props.setFileText(this.state.text);\n        this.props.setFileNames(this.state.fileNames);\n        this.setState({ loadingFiles: false, showcompletebutton: true });\n        this.props.setIsLoading(false);\n        \n      });\n    } catch (error) {\n      console.error('Error loading files:', error);\n      this.setState({ loadingFiles: false });\n      this.props.setIsLoading(false);\n    }\n  };\n\n\n  readFileAsync = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        resolve(new Uint8Array(reader.result));\n      };\n\n      reader.onerror = (error) => {\n        reject(error);\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  };\n\n  extractTextFromPdf = async (pdfData) => {\n    const loadingTask = pdfjsLib.getDocument({ data: pdfData });\n    const pdf = await loadingTask.promise;\n    let text = '';\n    for (let i = 1; i <= pdf.numPages; i++) {\n      const page = await pdf.getPage(i);\n      const pageText = await page.getTextContent();\n      pageText.items.forEach((item) => {\n\n        let spacedText = item.str.replace(/([a-z])([A-Z])/g, '$1 $2');\n\n        spacedText = spacedText + \" \";\n        text += spacedText;\n      });\n    }\n    console.log(\"hello  \" + text);\n    return text.toLowerCase();\n  }\n\n\n  handleUpload = () => {\n    this.props.setIsLoading(true);\n\n    const chunkSize = 1000 * 1024 * 1024;\n    const { files } = this.state;\n    const uploadChunk = (file, start, end) => {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        const newName = file.name;\n\n        formData.append(\"myFile\", file.slice(start, end), newName);\n\n        fetch(`${apiUrl}/api/upload`, {\n          method: \"POST\",\n          body: formData,\n        })\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error(\"Network response was not ok\");\n            }\n            resolve();\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      });\n    };\n\n    const uploadFile = (file) => {\n      const fileSize = file.size;\n      const chunks = Math.ceil(fileSize / chunkSize);\n      let currentChunk = 0;\n\n      const chunkPromises = [];\n\n      for (let i = 0; i < chunks; i++) {\n        const start = i * chunkSize;\n        const end = (i + 1) * chunkSize;\n        chunkPromises.push(uploadChunk(file, start, end));\n      }\n\n      return Promise.all(chunkPromises);\n    };\n\n    Promise.all(files.map(uploadFile))\n      .then(() => {\n        this.props.setIsLoading(false);\n        this.props.closefileinput();\n        alert(\"files successfully uploaded !\");\n      })\n      .catch((error) => {\n        console.error(\"Error during file uploads:\", error);\n        this.props.setIsLoading(false);\n      });\n  };\n\n\n  render() {\n    const { loaded, total, error } = this.state;\n    const progress = total === 0 ? 0 : Math.round((loaded / total) * 100);\n\n    return (\n      <div>\n        <div >\n\n          {!this.state.showcompletebutton ?\n            <label htmlFor=\"file-input\" className=\"file-input-label\">\n              <div className=\"filetext\" >Click here to Select Files to Upload</div>\n              <input id=\"file-input\" type=\"file\" name=\"file\" accept=\"application/pdf\" onChange={this.handleFileChange} multiple className=\"file-input\" />\n            </label>\n            :\n            <>\n\n              {/* {this.state.files && this.state.files.length > 0 ?\n                <div className=\"filetext\" >{this.state.files.length} files selected.</div>\n\n                : ''}\n\n              {this.state.files && this.state.files.length > 0 ?\n\n                <div className=\"selectedfiles\">{this.state.fileNames.map((ff) => <div className=\"filenametext\">{ff}</div>)}</div>\n\n                : ''} */}\n\n              {this.state.files && this.state.files.length > 0 &&\n                <button disabled={this.state.loadingFiles} onClick={this.handleUpload} className=\"file-input-label\">\n                <div className=\"mac-book-pro141-materialsymbolsupload\"></div>\n                <div className=\"filetext\" >Click to upload {this.state.files.length} selected papers.</div>\n              </button>}\n            </>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/HtmlViewer.js",["178","179","180","181","182","183","184","185"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport \"./HTMLViewer.css\"; // Import your CSS file if needed\nimport htmlpdfviewer from 'html-pdf-viewer';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearchPlus, faSearchMinus } from '@fortawesome/free-solid-svg-icons';\n\n\nconst HTMLViewer = ({ html }) => {\n\n  const [scale, setScale] = useState(1.2); // Initial scale factor\n\n  const [pageNum, setPageNum] = useState(1); // State to keep track of current page number\n\n  const [htmlWidth, setHtmlWidth] = useState(0); // State to store the width of HTML content\n  const hiddenDivRef = useRef(null); // Ref for hidden div\n  \n  useEffect(() => {\n    const tempDiv = document.createElement(\"div\");\n    tempDiv.innerHTML = html;\n    tempDiv.style.visibility = \"hidden\";\n    document.body.appendChild(tempDiv);\n  \n    // Check if sidebar and pagecontainer exist before accessing their properties\n    const sidebarElement = tempDiv.querySelector(\"#sidebar\");\n    const pageContainerElement = tempDiv.querySelector(\"#page-container\");\n    \n    if (sidebarElement && pageContainerElement) {\n      const sidebarWidth = sidebarElement.offsetWidth;\n      console.log(\"Width of sidebar:\", sidebarWidth);\n      \n      const pageContainerWidth = pageContainerElement.offsetWidth;\n      console.log(\"Width of pagecontainer:\", pageContainerWidth);\n\n\n      if (pageContainerElement<650){\n        setScale(scale+1);\n\n      }\n    } else {\n      console.error(\"Could not find sidebar or pagecontainer element in HTML.\");\n    }\n  \n    // Cleanup: remove the temporary div from the DOM\n    document.body.removeChild(tempDiv);\n  }, []);\n  \n\n\n  const handleZoomIn = () => {\n    setScale(scale + 0.1); // Increase scale factor by 0.1\n  };\n\n  const handleZoomOut = () => {\n    if(scale>1.1){\n      setScale(scale - 0.1); \n    }\n    // Decrease scale factor by 0.1\n  };\n\n  useEffect(()=>{console.log(scale)},[scale])\n  useEffect(() => {\n    setPageNum(1);\n\n   \n  }, [html]); // Reset page number whenever the HTML changes\n\n  const goToPrevPage = () => {\n    if (pageNum > 1) {\n      setPageNum(pageNum - 1);\n    }\n  };\n\n  const viewPdf = () => {\n    return htmlpdfviewer(html, { output: { mode: 'display', container: '#iframeId', height: 800 } });\n  }\n\n  const goToNextPage = () => {\n    const iframe = document.getElementById(\"viewer-iframe\");\n    const numPages = iframe.contentWindow.document.querySelectorAll(\"body > div\").length;\n    if (pageNum < numPages) {\n      setPageNum(pageNum + 1);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"pdfcontainerinside\">\n\n        <button onClick={handleZoomIn}>\n  <FontAwesomeIcon icon={faSearchPlus} /> Zoom In\n</button>\n<button onClick={handleZoomOut}>\n  <FontAwesomeIcon icon={faSearchMinus} /> Zoom Out\n</button>\n\n\n      {/* </div> */}\n      <div className=\"iframe-container\">\n        <iframe\n          id=\"viewer-iframe\"\n          title=\"HTML Viewer\"\n          srcDoc={html}\n          style={{\n            transform: `scale(${scale})`, // Dynamically set the scale factor\n            transformOrigin: \"0 0\", // Set the origin of transformation\n          }}\n        />\n      </div>\n     \n    </div>\n    </>\n  );\n};\n\nexport default HTMLViewer;\n","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/Box.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/Loader.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/textinput.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/DocumentList.js",["186","187"],[],"import React from \"react\";\nimport \"./stylesSR.css\";\n\nfunction SearchResult({ doc }) {\n\n  const title = doc?.document?.title ?? \"\";\n  const url = doc?.document?.url ?? \"\";\n\n\n  const handleButtonClick = (url) => {\n    // Open URL in a new tab\n    window.open(url, '_blank');\n  };\n\n\n\n  return (\n    <div className=\"search-result\">\n      <div className=\"name\">{title}</div>\n      {/* <div className=\"score\"> */}\n      {/* </div> */}\n\n      {/* <div className=\"matched-words\">\n      {matchedWords.length > 0 && (\n        <div className=\"matched-words-container\">\n          <div className=\"matched-words-title\">Matched Words:</div>\n          <div className=\"matched-words-scroll\">\n            {matchedWords.map((word) => (\n              <div className=\"matched-word\" key={word[\"word\"]}>\n                {word[\"word\"]} {word[\"count\"]}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>*/}\n      <div>\n        <button\n          onClick={() => {\n            handleButtonClick(url);\n          }}\n          className=\"opendocbutton\"\n        >\n          show\n        </button>\n      </div>\n    </div>\n\n  );\n}\n\n\nfunction Fnames({ fname }) {\n\n  return (\n    <div className=\"search-result\">\n      <div className=\"name\">{fname}</div>\n      {/* <div className=\"score\"> */}\n      {/* </div> */}\n\n      {/* <div className=\"matched-words\">\n      {matchedWords.length > 0 && (\n        <div className=\"matched-words-container\">\n          <div className=\"matched-words-title\">Matched Words:</div>\n          <div className=\"matched-words-scroll\">\n            {matchedWords.map((word) => (\n              <div className=\"matched-word\" key={word[\"word\"]}>\n                {word[\"word\"]} {word[\"count\"]}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>*/}\n    \n    </div>\n\n  );\n}\n\nexport default function DocumentList({ fileNames, documents, handleCheckboxChange,setshowdocs }) {\n  return (\n    <div className=\"search-results-container\">\n\n      <div class=\"filelistbutdiv\">\n        <button className=\"filelistbut\" onClick={() => { setshowdocs(false) }}>Close</button>\n      </div> \n     \n      {  (fileNames.length==0 && documents.length == 0)  && <div className=\"sciresfilessec\">\n        <div className=\"sciresfiles\">No Files Present</div>\n        {fileNames.map((fname, index) => (\n          <Fnames key={index} fname={fname} />\n        ))}\n      </div>}\n      \n      {documents.length > 0 && <> <div className=\"sciresfilessec\">\n        <div className=\"sciresfiles\">Files From SCIRES</div>\n        {documents.map((doc, index) => (\n          <SearchResult key={index} doc={doc} />\n        ))}\n      </div>\n        <hr /></>}\n\n      {fileNames.length>0 && <div className=\"sciresfilessec\">\n        <div className=\"sciresfiles\">Uploaded Files</div>\n        {fileNames.map((fname, index) => (\n          <Fnames key={index} fname={fname} />\n        ))}\n      </div>}\n    </div>\n  );\n}\n","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/AddTerm.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/DocRankUI.js",["188","189"],[],"import React, { useState } from \"react\";\nimport \"./DocRankUI.css\";\nimport SearchResults from \"./SearchResults\";\nimport FileUpload from \"./FileUpload\";\n\nconst useColorAssignment = (initialColors) => {\n    const [colors, setColors] = useState(initialColors);\n\n    const assignColor = () => {\n        if (colors.length === 0) return null;\n\n        const randomIndex = Math.floor(Math.random() * colors.length);\n        const color = colors[randomIndex];\n        setColors((prevColors) => prevColors.filter((c, index) => index !== randomIndex));\n\n        return color;\n    };\n\n    return assignColor;\n};\n\n\nfunction DocRankUI({ results,showthispdf }) {\n\n\n\n    return (\n        <div className=\"mac-book-pro142-group9\">\n            \n               {results.length>0 &&\n               <SearchResults results={results} showthispdf={showthispdf} />\n               } \n        \n\n            {/* <div className=\"mac-book-pro142-donebutton\" onClick={() => closefileinput()}>\n                <span className=\"mac-book-pro142-text12\">\n                    <span>DONE</span>\n                </span>\n            </div> */}\n            <div className=\"mac-book-pro142-frame2\"></div>\n        </div>\n    );\n}\n\nexport default DocRankUI;\n\n\n","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/headercomp.js",["190","191","192","193","194","195","196","197","198","199","200"],[],"import React, { useState, useEffect } from \"react\";\n\nimport { NavbarBrand, Navbar, Nav, NavItem, NavbarToggler, Collapse, Container } from 'reactstrap';\n\nimport logo from './assets/images/logos/arguslogo3.jpg';\n\nimport \"./assets/scss/common.scss\";\nimport \"./assets/scss/style.scss\";\n\n\n\nexport default function HeaderPage() {\n\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const [modal2, setModal2] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n\n\n  return (\n    <div>\n\n    \n          {/* header */}\n          <div className=\"header6\">\n            <Container className=\"po-relative\">\n              <Navbar className=\"navbar-expand-lg h6-nav-bar\">\n                <NavbarBrand href=\"/\"><img className=\"logostyle\" src={logo} alt=\"wrapkit\" /></NavbarBrand>\n                <NavbarToggler ><span className=\"ti-menu\"></span></NavbarToggler>\n                <Collapse isOpen={true} navbar className=\"hover-dropdown font-14 justify-content-end\" id=\"h6-info\">\n                  <Nav navbar className=\"ms-auto\">\n                    <NavItem>\n                      {/* <Link className=\"nav-link\" to={\"/\"}> */}\n                      Read More\n                      {/* </Link> */}\n                    </NavItem>\n                \n                  </Nav>\n                  <div className=\"act-buttons\">\n                    {/* <Link to=\"/#coming\" className=\"btn btn-success-gradiant font-14\">Upgrade To Pro</Link> */}\n                  </div>\n                </Collapse>\n              </Navbar>\n            </Container>\n          </div>\n          {/* header */}\n\n      \n    </div>\n  );\n\n\n}","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/footercomp.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214"],[],"import React, { useState, useEffect } from \"react\";\n\n\nimport { Pagination, PaginationItem, PaginationLink, Container, Row, Col } from 'reactstrap';\n\n\n\nimport \"./assets/scss/common.scss\";\nimport \"./assets/scss/style.scss\";\n\nexport default function FooterPage() {\n\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const [modal2, setModal2] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n\n\n  return (\n    <div>\n\n\n        {/* footer */}\n\n        <div className=\"footer4 b-t spacer\">\n            <Container>\n                <Row>\n                    {/* <Col lg=\"3\" md=\"6\" className=\"m-b-30\">\n                        <h5 className=\"m-b-20\">Address</h5>\n                        <p>Binghamton, New York</p>\n                    </Col> */}\n                    {/* <Col lg=\"3\" md=\"6\" className=\"m-b-30\">\n                        <h5 className=\"m-b-20\">Phone</h5>\n                        <p>Reception :  +205 123 4567 <br />Office :  +207 235 7890</p>\n                    </Col> */}\n                    {/* <Col lg=\"3\" md=\"6\" className=\"m-b-30\">\n                        <h5 className=\"m-b-20\">Email</h5>\n                        <p>Office :  <a href=\"#\" className=\"link\">info@wrappixel.com</a> <br />Site :  <a href=\"#\" className=\"link\">wrapkit@wrappixel.com</a></p>\n                    </Col> */}\n                    <Col lg=\"5\" md=\"6\">\n                        <h5 className=\"m-b-20\">Binghamton University. All Rights Reserved.</h5>\n                        {/* <div className=\"round-social light\">\n                            <a href=\"#\" className=\"link\"><i className=\"fa fa-facebook\"></i></a>\n                            <a href=\"#\" className=\"link\"><i className=\"fa fa-twitter\"></i></a>\n                            <a href=\"#\" className=\"link\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a href=\"#\" className=\"link\"><i className=\"fa fa-youtube-play\"></i></a>\n                            <a href=\"#\" className=\"link\"><i className=\"fa fa-instagram\"></i></a>\n                        </div> */}\n                    </Col>\n                </Row>\n                <div className=\"f4-bottom-bar\">\n                    <Row>\n                        <Col md=\"12\">\n                            <div className=\"d-flex font-14 justify-content-between\">\n                                <div className=\"m-t-10 m-b-10 copyright\">                 \n</div>\n                              \n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n        \n        {/* footer */}\n\n    </div>\n  );\n\n\n}","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/bodycomp.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],[],"import React, { useState, useEffect } from \"react\";\n\nimport { Pagination, PaginationItem, PaginationLink, Container, Row, Col } from 'reactstrap';\n\n\nimport userstory from './assets/images/landingpage/userstory.png';\n\nimport {\n  Accordion,\n  AccordionBody,\n  AccordionHeader,\n  AccordionItem,\n} from 'reactstrap';\n\nimport \"./assets/scss/common.scss\";\nimport \"./assets/scss/style.scss\";\n\nexport default function BodyPage({ setisonLanding }) {\n\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const [modal2, setModal2] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const [open, setOpen] = useState('');\n  const toggle = (id) => {\n    if (open === id) {\n      setOpen();\n    } else {\n      setOpen(id);\n    }\n  };\n\n  return (\n    <div>\n      {/* banner */}\n\n      <div className=\"page-wrapper\">\n        <div className=\"container-fluid\">\n          <div className=\"static-slider-head\">\n            <Container>\n              <Row className=\"justify-content-center\">\n                <Col lg=\"8\" md=\"6\" className=\"align-self-center text-center\">\n                  <h1 className=\"title\">ARGUS</h1>\n                  <h4 className=\"subtitle font-light\">\n                    Automated Research Guidance & User Support\n                  </h4>\n                  <div\n                    onClick={() => {\n                      setisonLanding(false);\n                    }}\n                    className=\"btn btn-md m-t-30 btn-info-gradiant font-14\"\n                  >\n                    Go To Tool\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </div>\n      </div>\n\n      {/* banner */}\n\n      <div className=\"landing-page\">\n        <div className=\"spacer\" id=\"pagination-component\">\n          <Container>\n            {/* Additional sections with similar styling */}\n\n            <div className=\"section future-development\" style={{ backgroundColor: '#f9f9f9', padding: '40px', borderRadius: '15px' }}>\n              <h4 className=\"argus-card-title\" style={{ color: '#4caf50' }}>ARGUS: ARGUS: Drowning in PDFs? ARGUS can help!</h4>\n              <ul className=\"argus-list\" style={{ color: '#333' }}>\n                <li>ARGUS, is a software application designed to assist researchers in analyzing retrieved research articles as part of a systematic review process. It automates tedious tasks like reading and scanning text, extracting key information, and populating data into forms, significantly reducing manual effort.</li>\n              </ul>\n              <p className=\"bodyfont\" style={{ color: '#333' }}>By leveraging ARGUS's capabilities, researchers can significantly improve the efficiency and accuracy of their systematic review processes.</p>\n            </div>\n\n            {/* Additional sections with similar styling */}\n\n            {/* <div className=\"section user-journey\" style={{ backgroundColor: '#ffffff', padding: '40px', borderRadius: '15px' }}>\n              <h4 className=\"argus-card-title\" style={{ color: '#4caf50' }}>User Journey:</h4>\n              <p className=\"bodyfont\" style={{ color: '#333' }}>Understanding the user journey is crucial for enhancing ARGUS's usability and effectiveness. Here's a glimpse:</p>\n              <img className=\"userstory\" src={userstory} alt=\"User Journey\" style={{ maxWidth: '100%', borderRadius: '10px' }} />\n            </div> */}\n          </Container>\n        </div>\n      </div>\n\n      {/* ---- */}\n\n\n\n\n\n      {/* Benefits */}\n      <div className=\"landing-page\">\n        <div className=\"spacer\" id=\"pagination-component\">\n\n          <Container>\n            <h4 className=\"argus-card-title\">BENEFITS</h4>\n            <div className=\"section functionalities\" style={{ backgroundColor: '#f9f9f9', padding: '40px', borderRadius: '15px' }}>\n              <div>\n                <Accordion flush open={open} toggle={toggle}>\n\n                  <AccordionItem>\n                    <AccordionHeader targetId=\"1\"> <h3 style={{ color: '#4caf50' }}>Increased Efficiency</h3></AccordionHeader>\n                    <AccordionBody accordionId=\"1\">\n                      <p className=\"bodyfont\">Automates tedious tasks, such as text scanning and data extraction, speeding up research analysis and saving valuable time.</p>\n                    </AccordionBody>\n                  </AccordionItem>\n\n                  <AccordionItem>\n                    <AccordionHeader targetId=\"2\"> <h3 style={{ color: '#4caf50' }}>Improved Accuracy</h3></AccordionHeader>\n                    <AccordionBody accordionId=\"2\">\n                    <p className=\"bodyfont\">Reduces errors associated with manual data entry, ensuring the accuracy and reliability of research findings.</p>\n                    </AccordionBody>\n                  </AccordionItem>\n\n                  <AccordionItem>\n                    <AccordionHeader targetId=\"3\"> <h3 style={{ color: '#4caf50' }}>Streamlined Data Organization</h3></AccordionHeader>\n                    <AccordionBody accordionId=\"3\">\n                    <p className=\"bodyfont\">Automatically organizes extracted information, simplifying data management and enhancing workflow efficiency.</p>\n                    </AccordionBody>\n                  </AccordionItem>\n                  <AccordionItem>\n                    <AccordionHeader targetId=\"4\"> <h3 style={{ color: '#4caf50' }}>Focused Research Exploration</h3></AccordionHeader>\n                    <AccordionBody accordionId=\"4\">\n                    <p className=\"bodyfont\">Allows researchers to dedicate more time to analyzing data and gaining insights, leading to more informed decisions and deeper exploration.\n</p>\n                    </AccordionBody>\n                  </AccordionItem>\n                </Accordion>\n              </div>\n            </div>\n          </Container>\n\n        </div>\n      </div>\n\n      {/* Benefits */}\n\n\n\n      <div className=\"landing-page\">\n        <div className=\"spacer\" id=\"pagination-component\">\n          <Container>\n            {/* <div className=\"section functionalities\">\n              <h4 className=\"argus-card-title\">Functionalities:</h4>\n              <ul className=\"argus-list\">\n                <li className=\"argus-list-item\">\n                  <h3>Keyword/Term Input:</h3>\n                  <p className=\"bodyfont\">Users can specify keywords or phrases to guide ARGUS's information extraction process. This allows for targeted analysis based on specific research questions. Multiple keywords can be inserted separated by a semi colon ‘;’</p>\n                </li>\n                <li className=\"argus-list-item\">\n                  <h3>Research Article Upload:</h3>\n                  <p className=\"bodyfont\">ARGUS supports uploading research articles in PDF format. The application can handle single documents or batches of PDFs for efficient processing.</p>\n                </li>\n                <li className=\"argus-list-item\">\n                  <h3>Text Scanning and Information Extraction:</h3>\n                  <p className=\"bodyfont\">ARGUS automatically scans uploaded articles and extracts key information. This extraction can be based on:</p>\n                  <ul className=\"argus-list\">\n                    <li className=\"bodyfont\">Pre-defined rules: You can set up rules to identify specific sections or patterns within research articles (e.g., title, abstract, methodology).</li>\n                    <li className=\"bodyfont\">User-specified parameters: You can define custom parameters for ARGUS to focus on extracting particular information relevant to your research.</li>\n                  </ul>\n                </li>\n                <li className=\"argus-list-item\">\n                  <h3>Form Filling:</h3>\n                  <p className=\"bodyfont\">The extracted information can be used to populate designated fields within forms (e.g., Google Forms) for efficient data organization and analysis. This reduces the need for manual data entry and streamlines the data collection process.</p>\n                </li>\n              </ul>\n            </div> */}\n\n     \n            {/* <div className=\"section future-development\">\n              <h4 className=\"argus-card-title\">User Journey:</h4>\n              <p className=\"bodyfont\"></p>\n              <img className=\"userstory\" src={userstory}></img>\n            </div> */}\n\n\n            <div className=\"section how-to-use\">\n              <h4 className=\"argus-card-title\">How-to-Use:</h4>\n              <ol className=\"argus-list bodyfont\">\n                <li>Define Keywords/Parameters: Specify the keywords or custom parameters for information extraction to guide ARGUS's focus during the analysis.</li>\n                <li>Upload Research Articles: Upload your research articles in PDF format (single or batch upload supported).</li>\n                <li>Run Analysis: Initiate the analysis process. ARGUS will scan the uploaded articles and extract information based on your defined criteria.</li>\n                <li>Review Extracted Data: Review the extracted information within the designated form or output format.</li>\n                <li>Refine (Optional): If needed, you can further refine the extraction rules or parameters for more precise results.</li>\n              </ol>\n            </div>\n            {/* how to use */}\n\n\n\n          </Container>\n        </div>\n      </div>\n\n\n    </div>\n  );\n\n\n}","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/fileselector.js",["230","231","232","233","234","235","236","237","238","239"],[],"import React, { useState } from \"react\";\nimport \"./fileselector.css\";\nimport FileUpload from \"./FileUpload\";\nimport {\n    NavbarBrand,\n    Navbar,\n    Nav,\n    NavItem,\n    NavbarToggler,\n    Collapse,\n    Modal,\n    ModalBody\n  } from \"reactstrap\";\n\n\n\nconst useColorAssignment = (initialColors) => {\n    const [colors, setColors] = useState(initialColors);\n\n\n    const assignColor = () => {\n        if (colors.length === 0) return null;\n\n        const randomIndex = Math.floor(Math.random() * colors.length);\n        const color = colors[randomIndex];\n        setColors((prevColors) => prevColors.filter((c, index) => index !== randomIndex));\n\n        return color;\n    };\n\n    return assignColor;\n};\n\n\nfunction FileInput({ fileNames, setshowfileselector,showfileselector,setIsLoading, setFileText, setFileNames, closefileinput }) {\n\n    const toggle=()=>{\n        setshowfileselector(false)\n\n    }\n    \n\n    return (\n        // <div className = \"contentfs\">\n\n        <div className=\"mac-book-pro142-group9fs\">\n        {/* <Modal isOpen={showfileselector} toggle={toggle.bind(null)} > */}\n    \n            <FileUpload setIsLoading={setIsLoading} setFileText={setFileText} closefileinput={closefileinput} setFileNames={setFileNames} />\n\n\n            <button className=\"mac-book-pro142-donebuttonfs\" onClick={() => closefileinput()}>BACK</button>\n            <div className=\"mac-book-pro142-frame2\"></div>\n           \n        {/* </Modal> */}\n        </div>\n     \n    );\n}\n\nexport default FileInput;\n\n\n","/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/reducers/index.js",[],[],"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/about.js",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],[],{"ruleId":"258","severity":1,"message":"259","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":18},{"ruleId":"258","severity":1,"message":"262","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":21},{"ruleId":"258","severity":1,"message":"263","line":9,"column":8,"nodeType":"260","messageId":"261","endLine":9,"endColumn":11},{"ruleId":"258","severity":1,"message":"264","line":10,"column":8,"nodeType":"260","messageId":"261","endLine":10,"endColumn":16},{"ruleId":"258","severity":1,"message":"265","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":14},{"ruleId":"258","severity":1,"message":"266","line":15,"column":10,"nodeType":"260","messageId":"261","endLine":15,"endColumn":21},{"ruleId":"258","severity":1,"message":"267","line":17,"column":8,"nodeType":"260","messageId":"261","endLine":17,"endColumn":15},{"ruleId":"258","severity":1,"message":"268","line":33,"column":10,"nodeType":"260","messageId":"261","endLine":33,"endColumn":14},{"ruleId":"258","severity":1,"message":"269","line":33,"column":24,"nodeType":"260","messageId":"261","endLine":33,"endColumn":33},{"ruleId":"258","severity":1,"message":"270","line":33,"column":35,"nodeType":"260","messageId":"261","endLine":33,"endColumn":43},{"ruleId":"258","severity":1,"message":"271","line":40,"column":15,"nodeType":"260","messageId":"261","endLine":40,"endColumn":21},{"ruleId":"258","severity":1,"message":"272","line":41,"column":10,"nodeType":"260","messageId":"261","endLine":41,"endColumn":15},{"ruleId":"258","severity":1,"message":"273","line":42,"column":10,"nodeType":"260","messageId":"261","endLine":42,"endColumn":16},{"ruleId":"258","severity":1,"message":"274","line":43,"column":10,"nodeType":"260","messageId":"261","endLine":43,"endColumn":16},{"ruleId":"258","severity":1,"message":"275","line":44,"column":10,"nodeType":"260","messageId":"261","endLine":44,"endColumn":20},{"ruleId":"258","severity":1,"message":"276","line":44,"column":22,"nodeType":"260","messageId":"261","endLine":44,"endColumn":35},{"ruleId":"258","severity":1,"message":"277","line":45,"column":23,"nodeType":"260","messageId":"261","endLine":45,"endColumn":37},{"ruleId":"258","severity":1,"message":"278","line":46,"column":10,"nodeType":"260","messageId":"261","endLine":46,"endColumn":22},{"ruleId":"258","severity":1,"message":"279","line":46,"column":24,"nodeType":"260","messageId":"261","endLine":46,"endColumn":39},{"ruleId":"258","severity":1,"message":"280","line":47,"column":10,"nodeType":"260","messageId":"261","endLine":47,"endColumn":23},{"ruleId":"258","severity":1,"message":"281","line":48,"column":10,"nodeType":"260","messageId":"261","endLine":48,"endColumn":21},{"ruleId":"258","severity":1,"message":"282","line":48,"column":23,"nodeType":"260","messageId":"261","endLine":48,"endColumn":37},{"ruleId":"258","severity":1,"message":"283","line":49,"column":10,"nodeType":"260","messageId":"261","endLine":49,"endColumn":23},{"ruleId":"258","severity":1,"message":"284","line":49,"column":25,"nodeType":"260","messageId":"261","endLine":49,"endColumn":41},{"ruleId":"258","severity":1,"message":"285","line":52,"column":10,"nodeType":"260","messageId":"261","endLine":52,"endColumn":22},{"ruleId":"258","severity":1,"message":"286","line":54,"column":10,"nodeType":"260","messageId":"261","endLine":54,"endColumn":18},{"ruleId":"258","severity":1,"message":"287","line":54,"column":20,"nodeType":"260","messageId":"261","endLine":54,"endColumn":31},{"ruleId":"258","severity":1,"message":"288","line":56,"column":10,"nodeType":"260","messageId":"261","endLine":56,"endColumn":18},{"ruleId":"258","severity":1,"message":"289","line":56,"column":20,"nodeType":"260","messageId":"261","endLine":56,"endColumn":31},{"ruleId":"258","severity":1,"message":"290","line":60,"column":10,"nodeType":"260","messageId":"261","endLine":60,"endColumn":18},{"ruleId":"258","severity":1,"message":"291","line":61,"column":10,"nodeType":"260","messageId":"261","endLine":61,"endColumn":17},{"ruleId":"258","severity":1,"message":"292","line":61,"column":19,"nodeType":"260","messageId":"261","endLine":61,"endColumn":29},{"ruleId":"258","severity":1,"message":"293","line":66,"column":10,"nodeType":"260","messageId":"261","endLine":66,"endColumn":16},{"ruleId":"258","severity":1,"message":"294","line":67,"column":10,"nodeType":"260","messageId":"261","endLine":67,"endColumn":18},{"ruleId":"258","severity":1,"message":"295","line":72,"column":10,"nodeType":"260","messageId":"261","endLine":72,"endColumn":21},{"ruleId":"258","severity":1,"message":"296","line":83,"column":20,"nodeType":"260","messageId":"261","endLine":83,"endColumn":32},{"ruleId":"258","severity":1,"message":"297","line":85,"column":9,"nodeType":"260","messageId":"261","endLine":85,"endColumn":23},{"ruleId":"258","severity":1,"message":"298","line":176,"column":9,"nodeType":"260","messageId":"261","endLine":176,"endColumn":25},{"ruleId":"258","severity":1,"message":"299","line":226,"column":10,"nodeType":"260","messageId":"261","endLine":226,"endColumn":16},{"ruleId":"258","severity":1,"message":"300","line":227,"column":10,"nodeType":"260","messageId":"261","endLine":227,"endColumn":16},{"ruleId":"258","severity":1,"message":"301","line":348,"column":11,"nodeType":"260","messageId":"261","endLine":348,"endColumn":22},{"ruleId":"258","severity":1,"message":"302","line":367,"column":9,"nodeType":"260","messageId":"261","endLine":367,"endColumn":27},{"ruleId":"258","severity":1,"message":"303","line":390,"column":11,"nodeType":"260","messageId":"261","endLine":390,"endColumn":21},{"ruleId":"304","severity":1,"message":"305","line":470,"column":9,"nodeType":"306","messageId":"307","endLine":515,"endColumn":10},{"ruleId":"308","severity":1,"message":"309","line":550,"column":6,"nodeType":"310","endLine":550,"endColumn":18,"suggestions":"311"},{"ruleId":"258","severity":1,"message":"312","line":552,"column":18,"nodeType":"260","messageId":"261","endLine":552,"endColumn":25},{"ruleId":"258","severity":1,"message":"313","line":586,"column":9,"nodeType":"260","messageId":"261","endLine":586,"endColumn":20},{"ruleId":"258","severity":1,"message":"314","line":632,"column":12,"nodeType":"260","messageId":"261","endLine":632,"endColumn":22},{"ruleId":"258","severity":1,"message":"315","line":644,"column":12,"nodeType":"260","messageId":"261","endLine":644,"endColumn":26},{"ruleId":"258","severity":1,"message":"316","line":648,"column":12,"nodeType":"260","messageId":"261","endLine":648,"endColumn":22},{"ruleId":"258","severity":1,"message":"317","line":660,"column":12,"nodeType":"260","messageId":"261","endLine":660,"endColumn":22},{"ruleId":"258","severity":1,"message":"318","line":687,"column":9,"nodeType":"260","messageId":"261","endLine":687,"endColumn":13},{"ruleId":"308","severity":1,"message":"319","line":711,"column":6,"nodeType":"310","endLine":711,"endColumn":24,"suggestions":"320"},{"ruleId":"258","severity":1,"message":"321","line":716,"column":11,"nodeType":"260","messageId":"261","endLine":716,"endColumn":18},{"ruleId":"258","severity":1,"message":"321","line":787,"column":11,"nodeType":"260","messageId":"261","endLine":787,"endColumn":18},{"ruleId":"258","severity":1,"message":"322","line":881,"column":34,"nodeType":"260","messageId":"261","endLine":881,"endColumn":43},{"ruleId":"323","severity":1,"message":"324","line":939,"column":18,"nodeType":"325","messageId":"326","endLine":939,"endColumn":20},{"ruleId":"323","severity":1,"message":"324","line":965,"column":20,"nodeType":"325","messageId":"326","endLine":965,"endColumn":22},{"ruleId":"258","severity":1,"message":"327","line":973,"column":12,"nodeType":"260","messageId":"261","endLine":973,"endColumn":21},{"ruleId":"308","severity":1,"message":"328","line":7,"column":6,"nodeType":"310","endLine":7,"endColumn":20,"suggestions":"329"},{"ruleId":"308","severity":1,"message":"330","line":35,"column":5,"nodeType":"310","endLine":35,"endColumn":18,"suggestions":"331"},{"ruleId":"258","severity":1,"message":"332","line":4,"column":17,"nodeType":"260","messageId":"261","endLine":4,"endColumn":25},{"ruleId":"304","severity":1,"message":"333","line":86,"column":30,"nodeType":"306","messageId":"307","endLine":92,"endColumn":8},{"ruleId":"258","severity":1,"message":"334","line":130,"column":11,"nodeType":"260","messageId":"261","endLine":130,"endColumn":23},{"ruleId":"258","severity":1,"message":"335","line":157,"column":28,"nodeType":"260","messageId":"261","endLine":157,"endColumn":33},{"ruleId":"258","severity":1,"message":"336","line":158,"column":11,"nodeType":"260","messageId":"261","endLine":158,"endColumn":19},{"ruleId":"258","severity":1,"message":"337","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":14},{"ruleId":"258","severity":1,"message":"338","line":15,"column":10,"nodeType":"260","messageId":"261","endLine":15,"endColumn":19},{"ruleId":"258","severity":1,"message":"339","line":15,"column":21,"nodeType":"260","messageId":"261","endLine":15,"endColumn":33},{"ruleId":"258","severity":1,"message":"340","line":16,"column":9,"nodeType":"260","messageId":"261","endLine":16,"endColumn":21},{"ruleId":"308","severity":1,"message":"341","line":46,"column":6,"nodeType":"310","endLine":46,"endColumn":8,"suggestions":"342"},{"ruleId":"258","severity":1,"message":"343","line":68,"column":9,"nodeType":"260","messageId":"261","endLine":68,"endColumn":21},{"ruleId":"258","severity":1,"message":"344","line":74,"column":9,"nodeType":"260","messageId":"261","endLine":74,"endColumn":16},{"ruleId":"258","severity":1,"message":"345","line":78,"column":9,"nodeType":"260","messageId":"261","endLine":78,"endColumn":21},{"ruleId":"323","severity":1,"message":"346","line":89,"column":27,"nodeType":"325","messageId":"326","endLine":89,"endColumn":29},{"ruleId":"323","severity":1,"message":"346","line":89,"column":51,"nodeType":"325","messageId":"326","endLine":89,"endColumn":53},{"ruleId":"258","severity":1,"message":"259","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":18},{"ruleId":"258","severity":1,"message":"347","line":6,"column":7,"nodeType":"260","messageId":"261","endLine":6,"endColumn":25},{"ruleId":"258","severity":1,"message":"348","line":1,"column":27,"nodeType":"260","messageId":"261","endLine":1,"endColumn":36},{"ruleId":"258","severity":1,"message":"349","line":14,"column":10,"nodeType":"260","messageId":"261","endLine":14,"endColumn":15},{"ruleId":"258","severity":1,"message":"350","line":14,"column":17,"nodeType":"260","messageId":"261","endLine":14,"endColumn":25},{"ruleId":"258","severity":1,"message":"351","line":15,"column":10,"nodeType":"260","messageId":"261","endLine":15,"endColumn":16},{"ruleId":"258","severity":1,"message":"352","line":15,"column":18,"nodeType":"260","messageId":"261","endLine":15,"endColumn":27},{"ruleId":"258","severity":1,"message":"353","line":16,"column":10,"nodeType":"260","messageId":"261","endLine":16,"endColumn":16},{"ruleId":"258","severity":1,"message":"354","line":16,"column":18,"nodeType":"260","messageId":"261","endLine":16,"endColumn":27},{"ruleId":"258","severity":1,"message":"355","line":17,"column":10,"nodeType":"260","messageId":"261","endLine":17,"endColumn":21},{"ruleId":"258","severity":1,"message":"356","line":17,"column":23,"nodeType":"260","messageId":"261","endLine":17,"endColumn":37},{"ruleId":"258","severity":1,"message":"357","line":18,"column":10,"nodeType":"260","messageId":"261","endLine":18,"endColumn":19},{"ruleId":"258","severity":1,"message":"358","line":18,"column":21,"nodeType":"260","messageId":"261","endLine":18,"endColumn":33},{"ruleId":"258","severity":1,"message":"348","line":1,"column":27,"nodeType":"260","messageId":"261","endLine":1,"endColumn":36},{"ruleId":"258","severity":1,"message":"359","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":20},{"ruleId":"258","severity":1,"message":"360","line":4,"column":22,"nodeType":"260","messageId":"261","endLine":4,"endColumn":36},{"ruleId":"258","severity":1,"message":"361","line":4,"column":38,"nodeType":"260","messageId":"261","endLine":4,"endColumn":52},{"ruleId":"258","severity":1,"message":"349","line":13,"column":10,"nodeType":"260","messageId":"261","endLine":13,"endColumn":15},{"ruleId":"258","severity":1,"message":"350","line":13,"column":17,"nodeType":"260","messageId":"261","endLine":13,"endColumn":25},{"ruleId":"258","severity":1,"message":"351","line":14,"column":10,"nodeType":"260","messageId":"261","endLine":14,"endColumn":16},{"ruleId":"258","severity":1,"message":"352","line":14,"column":18,"nodeType":"260","messageId":"261","endLine":14,"endColumn":27},{"ruleId":"258","severity":1,"message":"353","line":15,"column":10,"nodeType":"260","messageId":"261","endLine":15,"endColumn":16},{"ruleId":"258","severity":1,"message":"354","line":15,"column":18,"nodeType":"260","messageId":"261","endLine":15,"endColumn":27},{"ruleId":"258","severity":1,"message":"355","line":16,"column":10,"nodeType":"260","messageId":"261","endLine":16,"endColumn":21},{"ruleId":"258","severity":1,"message":"356","line":16,"column":23,"nodeType":"260","messageId":"261","endLine":16,"endColumn":37},{"ruleId":"258","severity":1,"message":"357","line":17,"column":10,"nodeType":"260","messageId":"261","endLine":17,"endColumn":19},{"ruleId":"258","severity":1,"message":"358","line":17,"column":21,"nodeType":"260","messageId":"261","endLine":17,"endColumn":33},{"ruleId":"258","severity":1,"message":"348","line":1,"column":27,"nodeType":"260","messageId":"261","endLine":1,"endColumn":36},{"ruleId":"258","severity":1,"message":"359","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":20},{"ruleId":"258","severity":1,"message":"360","line":3,"column":22,"nodeType":"260","messageId":"261","endLine":3,"endColumn":36},{"ruleId":"258","severity":1,"message":"361","line":3,"column":38,"nodeType":"260","messageId":"261","endLine":3,"endColumn":52},{"ruleId":"258","severity":1,"message":"362","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":17},{"ruleId":"258","severity":1,"message":"349","line":20,"column":10,"nodeType":"260","messageId":"261","endLine":20,"endColumn":15},{"ruleId":"258","severity":1,"message":"350","line":20,"column":17,"nodeType":"260","messageId":"261","endLine":20,"endColumn":25},{"ruleId":"258","severity":1,"message":"351","line":21,"column":10,"nodeType":"260","messageId":"261","endLine":21,"endColumn":16},{"ruleId":"258","severity":1,"message":"352","line":21,"column":18,"nodeType":"260","messageId":"261","endLine":21,"endColumn":27},{"ruleId":"258","severity":1,"message":"353","line":22,"column":10,"nodeType":"260","messageId":"261","endLine":22,"endColumn":16},{"ruleId":"258","severity":1,"message":"354","line":22,"column":18,"nodeType":"260","messageId":"261","endLine":22,"endColumn":27},{"ruleId":"258","severity":1,"message":"355","line":23,"column":10,"nodeType":"260","messageId":"261","endLine":23,"endColumn":21},{"ruleId":"258","severity":1,"message":"356","line":23,"column":23,"nodeType":"260","messageId":"261","endLine":23,"endColumn":37},{"ruleId":"258","severity":1,"message":"357","line":24,"column":10,"nodeType":"260","messageId":"261","endLine":24,"endColumn":19},{"ruleId":"258","severity":1,"message":"358","line":24,"column":21,"nodeType":"260","messageId":"261","endLine":24,"endColumn":33},{"ruleId":"258","severity":1,"message":"363","line":5,"column":5,"nodeType":"260","messageId":"261","endLine":5,"endColumn":16},{"ruleId":"258","severity":1,"message":"364","line":6,"column":5,"nodeType":"260","messageId":"261","endLine":6,"endColumn":11},{"ruleId":"258","severity":1,"message":"365","line":7,"column":5,"nodeType":"260","messageId":"261","endLine":7,"endColumn":8},{"ruleId":"258","severity":1,"message":"366","line":8,"column":5,"nodeType":"260","messageId":"261","endLine":8,"endColumn":12},{"ruleId":"258","severity":1,"message":"367","line":9,"column":5,"nodeType":"260","messageId":"261","endLine":9,"endColumn":18},{"ruleId":"258","severity":1,"message":"368","line":10,"column":5,"nodeType":"260","messageId":"261","endLine":10,"endColumn":13},{"ruleId":"258","severity":1,"message":"369","line":11,"column":5,"nodeType":"260","messageId":"261","endLine":11,"endColumn":10},{"ruleId":"258","severity":1,"message":"370","line":12,"column":5,"nodeType":"260","messageId":"261","endLine":12,"endColumn":14},{"ruleId":"258","severity":1,"message":"347","line":17,"column":7,"nodeType":"260","messageId":"261","endLine":17,"endColumn":25},{"ruleId":"258","severity":1,"message":"371","line":37,"column":11,"nodeType":"260","messageId":"261","endLine":37,"endColumn":17},{"ruleId":"258","severity":1,"message":"348","line":1,"column":27,"nodeType":"260","messageId":"261","endLine":1,"endColumn":36},{"ruleId":"258","severity":1,"message":"359","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":20},{"ruleId":"258","severity":1,"message":"360","line":3,"column":22,"nodeType":"260","messageId":"261","endLine":3,"endColumn":36},{"ruleId":"258","severity":1,"message":"361","line":3,"column":38,"nodeType":"260","messageId":"261","endLine":3,"endColumn":52},{"ruleId":"258","severity":1,"message":"372","line":3,"column":65,"nodeType":"260","messageId":"261","endLine":3,"endColumn":68},{"ruleId":"258","severity":1,"message":"373","line":3,"column":70,"nodeType":"260","messageId":"261","endLine":3,"endColumn":73},{"ruleId":"258","severity":1,"message":"349","line":21,"column":10,"nodeType":"260","messageId":"261","endLine":21,"endColumn":15},{"ruleId":"258","severity":1,"message":"350","line":21,"column":17,"nodeType":"260","messageId":"261","endLine":21,"endColumn":25},{"ruleId":"258","severity":1,"message":"351","line":22,"column":10,"nodeType":"260","messageId":"261","endLine":22,"endColumn":16},{"ruleId":"258","severity":1,"message":"352","line":22,"column":18,"nodeType":"260","messageId":"261","endLine":22,"endColumn":27},{"ruleId":"258","severity":1,"message":"353","line":23,"column":10,"nodeType":"260","messageId":"261","endLine":23,"endColumn":16},{"ruleId":"258","severity":1,"message":"354","line":23,"column":18,"nodeType":"260","messageId":"261","endLine":23,"endColumn":27},{"ruleId":"258","severity":1,"message":"355","line":24,"column":10,"nodeType":"260","messageId":"261","endLine":24,"endColumn":21},{"ruleId":"258","severity":1,"message":"356","line":24,"column":23,"nodeType":"260","messageId":"261","endLine":24,"endColumn":37},{"ruleId":"258","severity":1,"message":"357","line":25,"column":10,"nodeType":"260","messageId":"261","endLine":25,"endColumn":19},{"ruleId":"258","severity":1,"message":"358","line":25,"column":21,"nodeType":"260","messageId":"261","endLine":25,"endColumn":33},{"ruleId":"374","severity":1,"message":"375","line":127,"column":15,"nodeType":"376","endLine":127,"endColumn":61},{"ruleId":"374","severity":1,"message":"375","line":161,"column":15,"nodeType":"376","endLine":161,"endColumn":58},"no-unused-vars","'FileUpload' is defined but never used.","Identifier","unusedVar","'SearchResults' is defined but never used.","'Box' is defined but never used.","'pdfjsLib' is defined but never used.","'styles' is defined but never used.","'useLocation' is defined but never used.","'AddTerm' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'setPdf' is assigned a value but never used.","'width' is assigned a value but never used.","'images' is assigned a value but never used.","'height' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'setTotalPages' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'pdfRendering' is assigned a value but never used.","'setPdfRendering' is assigned a value but never used.","'pageRendering' is assigned a value but never used.","'searchQuery' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","'searchResults' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'alldocsready' is assigned a value but never used.","'currhtml' is assigned a value but never used.","'setcurrhtml' is assigned a value but never used.","'fileData' is assigned a value but never used.","'setFileData' is assigned a value but never used.","'showpage' is assigned a value but never used.","'pdfUrls' is assigned a value but never used.","'setPdfUrls' is assigned a value but never used.","'oninit' is assigned a value but never used.","'onranked' is assigned a value but never used.","'showinitbox' is assigned a value but never used.","'setshowabout' is assigned a value but never used.","'openinitscreen' is assigned a value but never used.","'movetorankscreen' is assigned a value but never used.","'param1' is assigned a value but never used.","'param2' is assigned a value but never used.","'pdfUrlParam' is assigned a value but never used.","'downloadPdfFromUrl' is assigned a value but never used.","'falseTerms' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'htmltemp', 'htmltemp', 'htmltemp', 'htmltemp', 'htmltemp', 'htmltemp', 'htmltemp'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateTermObject'. Either include it or remove the dependency array.","ArrayExpression",["377"],"'showPdf' is defined but never used.","'pdfFilePath' is assigned a value but never used.","'rerankjacc' is defined but never used.","'setshowingdocs' is defined but never used.","'rerankbm25' is defined but never used.","'rerankcoss' is defined but never used.","'canv' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'renderPage'. Either include it or remove the dependency array.",["378"],"'wordSet' is assigned a value but never used.","'wordCount' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'showranks' is defined but never used.","React Hook useEffect has a missing dependency: 'onCheckedTerms'. Either include it or remove the dependency array. If 'onCheckedTerms' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["379"],"React Hook useEffect has a missing dependency: 'results'. Either include it or remove the dependency array.",["380"],"'Document' is defined but never used.","Function declared in a loop contains unsafe references to variable(s) 'text'.","'currentChunk' is assigned a value but never used.","'error' is assigned a value but never used.","'progress' is assigned a value but never used.","'Button' is defined but never used.","'htmlWidth' is assigned a value but never used.","'setHtmlWidth' is assigned a value but never used.","'hiddenDivRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'html' and 'scale'. Either include them or remove the dependency array. You can also do a functional update 'setScale(s => ...)' if you only need 'scale' in the 'setScale' call.",["381"],"'goToPrevPage' is assigned a value but never used.","'viewPdf' is assigned a value but never used.","'goToNextPage' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useColorAssignment' is assigned a value but never used.","'useEffect' is defined but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'modal1' is assigned a value but never used.","'setModal1' is assigned a value but never used.","'modal2' is assigned a value but never used.","'setModal2' is assigned a value but never used.","'activeIndex' is assigned a value but never used.","'setActiveIndex' is assigned a value but never used.","'animating' is assigned a value but never used.","'setAnimating' is assigned a value but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'userstory' is defined but never used.","'NavbarBrand' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavbarToggler' is defined but never used.","'Collapse' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'toggle' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},"Update the dependencies array to be: [queryterms, updateTermObject]",{"range":"392","text":"393"},"Update the dependencies array to be: [pdf, currentPage, renderPage]",{"range":"394","text":"395"},"Update the dependencies array to be: [checkedTerms, onCheckedTerms]",{"range":"396","text":"397"},"Update the dependencies array to be: [currShowing, results]",{"range":"398","text":"399"},"Update the dependencies array to be: [html, scale]",{"range":"400","text":"401"},[17866,17878],"[queryterms, updateTermObject]",[22525,22543],"[pdf, currentPage, renderPage]",[226,240],"[checkedTerms, onCheckedTerms]",[789,802],"[currShowing, results]",[1696,1698],"[html, scale]"]