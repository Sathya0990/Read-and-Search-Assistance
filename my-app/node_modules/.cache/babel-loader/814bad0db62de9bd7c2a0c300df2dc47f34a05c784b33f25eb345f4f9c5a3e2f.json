{"ast":null,"code":"import React,{useState,useEffect}from\"react\";// import \"./App.css\";\nimport HtmlViewer from\"./HtmlViewer\";import CheckboxList from\"./CheckboxList\";import FileUpload from\"./FileUpload\";import{Provider}from\"react-redux\";import store from\"./store\";import SearchResults from\"./SearchResults\";import Box from\"./Box\";import pdfjsLib from\"pdfjs-dist\";import axios from\"axios\";import Loader from\"./Loader\";import styles from'./stylenew.css';import{useLocation}from'react-router-dom';import DocumentList from\"./DocumentList\";import AddTerm from\"./AddTerm\";import TextInput from\"./textinput\";import FileInput from\"./fileselector\";import DocRankUI from\"./DocRankUI\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const apiUrl=process.env.REACT_APP_API_URL;export default function App(){const[pdf,setPdf]=React.useState(\"\");const[width,setWidth]=React.useState(0);const[images,setImages]=React.useState([]);const[height,setHeight]=React.useState(0);const[totalPages,setTotalPages]=React.useState(1);const[currentPage,setCurrentPage]=React.useState(1);const[pdfRendering,setPdfRendering]=React.useState(\"\");const[pageRendering,setPageRendering]=React.useState(\"\");const[searchQuery,setSearchQuery]=React.useState(\"\");const[searchResults,setSearchResults]=React.useState([]);const[fileText,setFileText]=React.useState({});const[docranks,setDocRanks]=React.useState({});const[alldocsready,setAllDocsReady]=React.useState(false);const[isLoading,setIsLoading]=React.useState(false);const[currhtml,setcurrhtml]=React.useState(\"\");const[queryterms,setqueryterms]=React.useState([]);const[fileData,setFileData]=useState(\"\");const[querymap,setquerymap]=React.useState([]);const[fileNames,setFileNames]=React.useState([]);const[colorMap,setcolorMap]=React.useState([]);const[showpage,setshowpage]=React.useState(false);const[pdfUrls,setPdfUrls]=useState([]);const[showDocs,setshowdocs]=useState(false);const[allHtmls,setAllHtmls]=useState({});const[currShowing,setCurrShowing]=useState(\"\");const[oninit,setonint]=useState(true);const[onranked,setonranked]=useState(false);const[newtermsupdate,setnewtermsupdate]=useState(false);const[showinitbox,setshowinitbox]=useState(true);const[showtextinput,setshowtextinput]=useState(false);const[showfileselector,setshowfileselector]=useState(false);const[docrankscreen,setdocrankscreen]=useState(false);const[showrankorpdf,setshowrankorpdf]=useState(true);const[enablestartRanking,setenablestartRanking]=useState(false);const openinitscreen=()=>{setonint(true);setonranked(false);setshowinitbox(true);setshowtextinput(false);setshowfileselector(false);setdocrankscreen(false);setshowrankorpdf(false);};const opentermeditor=()=>{setshowinitbox(false);setshowtextinput(true);setshowfileselector(false);setdocrankscreen(false);setshowrankorpdf(false);};const openfileuploader=()=>{setshowinitbox(false);setshowtextinput(false);setshowfileselector(true);setdocrankscreen(false);setshowrankorpdf(false);};const openrankeddocs=()=>{setonint(false);setonranked(true);setshowinitbox(false);setshowtextinput(false);setshowfileselector(false);setdocrankscreen(true);setshowrankorpdf(true);};const openshowpdffile=()=>{setonint(false);setonranked(false);setshowinitbox(false);setshowtextinput(false);setshowfileselector(false);setdocrankscreen(true);setshowrankorpdf(false);};const reloadPage=()=>{window.location.reload(true);// true indicates a hard reload\n};// const [file, setFile] = useState(null);\n// const handleChange = (event) => {\n//   setFile(event.target.files[0]);\n// }\n// const handleSubmit = async (event) => {\n//   event.preventDefault();\n//   const reader = new FileReader();\n//   reader.onload = async (event) => {\n//     const fileData = event.target.result;\n//     const fileDataString = fileData.toString();\n//     console.log(fileDataString)\n//     const path = \"./public/dataaaaaaaaaaaaaaaaaa.txt\";\n//     try {\n//       localStorage.setItem(path, fileDataString);\n//       console.log(\"Data written to localStorage!\");\n//     } catch (e) {\n//       console.error(\"Error writing data to localStorage:\", e);\n//     }\n//   };\n//   reader.readAsText(file);\n//   setFile(null);\n// };\nconst closefileinput=()=>{oninit?openinitscreen():onranked?openrankeddocs():openshowpdffile();};const movetorankscreen=()=>{setshowinitbox(false);setshowfileselector(false);setshowtextinput(false);setdocrankscreen(true);};const generateUniqueHighlightColors=()=>{const result=[];const hues=[0,45,90,135,180,225,270,315];// More diverse hues\nconst saturation=70;// Fixed saturation for better consistency\nfor(let hue of hues){for(let lightness=60;lightness<=90;lightness+=10){const color=\"hsl(\".concat(hue,\", \").concat(saturation,\"%, \").concat(lightness,\"%)\");// Use HSL color model for bright and light colors\nresult.push(color);}}return result;};// const generateUniqueHighlightColors = () => {\n//   const result = [];\n//   const hues = [0, 60, 120, 180, 240, 300]; // More diverse hues\n//   const saturations = [50, 70, 90]; // Different saturation levels for variation\n//   for (let hue of hues) {\n//     for (let saturation of saturations) {\n//       const lightness = Math.floor(Math.random() * 30) + 60; // Random lightness between 60 and 90\n//       const color = `hsl(${hue}, ${saturation}%, ${lightness}%)`; // Use HSL color model for bright and light colors\n//       result.push(color);\n//     }\n//   }\n//   return result;\n// };\n// const brightColors = generateUniqueHighlightColors();\nconst[brightColors,setbrightColors]=useState(generateUniqueHighlightColors());const colorObject={};brightColors.forEach(color=>{colorObject[color]=false;});const[documents,setDocuments]=useState([]);const[param1,setParam1]=useState('');const[param2,setParam2]=useState('');useEffect(()=>{const queryParams=new URLSearchParams(window.location.search);const param1Value=queryParams.get('param1');const param2Value=queryParams.get('param2');console.log(\"---------onsole.log(param1Value)\");console.log(param1Value);console.log(\"---------onsole.log(param1Value)\");console.log(param2Value);setParam1(param1Value);setParam2(param2Value);},[]);const openReactAppInNewWindow=()=>{const url='http://sysrev2.cs.binghamton.edu:3001/openapp';const jsonString=JSON.stringify([{\"resultId\":1971,\"document\":{\"title\":\"Distributional Reinforcement Learning in the Brain.\",\"articleDate\":\"2020 Dec\",\"authorNames\":[\"Lowet AS\",\"Zheng Q\",\"Matias S\",\"Drugowitsch J\",\"Uchida N\"],\"affiliationCountry\":null,\"publicationName\":\"distributional reinforcement learning in the brain\",\"issn\":\"0166-2236\",\"affiliationNames\":null,\"url\":\"https://pubmed.ncbi.nlm.nih.gov/33092893\"},\"priority\":0,\"datasource\":\"PUBMED\"},{\"resultId\":1972,\"document\":{\"title\":\"Reinforcement Distributional Learning in the Brain.\",\"articleDate\":\"2020 Dec\",\"authorNames\":[\"Lowet AS\",\"Zheng Q\",\"Matias S\",\"Drugowitsch J\",\"Uchida N\"],\"affiliationCountry\":null,\"publicationName\":\"distributional reinforcement learning in the brain\",\"issn\":\"0166-2236\",\"affiliationNames\":null,\"url\":\"https://pubmed.ncbi.nlm.nih.gov/33092893\"},\"priority\":0,\"datasource\":\"PUBMED\"},{\"resultId\":1973,\"document\":{\"title\":\"Learning Distributional Reinforcement in the Brain.\",\"articleDate\":\"2020 Dec\",\"authorNames\":[\"Lowet AS\",\"Zheng Q\",\"Matias S\",\"Drugowitsch J\",\"Uchida N\"],\"affiliationCountry\":null,\"publicationName\":\"distributional reinforcement learning in the brain\",\"issn\":\"0166-2236\",\"affiliationNames\":null,\"url\":\"https://pubmed.ncbi.nlm.nih.gov/33092893\"},\"priority\":0,\"datasource\":\"PUBMED\"},{\"resultId\":1974,\"document\":{\"title\":\"Brain Distributional Reinforcement Learning in the.\",\"articleDate\":\"2020 Dec\",\"authorNames\":[\"Lowet AS\",\"Zheng Q\",\"Matias S\",\"Drugowitsch J\",\"Uchida N\"],\"affiliationCountry\":null,\"publicationName\":\"distributional reinforcement learning in the brain\",\"issn\":\"0166-2236\",\"affiliationNames\":null,\"url\":\"https://pubmed.ncbi.nlm.nih.gov/33092893\"},\"priority\":0,\"datasource\":\"PUBMED\"}]);const queryParams=\"json=\".concat(encodeURIComponent(jsonString));const finalUrl=\"\".concat(url,\"?\").concat(queryParams);const newWindow=window.open(finalUrl,'_blank','width=800,height=600');if(newWindow){// Optional: Add any additional logic if needed, such as handling popup blockers\n}else{// Handle case where the new window could not be opened, e.g., due to popup blockers\nconsole.error('Failed to open new window');}};const[htmls,setHtmls]=React.useState(\"\");const[checkedTerms,setCheckedTerms]=useState({});const onMount=async()=>{const queryParams=new URLSearchParams(window.location.search);const pdfUrlParam=queryParams.get(\"pdf_urls\");const jsonDataParam=queryParams.get(\"json\");if(jsonDataParam){try{const jsonData=JSON.parse(decodeURIComponent(jsonDataParam));setDocuments(jsonData);console.log('Received JSON data:',jsonData);// Continue with your logic to process the received JSON data\n}catch(error){console.error('Error parsing JSON data:',error);}}console.log(\"data in api\",jsonDataParam);};const downloadPdfFromUrl=async pdfUrl=>{try{console.log(\"downloading\"+pdfUrl);// const response = await axios.get(pdfUrl, { responseType: \"arraybuffer\" });\n// const pdfData = response.data;\n// // Here, you can save the PDF data or perform any necessary processing.\nreturn pdfUrl;}catch(error){console.error(\"Error downloading PDF from URL:\",pdfUrl,error);return null;}};useEffect(()=>{onMount();},[]);// Call onMount when the component mounts\nconst handleCheckedTerms=checkedTerms=>{console.log(\"Checked terms:\",checkedTerms);const trueTerms=Object.keys(checkedTerms).filter(term=>checkedTerms[term]);const falseTerms=Object.keys(checkedTerms).filter(term=>!checkedTerms[term]);// const colorMap = colormap;\n// let htmltemp = htmls;\nlet htmltemp=allHtmls[currShowing];// for (let i = 0; i < falseTerms.length; i++) {\n//   const backgroundStyle = `background-color: white;`;\n//   htmltemp = htmltemp.replace(\n//     new RegExp(falseTerms[i], \"gi\"),\n//     `<span style=\"${backgroundStyle}\">${falseTerms[i]}</span>`\n//   );\n// }\nfor(let i=0;i<trueTerms.length;i++){const backgroundColor=colorMap[trueTerms[i]];const backgroundStyle=checkedTerms[trueTerms[i]]?\"\\n          background-color: \".concat(backgroundColor,\";\\n          border-radius: 3px; /* Rounded corners */\\n          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3); /* Drop shadow */\\n          padding: 2px 4px; /* Padding for better spacing */\\n          color: white; /* Text color on highlighted background */\\n          pointer-events: none;\\n        \"):\"background-color: white;\";const re=new RegExp(\">\".concat(trueTerms[i],\"<\"),\"gi\");htmltemp=htmltemp.replace(re,match=>{return match.replace(/<span name = \"highlightedtextdebug\" style=\"[^\"]*\">(.*?)<\\/span>/gi,\"$1\");});// htmltemp = htmltemp.replace(\n//   new RegExp(`>[^<]*(${trueTerms[i]})[^<]*<`, \"gi\"),\n//   (match) => {\n//     return match.replace(\n//       new RegExp(`(${trueTerms[i]})`, \"gi\"),\n//       `<span style=\"${backgroundStyle}\">$1</span>`\n//     );\n//   }\n// );\nconst iframe=document.getElementById('viewer-iframe');iframe.contentWindow.handleClick=function(event,term){event.preventDefault();// Prevent default behavior of clicking on the span tag\nconst targetId=term;const targetElement=document.getElementById(targetId);if(targetElement){// Scroll to the target element within the iframe\ntargetElement.scrollIntoView();}};// const stylePattern = /<style[^>]*>.*?<\\/style>/gs;\n// // Match and replace the style attribute\n// htmltemp = htmltemp.replace(stylePattern, (match) => {\n//     // Remove or modify the style for #page-container here\n//     return match.replace(/#page-container/g, '#mo-page-container');\n// });\n// const originalSubstring = \"#page-container{bottom:0;right:0;overflow:auto}\";\n// const replacementSubstring = \"#page-container{bottom:0;overflow:auto}\";\n// htmltemp = htmltemp.replace(originalSubstring, replacementSubstring);\nhtmltemp=htmltemp.replace(new RegExp(\"(?<![\\\\w</])(\".concat(trueTerms[i],\")(?![\\\\w/>:=])\"),\"gi\"),// new RegExp(`(?<=^|>)[^<]*(?<![:=])(${trueTerms[i]})(?![^<]*<|[:=])`, \"gi\"),\n(match,word,index)=>{const sentence=htmltemp.substring(index-15,index+20);console.log(\"Sentence:\",sentence);console.log(\"printing index\",index);const bodyStartIndex=htmltemp.indexOf('<body');const bodyEndIndex=htmltemp.indexOf('</body>');if(bodyStartIndex>index||bodyEndIndex<index){return match;}const lastopen=htmltemp.substring(bodyStartIndex,index).lastIndexOf(\"<\");const lastclosed=htmltemp.substring(bodyStartIndex,index).lastIndexOf(\">\");const firstopen=htmltemp.substring(index,bodyEndIndex).indexOf(\"<\");const firstclose=htmltemp.substring(index,bodyEndIndex).indexOf(\">\");console.log(\"lastopen words----\",lastopen);console.log(\"lastclosed words----\",lastclosed);console.log(\"firstopen words----\",firstopen);console.log(\"firstclose words----\",firstclose);if(lastopen>lastclosed||firstopen>firstclose){return match;}console.log(\"matched words----\",match);return match.replace(new RegExp(\"(?<![\\\\w</])(\".concat(trueTerms[i],\")(?![\\\\w/>:=])\"),\"gi\"),// new RegExp(`(?<=[>])(\\\\b${trueTerms[i]}\\\\b)(?![^<]*<)`, \"gi\"),\n// new RegExp(`(?<=^|>)[^<]*(?<![:=])(${trueTerms[i]})(?![^<]*<|[:=])`, \"gi\"),\n\"<span style=\\\"\".concat(backgroundStyle,\"\\\" >$1</span>\")// `<span style=\"${backgroundStyle}\" >$1</span>`\n// `<span style=\"${backgroundStyle}\" pointer-events: none;>$1</span>`\n// <span style=\"${backgroundStyle}; pointer-events: auto;\" onclick=\"window.location.href = 'http://sysrev2.cs.binghamton.edu:3001/#pf1'\">$1</span>\n);});// htmltemp = htmltemp.replace(\n//   new RegExp(`([^<>]*>)?([^<]*(${trueTerms[i]})([^<]*<)?[^<>]*)`, \"gi\"),\n//   (match, before, term, after) => {\n//     return `${before}<span style=\"${backgroundStyle}\">${term}</span>${after}`;\n//   }\n// );\n}setHtmls(htmltemp);};function updateTermObject(){setquerymap(prevQueryMap=>{const updatedQueryMap={...prevQueryMap};// Add new terms to the querymap with default value false\nqueryterms.forEach(term=>{if(!updatedQueryMap[term]){updatedQueryMap[term]=false;}});// Remove terms from the querymap that are missing from queryterms\nObject.keys(updatedQueryMap).forEach(term=>{if(!queryterms.includes(term)){delete updatedQueryMap[term];}});return updatedQueryMap;});}useEffect(()=>{updateTermObject();},[queryterms]);async function showPdf(fnamme){try{fnamme=fnamme.replace(\"pdf\",\"html\");const path=fnamme;fetch(path).then(response=>response.text()).then(html=>{html=html.replace(/<span class=\"_ _\\d+\"><\\/span>/g,\"\");setHtmls(html);});}catch(error){console.log(\"file not found\");}}// const convertPDFToHTML = async () => {\n//   console.log(\"name of all files--=-=-=-=-\",fileNames);\n//   let pdfFilePath = \"./sample.pdf\";\n//   try {\n//     const response = await fetch(\n//       `${apiUrl}/api/convert-pdf-to-html?_=${new Date().getTime()}`,\n//       { timeout: 10000 }\n//     );\n//     return await response.text();\n//   } catch (error) {\n//     console.error(error);\n//     throw new Error(\"Failed to convert PDF to HTML\");\n//   }\n// };\nconst convertPDFToHTML=async()=>{console.log(\"name of all files--=-=-=-=-\",fileNames);let pdfFilePath=\"./sample.pdf\";try{const response=await fetch(\"\".concat(apiUrl,\"/api/convert-pdf-to-html\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fileNames})});return await response.text();}catch(error){console.error(error);throw new Error(\"Failed to convert PDF to HTML\");}};const startconversion=async()=>{setnewtermsupdate(false);setIsLoading(true);await convertPDFToHTML().then(html=>{// alert(\"yes\");\nsetFileText(cleanTexts(fileText));const resultsdemo=rankTextscos(queryterms,fileText);console.log(queryterms);// console.log(fileText);\nconsole.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);console.log(resultsdemo);// getAllHTML();\nhandleFetchFile();setIsLoading(false);openrankeddocs();}).catch(error=>{setIsLoading(false);});};function rerankjacc(){setIsLoading(true);const resultsdemo=rankTextsjacc(queryterms,fileText);// openReactAppInNewWindow()\nconsole.log(queryterms);console.log(fileText);console.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);setIsLoading(false);}function setshowingdocs(){setshowdocs(!showDocs);}function rerankbm25(){setIsLoading(true);const resultsdemo=rankTextsbm25(queryterms,fileText);console.log(queryterms);console.log(fileText);console.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);setIsLoading(false);}function rerankcoss(){setIsLoading(true);const resultsdemo=rankTextscos(queryterms,fileText);console.log(queryterms);console.log(fileText);console.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);setIsLoading(false);}function cleanTexts(obj){const cleanObj={};const regex=/[^a-zA-Z0-9 ]/g;// Regex to match non-alphanumeric characters\nfor(const[key,value]of Object.entries(obj)){const cleanText=value.replace(regex,\" \");// Replace non-alphanumeric characters with spaces\ncleanObj[key]=cleanText.trim();// Trim leading and trailing spaces and add to new object\n}return cleanObj;}async function renderPage(){setPageRendering(true);const imagesList=[];const canvas=document.createElement(\"canvas\");canvas.setAttribute(\"className\",\"canv\");let canv=document.querySelector(\".canv\");for(let i=1;i<=pdf.numPages;i++){var page=await pdf.getPage(i);var viewport=page.getViewport({scale:1});canvas.height=viewport.height;canvas.width=viewport.width;var render_context={canvasContext:canvas.getContext(\"2d\"),viewport:viewport};console.log(\"page lenght\",pdf.numPages);setWidth(viewport.width);setHeight(viewport.height);await page.render(render_context).promise;let img=canvas.toDataURL(\"image/png\");imagesList.push(img);}setImages(imagesList);setPageRendering(false);}useEffect(()=>{pdf&&renderPage();},[pdf,currentPage]);function rankTextsbm25(terms,texts){const docVectors={};// stores the term frequency vectors for each document\nconst docs=Object.keys(texts);// get an array of the document names\nconst wordSet=new Set(terms);// create a set of the terms to use for matching\n// calculate the inverse document frequency for each term\nconst idf={};docs.forEach(doc=>{const words=new Set(texts[doc].toLowerCase().match(/\\b\\w+\\b/g));// split the text into words and convert to a set\nwords.forEach(word=>{if(idf[word]){idf[word]++;}else{idf[word]=1;}});});Object.keys(idf).forEach(term=>{idf[term]=Math.log(docs.length/idf[term]);});// iterate over each document to calculate the term frequency vector\ndocs.forEach(doc=>{const words=texts[doc].toLowerCase().match(/\\b\\w+\\b/g);// split the text into words\nconst tf={};// stores the term frequency for each word\nwords.forEach(word=>{if(tf[word]){tf[word]++;}else{tf[word]=1;}});// store the vector and the word count for the document\ndocVectors[doc]={vector:tf,wordCount:words.length};});// calculate the Okapi BM25 score for each document\nconst results=docs.map(doc=>{const{vector:docVector,wordCount}=docVectors[doc];let score=0;const matchedWords=[];terms.forEach(term=>{if(docVector[term]){const tf=docVector[term];const k1=1.2;const b=0.75;const avgDocLength=docs.reduce((sum,doc)=>{return sum+docVectors[doc].wordCount;},0)/docs.length;const idfScore=idf[term];const docLengthNorm=1-b+b*(wordCount/avgDocLength);const tfScore=(k1+1)*tf/(k1*docLengthNorm+tf);score+=idfScore*tfScore;matchedWords.push({word:term,count:docVector[term]});}});return{name:doc,score:score,matchedWords:matchedWords};});results.sort((a,b)=>{return b.score-a.score;});return results;}function rankTextsjacc(terms,texts){const docVectors={};// stores the term frequency vectors for each document\nconst docs=Object.keys(texts);// get an array of the document names\nconst wordSet=new Set(terms);// create a set of the terms to use for matching\n// iterate over each document to calculate the term frequency vector\ndocs.forEach(doc=>{const words=texts[doc].toLowerCase().match(/\\b\\w+\\b/g);// split the text into words\nconst tf={};// stores the term frequency for each word\nwords.forEach(word=>{if(tf[word]){tf[word]++;}else{tf[word]=1;}});// store the vector and the word count for the document\ndocVectors[doc]={vector:tf,wordCount:words.length};});// calculate the Jaccard similarity between the term frequency vectors and the query vector\nconst queryVector={};terms.forEach(term=>{queryVector[term]=1;});const results=docs.map(doc=>{const{vector:docVector,wordCount}=docVectors[doc];const intersection={};let intersectionSize=0;let unionSize=wordCount;Object.keys(queryVector).forEach(term=>{if(docVector[term]){intersection[term]=docVector[term];intersectionSize+=docVector[term];}else{unionSize+=1;}});const jaccardSimilarity=intersectionSize/unionSize;const matchedWords=Object.keys(intersection).map(word=>{return{word:word,count:intersection[word]};});return{name:doc,score:jaccardSimilarity,matchedWords:matchedWords};});results.sort((a,b)=>{return b.score-a.score;});return results;}function rankTextscos(terms,texts){const docVectors={};// stores the term frequency vectors for each document\nconst docs=Object.keys(texts);// get an array of the document names\nconst wordSet=new Set(terms);// create a set of the terms to use for matching\nconsole.log(\"----docs in ranking\");console.log(texts);// iterate over each document to calculate the term frequency vector\ndocs.forEach(doc=>{const words=texts[doc].toLowerCase().match(/\\b\\w+\\b/g);// split the text into words\nconsole.log(\"--------\");console.log(words);console.log(\"--------\");const tf={};// stores the term frequency for each word\nvar maxFreq=0;// stores the highest frequency of any word in the document\nwords.forEach(word=>{if(tf[word]){tf[word]++;}else{tf[word]=1;}maxFreq=Math.max(maxFreq,tf[word]);});// normalize the term frequency vector by dividing each frequency by the max frequency\nconst docVector={};Object.keys(tf).forEach(word=>{docVector[word]=tf[word];});docVectors[doc]={vector:docVector,wordCount:words.length};// store the vector and the word count for the document\n});// calculate the cosine similarity between the term frequency vectors and the query vector\nconst queryVector={};terms.forEach(term=>{queryVector[term]=1;});const results=docs.map(doc=>{const{vector:docVector,wordCount}=docVectors[doc];const dotProduct=Object.keys(queryVector).reduce((sum,term)=>{if(docVector[term]){return sum+queryVector[term]*docVector[term];}else{return sum;}},0);const queryMagnitude=Math.sqrt(Object.keys(queryVector).reduce((sum,term)=>{return sum+queryVector[term]*queryVector[term];},0));const docMagnitude=Math.sqrt(Object.keys(docVector).reduce((sum,term)=>{return sum+docVector[term]*docVector[term];},0));const cosineSimilarity=dotProduct/(queryMagnitude*docMagnitude);// find the words in the text that match the query terms and calculate their frequency in the document\n// find the words in the text that match the query terms and calculate their frequency in the document\nconst matchedWords=Object.keys(docVector).filter(word=>{return wordSet.has(word);}).map(word=>{return{word:word,count:docVector[word]};// use the frequency directly\n});return{name:doc,score:cosineSimilarity,matchedWords:matchedWords};});results.sort((a,b)=>{return b.score-a.score;});setAllDocsReady(true);return results;}// const handleFetchFile = async (fileName) => {\n//   try {\n//     const response = await axios.get(\n//       `${apiUrl}/api/getFile/${fileName}`\n//     );\n//     console.group(\"found html file \" + response.data);\n//     setHtmls(response.data);\n//   } catch (error) {\n//     console.error(`Error fetching file ${fileName}: ${error.message}`);\n//   }\n// };\nconst handleFetchFile=async function(){let fileName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";console.log(\"handleFetchFile called\");if(fileName!=\"\"&&allHtmls.hasOwnProperty(fileName)){setHtmls(allHtmls[fileName]);return;}try{const promises=fileNames.map(async fn=>{fn=fn.replace(\"pdf\",\"html\");const response=await axios.get(\"\".concat(apiUrl,\"/api/getFile/\").concat(fn));let hml=response.data;const originalSubstring=\"#page-container{bottom:0;right:0;overflow:auto}\";const replacementSubstring=\"#page-container{bottom:0;overflow:auto}\";hml=hml.replace(originalSubstring,replacementSubstring);return{[fn]:hml};// Return an object with file name as key and file content as value\n});const filesData=await Promise.all(promises);// Combine file data into a single object\nconst filesObject=filesData.reduce((acc,cur)=>({...acc,...cur}),{});setAllHtmls(filesObject);if(fileName!=\"\"){setHtmls(filesObject[fileName]);}}catch(error){console.error(\"Error fetching files: \".concat(error.message));}};function showranks(){setshowrankorpdf(true);setshowpage(false);}function showthispdf(fnamme){setshowpage(true);openshowpdffile();// setshowrankorpdf(false);\nfnamme=fnamme.replace(\"pdf\",\"html\");setCurrShowing(fnamme);handleFetchFile(fnamme);}return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Loader,{isLoading:isLoading}),/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mac-book-pro141-mac-book-pro141\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mac-book-pro141-frame1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mac-book-pro141-text\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Research Analyst\"})}),/*#__PURE__*/_jsx(\"img\",{src:\"/external/ictwotonereadmore2380-sg1m.svg\",alt:\"ictwotonereadmore2380\",className:\"mac-book-pro141-ictwotonereadmore\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-iconparkoutlinemoreapp\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mac-book-pro141-group\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/external/vector2392-vwv.svg\",alt:\"Vector2392\",className:\"mac-book-pro141-vector\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/external/vector2393-328f.svg\",alt:\"Vector2393\",className:\"mac-book-pro141-vector1\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bodycontainer1\",children:[showinitbox&&!showtextinput&&!showfileselector?/*#__PURE__*/_jsx(\"div\",{className:\"positioningrelative\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mac-book-pro141-initcomp\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-searchboxmain\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:openfileuploader,className:\"mac-book-pro141-rectangle22\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-materialsymbolsupload\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-text02\",children:/*#__PURE__*/_jsx(\"span\",{children:\"UPLOAD PAPERS\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-searchboxmain2\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:opentermeditor,className:\"mac-book-pro141-rectangle22\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-materialsymbolsupload\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-text02\",children:/*#__PURE__*/_jsx(\"span\",{children:\"ADD SEARCH TERMS\"})})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:startconversion,className:\"mac-book-pro141-startbutton\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mac-book-pro141-text16\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Start Ranking\"})})})]})}):'',showfileselector?/*#__PURE__*/_jsx(FileInput,{fileNames:fileNames,setIsLoading:setIsLoading,setFileText:setFileText,setFileNames:setFileNames,closefileinput:closefileinput}):'',showtextinput?/*#__PURE__*/_jsx(TextInput,{setnewtermsupdate:setnewtermsupdate,queryterms:queryterms,brightColors:brightColors,setbrightColors:setbrightColors,setcolorMap:setcolorMap,setqueryterms:setqueryterms,closetextinput:closefileinput}):'',docrankscreen?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"menubuttons\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"terms cs1\"}),/*#__PURE__*/_jsx(\"div\",{class:\"terms cs2\",children:newtermsupdate?/*#__PURE__*/_jsx(\"button\",{className:\"menubutton2-alert\",onClick:startconversion,children:\"Update Ranks\"}):/*#__PURE__*/_jsx(\"button\",{className:\"menubutton2\",onClick:startconversion,children:\"Re-Rank Documents\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms cs2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"menubutton2\",onClick:opentermeditor,children:\"EDIT TERMS\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms cs2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"menubuttonreset\",onClick:reloadPage,children:\"RESET\"})}),!showrankorpdf&&/*#__PURE__*/_jsx(\"div\",{class:\"terms cs2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"menubutton2\",onClick:openrankeddocs,children:\"SHOW RANKS\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms cs1\"})]}),showrankorpdf?/*#__PURE__*/_jsx(DocRankUI,{results:docranks,showthispdf:showthispdf}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"pdf-main-container\",children:/*#__PURE__*/_jsx(HtmlViewer,{html:htmls})}),/*#__PURE__*/_jsxs(\"div\",{class:\"terms col-sm-3\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Terms\"}),/*#__PURE__*/_jsx(CheckboxList,{terms:querymap,colorMap:colorMap,checkedTerms:checkedTerms,setCheckedTerms:setCheckedTerms,onCheckedTerms:handleCheckedTerms})]})]})]}):'']})]})})]})});}","map":{"version":3,"names":["React","useState","useEffect","HtmlViewer","CheckboxList","FileUpload","Provider","store","SearchResults","Box","pdfjsLib","axios","Loader","styles","useLocation","DocumentList","AddTerm","TextInput","FileInput","DocRankUI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","apiUrl","process","env","REACT_APP_API_URL","App","pdf","setPdf","width","setWidth","images","setImages","height","setHeight","totalPages","setTotalPages","currentPage","setCurrentPage","pdfRendering","setPdfRendering","pageRendering","setPageRendering","searchQuery","setSearchQuery","searchResults","setSearchResults","fileText","setFileText","docranks","setDocRanks","alldocsready","setAllDocsReady","isLoading","setIsLoading","currhtml","setcurrhtml","queryterms","setqueryterms","fileData","setFileData","querymap","setquerymap","fileNames","setFileNames","colorMap","setcolorMap","showpage","setshowpage","pdfUrls","setPdfUrls","showDocs","setshowdocs","allHtmls","setAllHtmls","currShowing","setCurrShowing","oninit","setonint","onranked","setonranked","newtermsupdate","setnewtermsupdate","showinitbox","setshowinitbox","showtextinput","setshowtextinput","showfileselector","setshowfileselector","docrankscreen","setdocrankscreen","showrankorpdf","setshowrankorpdf","enablestartRanking","setenablestartRanking","openinitscreen","opentermeditor","openfileuploader","openrankeddocs","openshowpdffile","reloadPage","window","location","reload","closefileinput","movetorankscreen","generateUniqueHighlightColors","result","hues","saturation","hue","lightness","color","concat","push","brightColors","setbrightColors","colorObject","forEach","documents","setDocuments","param1","setParam1","param2","setParam2","queryParams","URLSearchParams","search","param1Value","get","param2Value","console","log","openReactAppInNewWindow","url","jsonString","JSON","stringify","encodeURIComponent","finalUrl","newWindow","open","error","htmls","setHtmls","checkedTerms","setCheckedTerms","onMount","pdfUrlParam","jsonDataParam","jsonData","parse","decodeURIComponent","downloadPdfFromUrl","pdfUrl","handleCheckedTerms","trueTerms","Object","keys","filter","term","falseTerms","htmltemp","i","length","backgroundColor","backgroundStyle","re","RegExp","replace","match","iframe","document","getElementById","contentWindow","handleClick","event","preventDefault","targetId","targetElement","scrollIntoView","word","index","sentence","substring","bodyStartIndex","indexOf","bodyEndIndex","lastopen","lastIndexOf","lastclosed","firstopen","firstclose","updateTermObject","prevQueryMap","updatedQueryMap","includes","showPdf","fnamme","path","fetch","then","response","text","html","convertPDFToHTML","pdfFilePath","method","headers","body","Error","startconversion","cleanTexts","resultsdemo","rankTextscos","handleFetchFile","catch","rerankjacc","rankTextsjacc","setshowingdocs","rerankbm25","rankTextsbm25","rerankcoss","obj","cleanObj","regex","key","value","entries","cleanText","trim","renderPage","imagesList","canvas","createElement","setAttribute","canv","querySelector","numPages","page","getPage","viewport","getViewport","scale","render_context","canvasContext","getContext","render","promise","img","toDataURL","terms","texts","docVectors","docs","wordSet","Set","idf","doc","words","toLowerCase","Math","tf","vector","wordCount","results","map","docVector","score","matchedWords","k1","b","avgDocLength","reduce","sum","idfScore","docLengthNorm","tfScore","count","name","sort","a","queryVector","intersection","intersectionSize","unionSize","jaccardSimilarity","maxFreq","max","dotProduct","queryMagnitude","sqrt","docMagnitude","cosineSimilarity","has","fileName","arguments","undefined","hasOwnProperty","promises","fn","hml","data","originalSubstring","replacementSubstring","filesData","Promise","all","filesObject","acc","cur","message","showranks","showthispdf","children","className","src","alt","onClick","closetextinput","class","id","onCheckedTerms"],"sources":["/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\nimport HtmlViewer from \"./HtmlViewer\";\nimport CheckboxList from \"./CheckboxList\";\nimport FileUpload from \"./FileUpload\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport SearchResults from \"./SearchResults\";\nimport Box from \"./Box\";\nimport pdfjsLib from \"pdfjs-dist\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport styles from './stylenew.css';\n\nimport { useLocation } from 'react-router-dom';\nimport DocumentList from \"./DocumentList\";\nimport AddTerm from \"./AddTerm\";\nimport TextInput from \"./textinput\";\n\nimport FileInput from \"./fileselector\";\n\nimport DocRankUI from \"./DocRankUI\";\n\n\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport default function App() {\n\n  const [pdf, setPdf] = React.useState(\"\");\n  const [width, setWidth] = React.useState(0);\n  const [images, setImages] = React.useState([]);\n  const [height, setHeight] = React.useState(0);\n  const [totalPages, setTotalPages] = React.useState(1);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [pdfRendering, setPdfRendering] = React.useState(\"\");\n  const [pageRendering, setPageRendering] = React.useState(\"\");\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [fileText, setFileText] = React.useState({});\n  const [docranks, setDocRanks] = React.useState({});\n  const [alldocsready, setAllDocsReady] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [currhtml, setcurrhtml] = React.useState(\"\");\n  const [queryterms, setqueryterms] = React.useState([]);\n  const [fileData, setFileData] = useState(\"\");\n  const [querymap, setquerymap] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [colorMap, setcolorMap] = React.useState([]);\n  const [showpage, setshowpage] = React.useState(false);\n  const [pdfUrls, setPdfUrls] = useState([]);\n  const [showDocs, setshowdocs] = useState(false);\n  const [allHtmls, setAllHtmls] = useState({});\n  const [currShowing, setCurrShowing] = useState(\"\");\n\n  const [oninit, setonint] = useState(true);\n  const [onranked, setonranked] = useState(false);\n\n  const [newtermsupdate, setnewtermsupdate] =useState(false);\n\n\n\n\n  const [showinitbox, setshowinitbox] = useState(true);\n\n  const [showtextinput, setshowtextinput] = useState(false)\n  const [showfileselector, setshowfileselector] = useState(false);\n  const [docrankscreen, setdocrankscreen] = useState(false);\n  const [showrankorpdf, setshowrankorpdf] = useState(true);\n\n  const [enablestartRanking, setenablestartRanking] = useState(false);\n\n  const openinitscreen = () => {\n    setonint(true);\n    setonranked(false);\n    setshowinitbox(true);\n    setshowtextinput(false);\n    setshowfileselector(false);\n    setdocrankscreen(false);\n    setshowrankorpdf(false);\n  }\n\n  const opentermeditor = () => {\n    setshowinitbox(false);\n    setshowtextinput(true);\n    setshowfileselector(false);\n    setdocrankscreen(false);\n    setshowrankorpdf(false);\n  }\n  const openfileuploader = () => {\n    setshowinitbox(false);\n    setshowtextinput(false);\n    setshowfileselector(true);\n    setdocrankscreen(false);\n    setshowrankorpdf(false);\n  }\n  const openrankeddocs = () => {\n    setonint(false);\n    setonranked(true);\n    setshowinitbox(false);\n    setshowtextinput(false);\n    setshowfileselector(false);\n    setdocrankscreen(true);\n    setshowrankorpdf(true);\n  }\n  const openshowpdffile = () => {\n    setonint(false);\n    setonranked(false);\n    setshowinitbox(false);\n    setshowtextinput(false);\n    setshowfileselector(false);\n    setdocrankscreen(true);\n    setshowrankorpdf(false);\n  }\n\n  const reloadPage = () => {\n    window.location.reload(true); // true indicates a hard reload\n  };\n\n\n\n\n  // const [file, setFile] = useState(null);\n\n  // const handleChange = (event) => {\n  //   setFile(event.target.files[0]);\n  // }\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const reader = new FileReader();\n\n  //   reader.onload = async (event) => {\n  //     const fileData = event.target.result;\n  //     const fileDataString = fileData.toString();\n  //     console.log(fileDataString)\n\n  //     const path = \"./public/dataaaaaaaaaaaaaaaaaa.txt\";\n  //     try {\n  //       localStorage.setItem(path, fileDataString);\n  //       console.log(\"Data written to localStorage!\");\n  //     } catch (e) {\n  //       console.error(\"Error writing data to localStorage:\", e);\n  //     }\n  //   };\n\n  //   reader.readAsText(file);\n\n  //   setFile(null);\n  // };\n\n\n\n  const closefileinput = () => {\n\n    oninit ? openinitscreen() :\n      onranked ? openrankeddocs() : openshowpdffile();\n\n  }\n\n\n  const movetorankscreen = () => {\n    setshowinitbox(false);\n    setshowfileselector(false);\n    setshowtextinput(false);\n    setdocrankscreen(true);\n  }\n  const generateUniqueHighlightColors = () => {\n    const result = [];\n    const hues = [0, 45, 90, 135, 180, 225, 270, 315]; // More diverse hues\n    const saturation = 70; // Fixed saturation for better consistency\n\n    for (let hue of hues) {\n      for (let lightness = 60; lightness <= 90; lightness += 10) {\n        const color = `hsl(${hue}, ${saturation}%, ${lightness}%)`; // Use HSL color model for bright and light colors\n        result.push(color);\n      }\n    }\n\n    return result;\n  };\n  // const generateUniqueHighlightColors = () => {\n  //   const result = [];\n  //   const hues = [0, 60, 120, 180, 240, 300]; // More diverse hues\n  //   const saturations = [50, 70, 90]; // Different saturation levels for variation\n\n  //   for (let hue of hues) {\n  //     for (let saturation of saturations) {\n  //       const lightness = Math.floor(Math.random() * 30) + 60; // Random lightness between 60 and 90\n  //       const color = `hsl(${hue}, ${saturation}%, ${lightness}%)`; // Use HSL color model for bright and light colors\n  //       result.push(color);\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n\n  // const brightColors = generateUniqueHighlightColors();\n\n  const [brightColors, setbrightColors] = useState(generateUniqueHighlightColors());\n\n  const colorObject = {};\n\n  brightColors.forEach(color => {\n    colorObject[color] = false;\n  });\n\n\n\n  const [documents, setDocuments] = useState(\n    []\n  );\n\n\n  const [param1, setParam1] = useState('');\n  const [param2, setParam2] = useState('');\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const param1Value = queryParams.get('param1');\n    const param2Value = queryParams.get('param2');\n\n    console.log(\"---------onsole.log(param1Value)\")\n    console.log(param1Value)\n    console.log(\"---------onsole.log(param1Value)\")\n    console.log(param2Value)\n    setParam1(param1Value);\n    setParam2(param2Value);\n\n\n  }, []);\n\n\n  const openReactAppInNewWindow = () => {\n    const url = 'http://sysrev2.cs.binghamton.edu:3001/openapp';\n    const jsonString = JSON.stringify([{\n      \"resultId\": 1971,\n      \"document\": {\n        \"title\": \"Distributional Reinforcement Learning in the Brain.\",\n        \"articleDate\": \"2020 Dec\",\n        \"authorNames\": [\n          \"Lowet AS\",\n          \"Zheng Q\",\n          \"Matias S\",\n          \"Drugowitsch J\",\n          \"Uchida N\"\n        ],\n        \"affiliationCountry\": null,\n        \"publicationName\": \"distributional reinforcement learning in the brain\",\n        \"issn\": \"0166-2236\",\n        \"affiliationNames\": null,\n        \"url\": \"https://pubmed.ncbi.nlm.nih.gov/33092893\"\n      },\n      \"priority\": 0,\n      \"datasource\": \"PUBMED\"\n    },\n    {\n      \"resultId\": 1972,\n      \"document\": {\n        \"title\": \"Reinforcement Distributional Learning in the Brain.\",\n        \"articleDate\": \"2020 Dec\",\n        \"authorNames\": [\n          \"Lowet AS\",\n          \"Zheng Q\",\n          \"Matias S\",\n          \"Drugowitsch J\",\n          \"Uchida N\"\n        ],\n        \"affiliationCountry\": null,\n        \"publicationName\": \"distributional reinforcement learning in the brain\",\n        \"issn\": \"0166-2236\",\n        \"affiliationNames\": null,\n        \"url\": \"https://pubmed.ncbi.nlm.nih.gov/33092893\"\n      },\n      \"priority\": 0,\n      \"datasource\": \"PUBMED\"\n    },\n    {\n      \"resultId\": 1973,\n      \"document\": {\n        \"title\": \"Learning Distributional Reinforcement in the Brain.\",\n        \"articleDate\": \"2020 Dec\",\n        \"authorNames\": [\n          \"Lowet AS\",\n          \"Zheng Q\",\n          \"Matias S\",\n          \"Drugowitsch J\",\n          \"Uchida N\"\n        ],\n        \"affiliationCountry\": null,\n        \"publicationName\": \"distributional reinforcement learning in the brain\",\n        \"issn\": \"0166-2236\",\n        \"affiliationNames\": null,\n        \"url\": \"https://pubmed.ncbi.nlm.nih.gov/33092893\"\n      },\n      \"priority\": 0,\n      \"datasource\": \"PUBMED\"\n    },\n    {\n      \"resultId\": 1974,\n      \"document\": {\n        \"title\": \"Brain Distributional Reinforcement Learning in the.\",\n        \"articleDate\": \"2020 Dec\",\n        \"authorNames\": [\n          \"Lowet AS\",\n          \"Zheng Q\",\n          \"Matias S\",\n          \"Drugowitsch J\",\n          \"Uchida N\"\n        ],\n        \"affiliationCountry\": null,\n        \"publicationName\": \"distributional reinforcement learning in the brain\",\n        \"issn\": \"0166-2236\",\n        \"affiliationNames\": null,\n        \"url\": \"https://pubmed.ncbi.nlm.nih.gov/33092893\"\n      },\n      \"priority\": 0,\n      \"datasource\": \"PUBMED\"\n    }]\n\n\n\n\n\n    );\n    const queryParams = `json=${encodeURIComponent(jsonString)}`;\n    const finalUrl = `${url}?${queryParams}`;\n    const newWindow = window.open(finalUrl, '_blank', 'width=800,height=600');\n\n    if (newWindow) {\n      // Optional: Add any additional logic if needed, such as handling popup blockers\n    } else {\n      // Handle case where the new window could not be opened, e.g., due to popup blockers\n      console.error('Failed to open new window');\n    }\n  };\n\n\n  const [htmls, setHtmls] = React.useState(\"\");\n\n  const [checkedTerms, setCheckedTerms] = useState({});\n\n\n  const onMount = async () => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const pdfUrlParam = queryParams.get(\"pdf_urls\");\n\n    const jsonDataParam = queryParams.get(\"json\");\n\n    if (jsonDataParam) {\n      try {\n        const jsonData = JSON.parse(decodeURIComponent(jsonDataParam));\n\n        setDocuments(jsonData)\n        console.log('Received JSON data:', jsonData);\n        // Continue with your logic to process the received JSON data\n      } catch (error) {\n        console.error('Error parsing JSON data:', error);\n      }\n    }\n\n\n    console.log(\"data in api\", jsonDataParam);\n\n  };\n\n  const downloadPdfFromUrl = async (pdfUrl) => {\n    try {\n\n      console.log(\"downloading\" + pdfUrl)\n      // const response = await axios.get(pdfUrl, { responseType: \"arraybuffer\" });\n      // const pdfData = response.data;\n      // // Here, you can save the PDF data or perform any necessary processing.\n      return pdfUrl;\n    } catch (error) {\n      console.error(\"Error downloading PDF from URL:\", pdfUrl, error);\n      return null;\n    }\n  };\n\n\n  useEffect(() => {\n    onMount();\n  }, []); // Call onMount when the component mounts\n\n\n  const handleCheckedTerms = (checkedTerms) => {\n    console.log(\"Checked terms:\", checkedTerms);\n    const trueTerms = Object.keys(checkedTerms).filter(\n      (term) => checkedTerms[term]\n    );\n\n    const falseTerms = Object.keys(checkedTerms).filter(\n      (term) => !checkedTerms[term]\n    );\n\n    // const colorMap = colormap;\n\n    // let htmltemp = htmls;\n    let htmltemp = allHtmls[currShowing];\n\n    // for (let i = 0; i < falseTerms.length; i++) {\n    //   const backgroundStyle = `background-color: white;`;\n\n\n\n\n    //   htmltemp = htmltemp.replace(\n    //     new RegExp(falseTerms[i], \"gi\"),\n    //     `<span style=\"${backgroundStyle}\">${falseTerms[i]}</span>`\n    //   );\n    // }\n\n    for (let i = 0; i < trueTerms.length; i++) {\n      const backgroundColor = colorMap[trueTerms[i]];\n      const backgroundStyle = checkedTerms[trueTerms[i]]\n        ? `\n          background-color: ${backgroundColor};\n          border-radius: 3px; /* Rounded corners */\n          box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3); /* Drop shadow */\n          padding: 2px 4px; /* Padding for better spacing */\n          color: white; /* Text color on highlighted background */\n          pointer-events: none;\n        `\n        : `background-color: white;`;\n\n      const re = new RegExp(`>${trueTerms[i]}<`, \"gi\");\n      htmltemp = htmltemp.replace(re, (match) => {\n        return match.replace(/<span name = \"highlightedtextdebug\" style=\"[^\"]*\">(.*?)<\\/span>/gi, \"$1\");\n      });\n\n      // htmltemp = htmltemp.replace(\n      //   new RegExp(`>[^<]*(${trueTerms[i]})[^<]*<`, \"gi\"),\n      //   (match) => {\n      //     return match.replace(\n      //       new RegExp(`(${trueTerms[i]})`, \"gi\"),\n      //       `<span style=\"${backgroundStyle}\">$1</span>`\n      //     );\n      //   }\n      // );\n\n      const iframe = document.getElementById('viewer-iframe');\n\n\n      iframe.contentWindow.handleClick = function (event, term) {\n        event.preventDefault(); // Prevent default behavior of clicking on the span tag\n        const targetId = term;\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          // Scroll to the target element within the iframe\n          targetElement.scrollIntoView();\n        }\n      };\n\n      // const stylePattern = /<style[^>]*>.*?<\\/style>/gs;\n\n      // // Match and replace the style attribute\n      // htmltemp = htmltemp.replace(stylePattern, (match) => {\n\n      //     // Remove or modify the style for #page-container here\n      //     return match.replace(/#page-container/g, '#mo-page-container');\n      // });\n\n      // const originalSubstring = \"#page-container{bottom:0;right:0;overflow:auto}\";\n      // const replacementSubstring = \"#page-container{bottom:0;overflow:auto}\";\n\n      // htmltemp = htmltemp.replace(originalSubstring, replacementSubstring);\n\n\n\n      htmltemp = htmltemp.replace(\n        new RegExp(`(?<![\\\\w</])(${trueTerms[i]})(?![\\\\w/>:=])`, \"gi\"),\n\n\n        // new RegExp(`(?<=^|>)[^<]*(?<![:=])(${trueTerms[i]})(?![^<]*<|[:=])`, \"gi\"),\n\n\n\n        (match, word, index) => {\n\n          const sentence = htmltemp.substring(index - 15, index + 20);\n          console.log(\"Sentence:\", sentence);\n          console.log(\"printing index\", index);\n          const bodyStartIndex = htmltemp.indexOf('<body');\n          const bodyEndIndex = htmltemp.indexOf('</body>');\n\n          if (bodyStartIndex > index || bodyEndIndex < index) {\n            return match;\n          }\n\n\n          const lastopen = htmltemp.substring(bodyStartIndex, index).lastIndexOf(\"<\");\n          const lastclosed = htmltemp.substring(bodyStartIndex, index).lastIndexOf(\">\");\n          const firstopen = htmltemp.substring(index, bodyEndIndex).indexOf(\"<\");\n          const firstclose = htmltemp.substring(index, bodyEndIndex).indexOf(\">\");\n\n          console.log(\"lastopen words----\", lastopen);\n          console.log(\"lastclosed words----\", lastclosed);\n          console.log(\"firstopen words----\", firstopen);\n          console.log(\"firstclose words----\", firstclose);\n\n          if (lastopen > lastclosed || firstopen > firstclose) {\n            return match;\n          }\n\n          console.log(\"matched words----\", match)\n\n          return match.replace(\n            new RegExp(`(?<![\\\\w</])(${trueTerms[i]})(?![\\\\w/>:=])`, \"gi\"),\n            // new RegExp(`(?<=[>])(\\\\b${trueTerms[i]}\\\\b)(?![^<]*<)`, \"gi\"),\n            // new RegExp(`(?<=^|>)[^<]*(?<![:=])(${trueTerms[i]})(?![^<]*<|[:=])`, \"gi\"),\n\n            `<span style=\"${backgroundStyle}\" >$1</span>`\n            // `<span style=\"${backgroundStyle}\" >$1</span>`\n            // `<span style=\"${backgroundStyle}\" pointer-events: none;>$1</span>`\n            // <span style=\"${backgroundStyle}; pointer-events: auto;\" onclick=\"window.location.href = 'http://sysrev2.cs.binghamton.edu:3001/#pf1'\">$1</span>\n\n          );\n        }\n      );\n\n      // htmltemp = htmltemp.replace(\n      //   new RegExp(`([^<>]*>)?([^<]*(${trueTerms[i]})([^<]*<)?[^<>]*)`, \"gi\"),\n      //   (match, before, term, after) => {\n      //     return `${before}<span style=\"${backgroundStyle}\">${term}</span>${after}`;\n      //   }\n      // );\n\n\n    }\n\n    setHtmls(htmltemp);\n  };\n\n\n\n\n  function updateTermObject() {\n    setquerymap((prevQueryMap) => {\n      const updatedQueryMap = { ...prevQueryMap };\n      // Add new terms to the querymap with default value false\n      queryterms.forEach((term) => {\n        if (!updatedQueryMap[term]) {\n          updatedQueryMap[term] = false;\n        }\n      });\n      // Remove terms from the querymap that are missing from queryterms\n      Object.keys(updatedQueryMap).forEach((term) => {\n        if (!queryterms.includes(term)) {\n          delete updatedQueryMap[term];\n        }\n      });\n      return updatedQueryMap;\n    });\n  }\n\n  useEffect(() => {\n    updateTermObject();\n  }, [queryterms]);\n\n  async function showPdf(fnamme) {\n    try {\n      fnamme = fnamme.replace(\"pdf\", \"html\");\n      const path = fnamme;\n\n      fetch(path)\n        .then((response) => response.text())\n        .then((html) => {\n          html = html.replace(/<span class=\"_ _\\d+\"><\\/span>/g, \"\");\n\n          setHtmls(html);\n        });\n    } catch (error) {\n      console.log(\"file not found\");\n    }\n  }\n\n  // const convertPDFToHTML = async () => {\n  //   console.log(\"name of all files--=-=-=-=-\",fileNames);\n  //   let pdfFilePath = \"./sample.pdf\";\n  //   try {\n  //     const response = await fetch(\n  //       `${apiUrl}/api/convert-pdf-to-html?_=${new Date().getTime()}`,\n  //       { timeout: 10000 }\n  //     );\n  //     return await response.text();\n  //   } catch (error) {\n  //     console.error(error);\n  //     throw new Error(\"Failed to convert PDF to HTML\");\n  //   }\n  // };\n\n  const convertPDFToHTML = async () => {\n    console.log(\"name of all files--=-=-=-=-\", fileNames);\n    let pdfFilePath = \"./sample.pdf\";\n    try {\n      const response = await fetch(\n        `${apiUrl}/api/convert-pdf-to-html`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ fileNames })\n        }\n      );\n      return await response.text();\n    } catch (error) {\n      console.error(error);\n      throw new Error(\"Failed to convert PDF to HTML\");\n    }\n  };\n\n\n  const startconversion = async () => {\n\n    setnewtermsupdate(false);\n    setIsLoading(true);\n    await convertPDFToHTML()\n      .then((html) => {\n        // alert(\"yes\");\n        setFileText(cleanTexts(fileText));\n        const resultsdemo = rankTextscos(queryterms, fileText);\n\n        console.log(queryterms);\n        // console.log(fileText);\n        console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n        setAllDocsReady(true);\n        setDocRanks(resultsdemo);\n        console.log(resultsdemo);\n        // getAllHTML();\n        handleFetchFile();\n        setIsLoading(false);\n        openrankeddocs();\n      })\n      .catch((error) => {\n        setIsLoading(false);\n      });\n  };\n\n  function rerankjacc() {\n    setIsLoading(true);\n    const resultsdemo = rankTextsjacc(queryterms, fileText);\n    // openReactAppInNewWindow()\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n\n  function setshowingdocs() {\n    setshowdocs(!showDocs)\n  }\n\n\n  function rerankbm25() {\n    setIsLoading(true);\n    const resultsdemo = rankTextsbm25(queryterms, fileText);\n\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function rerankcoss() {\n    setIsLoading(true);\n    const resultsdemo = rankTextscos(queryterms, fileText);\n\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function cleanTexts(obj) {\n    const cleanObj = {};\n    const regex = /[^a-zA-Z0-9 ]/g; // Regex to match non-alphanumeric characters\n    for (const [key, value] of Object.entries(obj)) {\n      const cleanText = value.replace(regex, \" \"); // Replace non-alphanumeric characters with spaces\n      cleanObj[key] = cleanText.trim(); // Trim leading and trailing spaces and add to new object\n    }\n    return cleanObj;\n  }\n\n\n\n\n  async function renderPage() {\n    setPageRendering(true);\n    const imagesList = [];\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"className\", \"canv\");\n    let canv = document.querySelector(\".canv\");\n\n    for (let i = 1; i <= pdf.numPages; i++) {\n      var page = await pdf.getPage(i);\n      var viewport = page.getViewport({ scale: 1 });\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      var render_context = {\n        canvasContext: canvas.getContext(\"2d\"),\n        viewport: viewport,\n      };\n      console.log(\"page lenght\", pdf.numPages);\n      setWidth(viewport.width);\n      setHeight(viewport.height);\n      await page.render(render_context).promise;\n      let img = canvas.toDataURL(\"image/png\");\n      imagesList.push(img);\n    }\n    setImages(imagesList);\n    setPageRendering(false);\n  }\n\n  useEffect(() => {\n    pdf && renderPage();\n  }, [pdf, currentPage]);\n\n  function rankTextsbm25(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n\n    // calculate the inverse document frequency for each term\n    const idf = {};\n    docs.forEach((doc) => {\n      const words = new Set(texts[doc].toLowerCase().match(/\\b\\w+\\b/g)); // split the text into words and convert to a set\n      words.forEach((word) => {\n        if (idf[word]) {\n          idf[word]++;\n        } else {\n          idf[word] = 1;\n        }\n      });\n    });\n    Object.keys(idf).forEach((term) => {\n      idf[term] = Math.log(docs.length / idf[term]);\n    });\n\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      const tf = {}; // stores the term frequency for each word\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n      });\n      // store the vector and the word count for the document\n      docVectors[doc] = { vector: tf, wordCount: words.length };\n    });\n\n    // calculate the Okapi BM25 score for each document\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      let score = 0;\n      const matchedWords = [];\n      terms.forEach((term) => {\n        if (docVector[term]) {\n          const tf = docVector[term];\n          const k1 = 1.2;\n          const b = 0.75;\n          const avgDocLength =\n            docs.reduce((sum, doc) => {\n              return sum + docVectors[doc].wordCount;\n            }, 0) / docs.length;\n          const idfScore = idf[term];\n          const docLengthNorm = 1 - b + b * (wordCount / avgDocLength);\n          const tfScore = ((k1 + 1) * tf) / (k1 * docLengthNorm + tf);\n          score += idfScore * tfScore;\n          matchedWords.push({ word: term, count: docVector[term] });\n        }\n      });\n      return {\n        name: doc,\n        score: score,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n\n    return results;\n  }\n\n  function rankTextsjacc(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      const tf = {}; // stores the term frequency for each word\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n      });\n      // store the vector and the word count for the document\n      docVectors[doc] = { vector: tf, wordCount: words.length };\n    });\n\n    // calculate the Jaccard similarity between the term frequency vectors and the query vector\n    const queryVector = {};\n    terms.forEach((term) => {\n      queryVector[term] = 1;\n    });\n\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      const intersection = {};\n      let intersectionSize = 0;\n      let unionSize = wordCount;\n      Object.keys(queryVector).forEach((term) => {\n        if (docVector[term]) {\n          intersection[term] = docVector[term];\n          intersectionSize += docVector[term];\n        } else {\n          unionSize += 1;\n        }\n      });\n\n      const jaccardSimilarity = intersectionSize / unionSize;\n\n      const matchedWords = Object.keys(intersection).map((word) => {\n        return { word: word, count: intersection[word] };\n      });\n\n      return {\n        name: doc,\n        score: jaccardSimilarity,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n\n    return results;\n  }\n\n  function rankTextscos(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n    console.log(\"----docs in ranking\");\n\n    console.log(texts);\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      console.log(\"--------\");\n      console.log(words);\n      console.log(\"--------\");\n      const tf = {}; // stores the term frequency for each word\n      var maxFreq = 0; // stores the highest frequency of any word in the document\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n        maxFreq = Math.max(maxFreq, tf[word]);\n      });\n      // normalize the term frequency vector by dividing each frequency by the max frequency\n      const docVector = {};\n      Object.keys(tf).forEach((word) => {\n        docVector[word] = tf[word];\n      });\n      docVectors[doc] = { vector: docVector, wordCount: words.length }; // store the vector and the word count for the document\n    });\n\n    // calculate the cosine similarity between the term frequency vectors and the query vector\n    const queryVector = {};\n    terms.forEach((term) => {\n      queryVector[term] = 1;\n    });\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      const dotProduct = Object.keys(queryVector).reduce((sum, term) => {\n        if (docVector[term]) {\n          return sum + queryVector[term] * docVector[term];\n        } else {\n          return sum;\n        }\n      }, 0);\n      const queryMagnitude = Math.sqrt(\n        Object.keys(queryVector).reduce((sum, term) => {\n          return sum + queryVector[term] * queryVector[term];\n        }, 0)\n      );\n      const docMagnitude = Math.sqrt(\n        Object.keys(docVector).reduce((sum, term) => {\n          return sum + docVector[term] * docVector[term];\n        }, 0)\n      );\n      const cosineSimilarity = dotProduct / (queryMagnitude * docMagnitude);\n      // find the words in the text that match the query terms and calculate their frequency in the document\n      // find the words in the text that match the query terms and calculate their frequency in the document\n      const matchedWords = Object.keys(docVector)\n        .filter((word) => {\n          return wordSet.has(word);\n        })\n        .map((word) => {\n          return { word: word, count: docVector[word] }; // use the frequency directly\n        });\n\n      return {\n        name: doc,\n        score: cosineSimilarity,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n    setAllDocsReady(true);\n    return results;\n  }\n\n  // const handleFetchFile = async (fileName) => {\n  //   try {\n  //     const response = await axios.get(\n  //       `${apiUrl}/api/getFile/${fileName}`\n  //     );\n  //     console.group(\"found html file \" + response.data);\n  //     setHtmls(response.data);\n  //   } catch (error) {\n  //     console.error(`Error fetching file ${fileName}: ${error.message}`);\n  //   }\n  // };\n\n  const handleFetchFile = async (fileName = \"\") => {\n    console.log(\"handleFetchFile called\")\n\n    if (fileName != \"\" && allHtmls.hasOwnProperty(fileName)) {\n      setHtmls(allHtmls[fileName]);\n      return;\n    }\n    try {\n      const promises = fileNames.map(async (fn) => {\n        fn = fn.replace(\"pdf\", \"html\");\n        const response = await axios.get(`${apiUrl}/api/getFile/${fn}`);\n        let hml = response.data;\n        const originalSubstring = \"#page-container{bottom:0;right:0;overflow:auto}\";\n        const replacementSubstring = \"#page-container{bottom:0;overflow:auto}\";\n\n        hml = hml.replace(originalSubstring, replacementSubstring);\n\n\n        return { [fn]: hml }; // Return an object with file name as key and file content as value\n      });\n\n      const filesData = await Promise.all(promises);\n\n      // Combine file data into a single object\n      const filesObject = filesData.reduce((acc, cur) => ({ ...acc, ...cur }), {});\n      setAllHtmls(filesObject)\n      if (fileName != \"\") {\n        setHtmls(filesObject[fileName]);\n      }\n\n    } catch (error) {\n      console.error(`Error fetching files: ${error.message}`);\n    }\n  };\n\n\n  function showranks() {\n    setshowrankorpdf(true)\n    setshowpage(false);\n  }\n  function showthispdf(fnamme) {\n    setshowpage(true);\n    openshowpdffile();\n    // setshowrankorpdf(false);\n    fnamme = fnamme.replace(\"pdf\", \"html\");\n    setCurrShowing(fnamme);\n    handleFetchFile(fnamme);\n  }\n\n  return (\n    <Provider store={store}>\n      {/* <div className=\"container\">\n        <div className=\"first-row\">\n          <div className=\"header\">\n            <h2>PaperRank</h2>\n            <h5>\"Accelerate Your Research\"</h5>\n\n          </div>\n\n          <div className=\"queryupload\">\n            <Loader isLoading={isLoading} />\n            <div class=\"section\">\n              <div class=\"container-fluid\">\n                <div class=\"row\">\n                  <div class=\"q col-sm-6\">\n                    <h4>Query</h4>\n                    <Box queryterms={queryterms} brightColors={brightColors} setbrightColors={setbrightColors} setcolorMap={setcolorMap} setqueryterms={setqueryterms} />\n                  </div>\n                  <div class=\"f col-sm-6\">\n                    <h4>File Upload</h4>\n                    <i class=\"fa-solid fa-cloud-arrow-up\"></i> <FileUpload setIsLoading={setIsLoading} setFileText={setFileText} setFileNames={setFileNames} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"right-column\">\n            <div class=\"row\">\n              <div id=\"pdf-contents\">\n                <div id=\"pdf-meta\">\n                  <div id=\"pdf-buttons\">\n                    <div class=\"terms col-sm-1\"></div>\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={startconversion}>Start Ranking</button>\n                    </div>\n\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={rerankcoss}>Start cosine ranking</button>\n                    </div>\n\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={rerankjacc}>Start jaccard ranking</button>\n                    </div>\n\n                 \n\n                    {documents.length > 0 && <div class=\"terms col-sm-2\">\n                      <button onClick={() => { setshowingdocs() }}>Show docs</button>\n                    </div>}\n\n                    <div class=\"terms col-sm-2\">\n                      <button onClick={showranks}>{\"< Back to document ranks\"}</button>\n                    </div>\n                    <div class=\"terms col-sm-1\"></div>\n\n\n                  </div>\n\n                  <div></div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"second-row\">\n          <div className=\"afterupload\">\n            <div class=\"p row\">\n              <div class=\"first-column\">\n\n\n\n                {(documents.length > 0) && showDocs ? (<div id=\"pdf-main-container\">\n\n                  <DocumentList handleCheckboxChange={() => { console.log(\"hc---\") }} documents={documents} />\n\n                </div>)\n\n                  :\n\n\n                  (showpage ?\n\n                    <div id=\"pdf-main-container\">\n\n                      <HtmlViewer html={htmls} />\n\n                    </div>\n                    // )\n                    :\n                    alldocsready ? (\n                      <div id=\"pdf-main-container\"> <div>\n                        <SearchResults results={docranks} showthispdf={showthispdf} />\n                      </div></div>\n                    ) : (\n                      \"\"\n                    )\n                  )}\n              </div>\n              <div className=\"second-column\">\n                <div class=\"terms col-sm-3\">\n\n                  <h1>Terms</h1>\n                  <CheckboxList\n                    terms={querymap}\n                    colorMap={colorMap}\n                    checkedTerms={checkedTerms}\n                    setCheckedTerms={setCheckedTerms}\n                    onCheckedTerms={handleCheckedTerms}\n                  />\n                </div>\n\n\n              </div>\n            </div>\n\n\n\n          </div>\n\n        </div>\n      </div> */}\n      {/* <div class=\"fotter\">\n      </div> */}\n\n      {/* new ui */}\n\n      <div className=\"app-container\">\n        <Loader isLoading={isLoading} />\n\n        <div className=\"mac-book-pro141-container\">\n          <div className=\"mac-book-pro141-mac-book-pro141\">\n            <div className=\"mac-book-pro141-frame1\">\n              <span className=\"mac-book-pro141-text\">\n                <span>Research Analyst</span>\n              </span>\n              <img\n                src=\"/external/ictwotonereadmore2380-sg1m.svg\"\n                alt=\"ictwotonereadmore2380\"\n                className=\"mac-book-pro141-ictwotonereadmore\"\n              />\n              <div className=\"mac-book-pro141-iconparkoutlinemoreapp\">\n                <div className=\"mac-book-pro141-group\">\n                  <img\n                    src=\"/external/vector2392-vwv.svg\"\n                    alt=\"Vector2392\"\n                    className=\"mac-book-pro141-vector\"\n                  />\n                  <img\n                    src=\"/external/vector2393-328f.svg\"\n                    alt=\"Vector2393\"\n                    className=\"mac-book-pro141-vector1\"\n                  />\n\n                </div>\n              </div>\n            </div>\n\n\n            <div className=\"bodycontainer1\">\n              {showinitbox && !showtextinput && !showfileselector ?\n\n                <div className=\"positioningrelative\">\n                  <div className=\"mac-book-pro141-initcomp\">\n\n\n\n                    <div className=\"mac-book-pro141-searchboxmain\">\n\n                      <button onClick={openfileuploader} className=\"mac-book-pro141-rectangle22\">\n                        <div className=\"mac-book-pro141-materialsymbolsupload\"></div>\n\n                        <div className=\"mac-book-pro141-text02\">\n                          <span>UPLOAD PAPERS</span>\n                        </div>\n                      </button>\n\n                    </div>\n\n\n\n\n\n                    <div className=\"mac-book-pro141-searchboxmain2\">\n\n                      <button onClick={opentermeditor} className=\"mac-book-pro141-rectangle22\">\n                        <div className=\"mac-book-pro141-materialsymbolsupload\"></div>\n\n                        <div className=\"mac-book-pro141-text02\">\n                          <span>ADD SEARCH TERMS</span>\n                        </div>\n                      </button>\n                    </div>\n\n\n                    <button onClick={startconversion} className=\"mac-book-pro141-startbutton\">\n\n                        <div className=\"mac-book-pro141-text16\">\n                          <span>Start Ranking</span>\n                        </div>\n\n                      </button>\n\n                  </div>\n                </div> : ''}\n\n\n              {showfileselector ?\n                <FileInput fileNames={fileNames} setIsLoading={setIsLoading} setFileText={setFileText} setFileNames={setFileNames} closefileinput={closefileinput} />\n                : ''}\n\n              {showtextinput ?\n                <TextInput setnewtermsupdate={setnewtermsupdate} queryterms={queryterms} brightColors={brightColors} setbrightColors={setbrightColors} setcolorMap={setcolorMap} setqueryterms={setqueryterms} closetextinput={closefileinput} />\n                : ''}\n\n              {docrankscreen ? <>\n\n                <div className=\"menubuttons\">\n                  <div class=\"terms cs1\"></div>\n                  <div class=\"terms cs2\">\n                    {\n                      newtermsupdate ? <button className=\"menubutton2-alert\" onClick={startconversion}>Update Ranks</button>\n                        : <button className=\"menubutton2\" onClick={startconversion}>Re-Rank Documents</button>\n\n                    }\n                    </div>\n                  <div class=\"terms cs2\">\n                    <button className=\"menubutton2\" onClick={opentermeditor}>EDIT TERMS</button>\n                  </div>\n\n                  <div class=\"terms cs2\">\n                    <button className=\"menubuttonreset\" onClick={reloadPage}>RESET</button>\n                  </div>\n\n                  {/* {documents.length > 0 && <div class=\"terms col-sm-2\">\n                    <button onClick={() => { fileuploader }}>Show docs</button>\n                  </div>} */}\n\n                  {!showrankorpdf &&\n                    <div class=\"terms cs2\">\n                      <button className=\"menubutton2\" onClick={openrankeddocs}>SHOW RANKS</button>\n                    </div>}\n                  <div class=\"terms cs1\"></div>\n\n                </div>\n\n\n                {showrankorpdf ?\n\n                  <DocRankUI results={docranks} showthispdf={showthispdf} />\n\n                  : <><div id=\"pdf-main-container\">\n\n                    <HtmlViewer html={htmls} />\n                  </div>\n                    <div class=\"terms col-sm-3\">\n\n                      <h1>Terms</h1>\n                      <CheckboxList\n                        terms={querymap}\n                        colorMap={colorMap}\n                        checkedTerms={checkedTerms}\n                        setCheckedTerms={setCheckedTerms}\n                        onCheckedTerms={handleCheckedTerms}\n                      />\n                    </div></>\n                }\n              </>\n                : ''}\n            </div>\n\n            {/* component 1 upload and input screen ---- */}\n          </div>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}