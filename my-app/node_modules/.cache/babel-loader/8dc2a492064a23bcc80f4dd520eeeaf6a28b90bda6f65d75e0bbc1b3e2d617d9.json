{"ast":null,"code":"import _slicedToArray from\"/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useEffect, useState } from \"react\";\n// import \"./HTMLViewer.css\"; // Import your CSS file if needed\n// import htmlpdfviewer from 'html-pdf-viewer';\n// import Button from 'react-bootstrap/Button';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faSearchPlus, faSearchMinus } from '@fortawesome/free-solid-svg-icons';\n// const HTMLViewer = ({ html }) => {\n//   const [scale, setScale] = useState(1.2); // Initial scale factor\n//   const [pageNum, setPageNum] = useState(1); // State to keep track of current page number\n//   const handleZoomIn = () => {\n//     setScale(scale + 0.1); // Increase scale factor by 0.1\n//   };\n//   const handleZoomOut = () => {\n//     if(scale>1.1){\n//       setScale(scale - 0.1); \n//     }\n//     // Decrease scale factor by 0.1\n//   };\n//   useEffect(()=>{console.log(scale)},[scale])\n//   useEffect(() => {\n//     setPageNum(1);\n//   }, [html]); // Reset page number whenever the HTML changes\n//   const goToPrevPage = () => {\n//     if (pageNum > 1) {\n//       setPageNum(pageNum - 1);\n//     }\n//   };\n//   const viewPdf = () => {\n//     return htmlpdfviewer(html, { output: { mode: 'display', container: '#iframeId', height: 800 } });\n//   }\n//   const goToNextPage = () => {\n//     const iframe = document.getElementById(\"viewer-iframe\");\n//     const numPages = iframe.contentWindow.document.querySelectorAll(\"body > div\").length;\n//     if (pageNum < numPages) {\n//       setPageNum(pageNum + 1);\n//     }\n//   };\n//   return (\n//     <>\n//       <div className=\"pdfcontainerinside\">\n//         <button onClick={handleZoomIn}>\n//   <FontAwesomeIcon icon={faSearchPlus} /> Zoom In\n// </button>\n// <button onClick={handleZoomOut}>\n//   <FontAwesomeIcon icon={faSearchMinus} /> Zoom Out\n// </button>\n//       {/* </div> */}\n//       <div className=\"iframe-container\">\n//         <iframe\n//           id=\"viewer-iframe\"\n//           title=\"HTML Viewer\"\n//           srcDoc={html}\n//           style={{\n//             transform: `scale(${scale})`, // Dynamically set the scale factor\n//             transformOrigin: \"0 0\", // Set the origin of transformation\n//           }}\n//         />\n//       </div>\n//     </div>\n//     </>\n//   );\n// };\n// export default HTMLViewer;\nimport React,{useEffect,useState}from\"react\";import\"./HTMLViewer.css\";// Import your CSS file if needed\nimport htmlpdfviewer from'html-pdf-viewer';import Button from'react-bootstrap/Button';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSearchPlus,faSearchMinus}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var HTMLViewer=function HTMLViewer(_ref){var html=_ref.html;var _useState=useState(1.2),_useState2=_slicedToArray(_useState,2),scale=_useState2[0],setScale=_useState2[1];// Initial scale factor\nvar _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),pageNum=_useState4[0],setPageNum=_useState4[1];// State to keep track of current page number\nvar handleZoomIn=function handleZoomIn(){setScale(scale+0.1);// Increase scale factor by 0.1\n};var handleZoomOut=function handleZoomOut(){if(scale>1.1){setScale(scale-0.1);}// Decrease scale factor by 0.1\n};useEffect(function(){console.log(scale);},[scale]);useEffect(function(){setPageNum(1);},[html]);// Reset page number whenever the HTML changes\nvar goToPrevPage=function goToPrevPage(){if(pageNum>1){setPageNum(pageNum-1);}};var viewPdf=function viewPdf(){return htmlpdfviewer(html,{output:{mode:'display',container:'#iframeId',height:800}});};var goToNextPage=function goToNextPage(){// Increment page number if not already at the last page\nif(pageNum<getTotalPages()){setPageNum(pageNum+1);}};// Helper function to get total pages\nvar getTotalPages=function getTotalPages(){var iframe=document.getElementById(\"viewer-iframe\");if(iframe){return iframe.contentWindow.document.querySelectorAll(\"body > div\").length;}return 1;// Return 1 if iframe is not available\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pdfcontainerinside\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handleZoomIn,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSearchPlus}),\" Zoom In\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleZoomOut,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSearchMinus}),\" Zoom Out\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:goToPrevPage,children:\"Previous Page\"}),/*#__PURE__*/_jsx(\"button\",{onClick:goToNextPage,children:\"Next Page\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"iframe-container\",children:/*#__PURE__*/_jsx(\"iframe\",{id:\"viewer-iframe\",title:\"HTML Viewer\",srcDoc:html,style:{transform:\"scale(\".concat(scale,\")\"),// Dynamically set the scale factor\ntransformOrigin:\"0 0\"// Set the origin of transformation\n}})})]});};export default HTMLViewer;","map":{"version":3,"names":["React","useEffect","useState","htmlpdfviewer","Button","FontAwesomeIcon","faSearchPlus","faSearchMinus","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HTMLViewer","_ref","html","_useState","_useState2","_slicedToArray","scale","setScale","_useState3","_useState4","pageNum","setPageNum","handleZoomIn","handleZoomOut","console","log","goToPrevPage","viewPdf","output","mode","container","height","goToNextPage","getTotalPages","iframe","document","getElementById","contentWindow","querySelectorAll","length","children","className","onClick","icon","id","title","srcDoc","style","transform","concat","transformOrigin"],"sources":["/home/ashish/docpdf/pdfdoc/research-ranking-app/my-app/src/HtmlViewer.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import \"./HTMLViewer.css\"; // Import your CSS file if needed\n// import htmlpdfviewer from 'html-pdf-viewer';\n// import Button from 'react-bootstrap/Button';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faSearchPlus, faSearchMinus } from '@fortawesome/free-solid-svg-icons';\n\n\n// const HTMLViewer = ({ html }) => {\n\n//   const [scale, setScale] = useState(1.2); // Initial scale factor\n\n//   const [pageNum, setPageNum] = useState(1); // State to keep track of current page number\n \n//   const handleZoomIn = () => {\n//     setScale(scale + 0.1); // Increase scale factor by 0.1\n//   };\n\n//   const handleZoomOut = () => {\n//     if(scale>1.1){\n//       setScale(scale - 0.1); \n//     }\n//     // Decrease scale factor by 0.1\n//   };\n\n//   useEffect(()=>{console.log(scale)},[scale])\n//   useEffect(() => {\n//     setPageNum(1);\n\n   \n//   }, [html]); // Reset page number whenever the HTML changes\n\n//   const goToPrevPage = () => {\n//     if (pageNum > 1) {\n//       setPageNum(pageNum - 1);\n//     }\n//   };\n\n//   const viewPdf = () => {\n//     return htmlpdfviewer(html, { output: { mode: 'display', container: '#iframeId', height: 800 } });\n//   }\n\n//   const goToNextPage = () => {\n//     const iframe = document.getElementById(\"viewer-iframe\");\n//     const numPages = iframe.contentWindow.document.querySelectorAll(\"body > div\").length;\n//     if (pageNum < numPages) {\n//       setPageNum(pageNum + 1);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className=\"pdfcontainerinside\">\n\n//         <button onClick={handleZoomIn}>\n//   <FontAwesomeIcon icon={faSearchPlus} /> Zoom In\n// </button>\n// <button onClick={handleZoomOut}>\n//   <FontAwesomeIcon icon={faSearchMinus} /> Zoom Out\n// </button>\n\n\n//       {/* </div> */}\n//       <div className=\"iframe-container\">\n//         <iframe\n//           id=\"viewer-iframe\"\n//           title=\"HTML Viewer\"\n//           srcDoc={html}\n//           style={{\n//             transform: `scale(${scale})`, // Dynamically set the scale factor\n//             transformOrigin: \"0 0\", // Set the origin of transformation\n//           }}\n//         />\n//       </div>\n     \n//     </div>\n//     </>\n//   );\n// };\n\n// export default HTMLViewer;\n\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./HTMLViewer.css\"; // Import your CSS file if needed\nimport htmlpdfviewer from 'html-pdf-viewer';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearchPlus, faSearchMinus } from '@fortawesome/free-solid-svg-icons';\n\nconst HTMLViewer = ({ html }) => {\n  const [scale, setScale] = useState(1.2); // Initial scale factor\n  const [pageNum, setPageNum] = useState(1); // State to keep track of current page number\n\n  const handleZoomIn = () => {\n    setScale(scale + 0.1); // Increase scale factor by 0.1\n  };\n\n  const handleZoomOut = () => {\n    if (scale > 1.1) {\n      setScale(scale - 0.1);\n    }\n    // Decrease scale factor by 0.1\n  };\n\n  useEffect(() => { console.log(scale) }, [scale])\n  useEffect(() => {\n    setPageNum(1);\n  }, [html]); // Reset page number whenever the HTML changes\n\n  const goToPrevPage = () => {\n    if (pageNum > 1) {\n      setPageNum(pageNum - 1);\n    }\n  };\n\n  const viewPdf = () => {\n    return htmlpdfviewer(html, { output: { mode: 'display', container: '#iframeId', height: 800 } });\n  }\n\n  const goToNextPage = () => {\n    // Increment page number if not already at the last page\n    if (pageNum < getTotalPages()) {\n      setPageNum(pageNum + 1);\n    }\n  };\n\n  // Helper function to get total pages\n  const getTotalPages = () => {\n    const iframe = document.getElementById(\"viewer-iframe\");\n    if (iframe) {\n      return iframe.contentWindow.document.querySelectorAll(\"body > div\").length;\n    }\n    return 1; // Return 1 if iframe is not available\n  };\n\n  return (\n    <>\n      <div className=\"pdfcontainerinside\">\n        <button onClick={handleZoomIn}>\n          <FontAwesomeIcon icon={faSearchPlus} /> Zoom In\n        </button>\n        <button onClick={handleZoomOut}>\n          <FontAwesomeIcon icon={faSearchMinus} /> Zoom Out\n        </button>\n        <button onClick={goToPrevPage}>Previous Page</button>\n        <button onClick={goToNextPage}>Next Page</button>\n      </div>\n      <div className=\"iframe-container\">\n        <iframe\n          id=\"viewer-iframe\"\n          title=\"HTML Viewer\"\n          srcDoc={html}\n          style={{\n            transform: `scale(${scale})`, // Dynamically set the scale factor\n            transformOrigin: \"0 0\", // Set the origin of transformation\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default HTMLViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}