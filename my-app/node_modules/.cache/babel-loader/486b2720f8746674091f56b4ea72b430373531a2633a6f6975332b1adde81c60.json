{"ast":null,"code":"import _objectSpread from\"/home/ashish/pdfdoc/research-ranking-app/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/home/ashish/pdfdoc/research-ranking-app/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/ashish/pdfdoc/research-ranking-app/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/ashish/pdfdoc/research-ranking-app/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import\"./App.css\";import HtmlViewer from\"./HtmlViewer\";import CheckboxList from\"./CheckboxList\";import FileUpload from\"./FileUpload\";import{Provider}from\"react-redux\";import store from\"./store\";import SearchResults from\"./SearchResults\";import Box from\"./Box\";import pdfjsLib from\"pdfjs-dist\";import axios from\"axios\";import Loader from\"./Loader\";import{useLocation}from'react-router-dom';import DocList from\"./DocList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var apiUrl=process.env.REACT_APP_API_URL;export default function App(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),pdf=_React$useState2[0],setPdf=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),width=_React$useState4[0],setWidth=_React$useState4[1];var _React$useState5=React.useState([]),_React$useState6=_slicedToArray(_React$useState5,2),images=_React$useState6[0],setImages=_React$useState6[1];var _React$useState7=React.useState(0),_React$useState8=_slicedToArray(_React$useState7,2),height=_React$useState8[0],setHeight=_React$useState8[1];var _React$useState9=React.useState(1),_React$useState10=_slicedToArray(_React$useState9,2),totalPages=_React$useState10[0],setTotalPages=_React$useState10[1];var _React$useState11=React.useState(1),_React$useState12=_slicedToArray(_React$useState11,2),currentPage=_React$useState12[0],setCurrentPage=_React$useState12[1];var _React$useState13=React.useState(\"\"),_React$useState14=_slicedToArray(_React$useState13,2),pdfRendering=_React$useState14[0],setPdfRendering=_React$useState14[1];var _React$useState15=React.useState(\"\"),_React$useState16=_slicedToArray(_React$useState15,2),pageRendering=_React$useState16[0],setPageRendering=_React$useState16[1];var _React$useState17=React.useState(\"\"),_React$useState18=_slicedToArray(_React$useState17,2),searchQuery=_React$useState18[0],setSearchQuery=_React$useState18[1];var _React$useState19=React.useState([]),_React$useState20=_slicedToArray(_React$useState19,2),searchResults=_React$useState20[0],setSearchResults=_React$useState20[1];var _React$useState21=React.useState({}),_React$useState22=_slicedToArray(_React$useState21,2),fileText=_React$useState22[0],setFileText=_React$useState22[1];var _React$useState23=React.useState({}),_React$useState24=_slicedToArray(_React$useState23,2),docranks=_React$useState24[0],setDocRanks=_React$useState24[1];var _React$useState25=React.useState(false),_React$useState26=_slicedToArray(_React$useState25,2),alldocsready=_React$useState26[0],setAllDocsReady=_React$useState26[1];var _React$useState27=React.useState(false),_React$useState28=_slicedToArray(_React$useState27,2),isLoading=_React$useState28[0],setIsLoading=_React$useState28[1];var _React$useState29=React.useState(\"\"),_React$useState30=_slicedToArray(_React$useState29,2),currhtml=_React$useState30[0],setcurrhtml=_React$useState30[1];var _React$useState31=React.useState([]),_React$useState32=_slicedToArray(_React$useState31,2),queryterms=_React$useState32[0],setqueryterms=_React$useState32[1];var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),fileData=_useState2[0],setFileData=_useState2[1];var _React$useState33=React.useState([]),_React$useState34=_slicedToArray(_React$useState33,2),querymap=_React$useState34[0],setquerymap=_React$useState34[1];var _React$useState35=React.useState([]),_React$useState36=_slicedToArray(_React$useState35,2),fileNames=_React$useState36[0],setFileNames=_React$useState36[1];var _React$useState37=React.useState([]),_React$useState38=_slicedToArray(_React$useState37,2),colorMap=_React$useState38[0],setcolorMap=_React$useState38[1];var _React$useState39=React.useState(false),_React$useState40=_slicedToArray(_React$useState39,2),showpage=_React$useState40[0],setshowpage=_React$useState40[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pdfUrls=_useState4[0],setPdfUrls=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showDocs=_useState6[0],setshowdocs=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),param1=_useState8[0],setParam1=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),param2=_useState10[0],setParam2=_useState10[1];useEffect(function(){var queryParams=new URLSearchParams(window.location.search);var param1Value=queryParams.get('param1');var param2Value=queryParams.get('param2');console.log(\"---------onsole.log(param1Value)\");console.log(param1Value);console.log(\"---------onsole.log(param1Value)\");console.log(param2Value);// Set the state with the query parameter values\nsetParam1(param1Value);setParam2(param2Value);// You can perform additional logic based on the query parameters here\n},[]);//---------\nconsole.log(\"apiUrl--------------   \"+apiUrl);var _React$useState41=React.useState(\"\"),_React$useState42=_slicedToArray(_React$useState41,2),htmls=_React$useState42[0],setHtmls=_React$useState42[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),checkedTerms=_useState12[0],setCheckedTerms=_useState12[1];var onMount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var queryParams,pdfUrlParam,pdfUrlsArray,downloadedPdfs;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:queryParams=new URLSearchParams(window.location.search);pdfUrlParam=queryParams.get(\"pdf_urls\");if(!pdfUrlParam){_context.next=9;break;}pdfUrlsArray=pdfUrlParam.split(\",\");// Download PDFs from the provided URLs\n_context.next=6;return Promise.all(pdfUrlsArray.map(downloadPdfFromUrl));case 6:downloadedPdfs=_context.sent;// Set the downloaded PDFs in the state\nsetPdfUrls(\"downloadedPdfs\");console.log(\"downloadedPdfs\"+downloadPdfFromUrl);// Continue with your existing logic for processing PDFs\n// For example, you can call a function here to process the downloaded PDFs.\ncase 9:case\"end\":return _context.stop();}},_callee);}));return function onMount(){return _ref.apply(this,arguments);};}();var downloadPdfFromUrl=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(pdfUrl){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;console.log(\"downloading\"+pdfUrl);// const response = await axios.get(pdfUrl, { responseType: \"arraybuffer\" });\n// const pdfData = response.data;\n// // Here, you can save the PDF data or perform any necessary processing.\nreturn _context2.abrupt(\"return\",pdfUrl);case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.error(\"Error downloading PDF from URL:\",pdfUrl,_context2.t0);return _context2.abrupt(\"return\",null);case 9:case\"end\":return _context2.stop();}},_callee2,null,[[0,5]]);}));return function downloadPdfFromUrl(_x){return _ref2.apply(this,arguments);};}();useEffect(function(){onMount();},[]);// Call onMount when the component mounts\nvar handleCheckedTerms=function handleCheckedTerms(checkedTerms){console.log(\"Checked terms:\",checkedTerms);var trueTerms=Object.keys(checkedTerms).filter(function(term){return checkedTerms[term];});var falseTerms=Object.keys(checkedTerms).filter(function(term){return!checkedTerms[term];});// const colorMap = colormap;\nvar htmltemp=htmls;for(var i=0;i<falseTerms.length;i++){var backgroundStyle=\"background-color: white;\";htmltemp=htmltemp.replace(new RegExp(falseTerms[i],\"gi\"),\"<span style=\\\"\".concat(backgroundStyle,\"\\\">\").concat(falseTerms[i],\"</span>\"));}var _loop=function _loop(_i){var backgroundColor=colorMap[trueTerms[_i]];// const backgroundStyle = ` background-color: ;      font-weight: bold;\n// font-size: 1.2em;       display: inline-block;`;\nvar backgroundStyle=checkedTerms[trueTerms[_i]]?\"background-color: \".concat(backgroundColor,\";\"):\"background-color: white;\";// const backgroundStyle = checkedTerms[trueTerms[i]]\n// ? ` background-color: ${backgroundColor};      font-weight: bold;\n//       display: inline-block;`\n// : ` background-color: white ;      font-weight: bold;\n//      display: inline-block;`;\nvar re=new RegExp(\">\".concat(trueTerms[_i],\"<\"),\"gi\");htmltemp=htmltemp.replace(re,function(match){return match.replace(/<span style=\"[^\"]*\">(.*?)<\\/span>/gi,\"$1\");});htmltemp=htmltemp.replace(new RegExp(\">[^<]*(\".concat(trueTerms[_i],\")[^<]*<\"),\"gi\"),function(match){return match.replace(new RegExp(\"(\".concat(trueTerms[_i],\")\"),\"gi\"),\"<span style=\\\"\".concat(backgroundStyle,\"\\\">$1</span>\"));});};for(var _i=0;_i<trueTerms.length;_i++){_loop(_i);}setHtmls(htmltemp);};function updateTermObject(){setquerymap(function(prevQueryMap){var updatedQueryMap=_objectSpread({},prevQueryMap);// Add new terms to the querymap with default value false\nqueryterms.forEach(function(term){if(!updatedQueryMap[term]){updatedQueryMap[term]=false;}});// Remove terms from the querymap that are missing from queryterms\nObject.keys(updatedQueryMap).forEach(function(term){if(!queryterms.includes(term)){delete updatedQueryMap[term];}});return updatedQueryMap;});}useEffect(function(){updateTermObject();},[queryterms]);function showPdf(_x2){return _showPdf.apply(this,arguments);}function _showPdf(){_showPdf=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(fnamme){var path;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:try{fnamme=fnamme.replace(\"pdf\",\"html\");path=fnamme;fetch(path).then(function(response){return response.text();}).then(function(html){html=html.replace(/<span class=\"_ _\\d+\"><\\/span>/g,\"\");setHtmls(html);});}catch(error){console.log(\"file not found\");}case 1:case\"end\":return _context6.stop();}},_callee6);}));return _showPdf.apply(this,arguments);}var convertPDFToHTML=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var pdfFilePath,response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:pdfFilePath=\"./sample.pdf\";_context3.prev=1;_context3.next=4;return fetch(\"\".concat(apiUrl,\"/api/convert-pdf-to-html?_=\").concat(new Date().getTime()),{timeout:10000});case 4:response=_context3.sent;_context3.next=7;return response.text();case 7:return _context3.abrupt(\"return\",_context3.sent);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](1);console.error(_context3.t0);throw new Error(\"Failed to convert PDF to HTML\");case 14:case\"end\":return _context3.stop();}},_callee3,null,[[1,10]]);}));return function convertPDFToHTML(){return _ref3.apply(this,arguments);};}();var startconversion=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:setIsLoading(true);_context4.next=3;return convertPDFToHTML().then(function(html){// alert(\"yes\");\nsetFileText(cleanTexts(fileText));var resultsdemo=rankTextscos(queryterms,fileText);console.log(queryterms);// console.log(fileText);\nconsole.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);console.log(resultsdemo);setIsLoading(false);}).catch(function(error){setIsLoading(false);});case 3:case\"end\":return _context4.stop();}},_callee4);}));return function startconversion(){return _ref4.apply(this,arguments);};}();function rerankjacc(){setIsLoading(true);var resultsdemo=rankTextsjacc(queryterms,fileText);console.log(queryterms);console.log(fileText);console.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);setIsLoading(false);}function rerankbm25(){setIsLoading(true);var resultsdemo=rankTextsbm25(queryterms,fileText);console.log(queryterms);console.log(fileText);console.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);setIsLoading(false);}function rerankcoss(){setIsLoading(true);var resultsdemo=rankTextscos(queryterms,fileText);console.log(queryterms);console.log(fileText);console.log(\"xxxxxx the results doc\"+JSON.stringify(resultsdemo));setAllDocsReady(true);setDocRanks(resultsdemo);setIsLoading(false);}function cleanTexts(obj){var cleanObj={};var regex=/[^a-zA-Z0-9 ]/g;// Regex to match non-alphanumeric characters\nfor(var _i2=0,_Object$entries=Object.entries(obj);_i2<_Object$entries.length;_i2++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i2],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];var cleanText=value.replace(regex,\" \");// Replace non-alphanumeric characters with spaces\ncleanObj[key]=cleanText.trim();// Trim leading and trailing spaces and add to new object\n}return cleanObj;}function renderPage(){return _renderPage.apply(this,arguments);}function _renderPage(){_renderPage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var imagesList,canvas,canv,i,page,viewport,render_context,img;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:setPageRendering(true);imagesList=[];canvas=document.createElement(\"canvas\");canvas.setAttribute(\"className\",\"canv\");canv=document.querySelector(\".canv\");i=1;case 6:if(!(i<=pdf.numPages)){_context7.next=24;break;}_context7.next=9;return pdf.getPage(i);case 9:page=_context7.sent;viewport=page.getViewport({scale:1});canvas.height=viewport.height;canvas.width=viewport.width;render_context={canvasContext:canvas.getContext(\"2d\"),viewport:viewport};console.log(\"page lenght\",pdf.numPages);setWidth(viewport.width);setHeight(viewport.height);_context7.next=19;return page.render(render_context).promise;case 19:img=canvas.toDataURL(\"image/png\");imagesList.push(img);case 21:i++;_context7.next=6;break;case 24:setImages(imagesList);setPageRendering(false);case 26:case\"end\":return _context7.stop();}},_callee7);}));return _renderPage.apply(this,arguments);}useEffect(function(){pdf&&renderPage();},[pdf,currentPage]);function rankTextsbm25(terms,texts){var docVectors={};// stores the term frequency vectors for each document\nvar docs=Object.keys(texts);// get an array of the document names\nvar wordSet=new Set(terms);// create a set of the terms to use for matching\n// calculate the inverse document frequency for each term\nvar idf={};docs.forEach(function(doc){var words=new Set(texts[doc].toLowerCase().match(/\\b\\w+\\b/g));// split the text into words and convert to a set\nwords.forEach(function(word){if(idf[word]){idf[word]++;}else{idf[word]=1;}});});Object.keys(idf).forEach(function(term){idf[term]=Math.log(docs.length/idf[term]);});// iterate over each document to calculate the term frequency vector\ndocs.forEach(function(doc){var words=texts[doc].toLowerCase().match(/\\b\\w+\\b/g);// split the text into words\nvar tf={};// stores the term frequency for each word\nwords.forEach(function(word){if(tf[word]){tf[word]++;}else{tf[word]=1;}});// store the vector and the word count for the document\ndocVectors[doc]={vector:tf,wordCount:words.length};});// calculate the Okapi BM25 score for each document\nvar results=docs.map(function(doc){var _docVectors$doc=docVectors[doc],docVector=_docVectors$doc.vector,wordCount=_docVectors$doc.wordCount;var score=0;var matchedWords=[];terms.forEach(function(term){if(docVector[term]){var tf=docVector[term];var k1=1.2;var b=0.75;var avgDocLength=docs.reduce(function(sum,doc){return sum+docVectors[doc].wordCount;},0)/docs.length;var idfScore=idf[term];var docLengthNorm=1-b+b*(wordCount/avgDocLength);var tfScore=(k1+1)*tf/(k1*docLengthNorm+tf);score+=idfScore*tfScore;matchedWords.push({word:term,count:docVector[term]});}});return{name:doc,score:score,matchedWords:matchedWords};});results.sort(function(a,b){return b.score-a.score;});return results;}function rankTextsjacc(terms,texts){var docVectors={};// stores the term frequency vectors for each document\nvar docs=Object.keys(texts);// get an array of the document names\nvar wordSet=new Set(terms);// create a set of the terms to use for matching\n// iterate over each document to calculate the term frequency vector\ndocs.forEach(function(doc){var words=texts[doc].toLowerCase().match(/\\b\\w+\\b/g);// split the text into words\nvar tf={};// stores the term frequency for each word\nwords.forEach(function(word){if(tf[word]){tf[word]++;}else{tf[word]=1;}});// store the vector and the word count for the document\ndocVectors[doc]={vector:tf,wordCount:words.length};});// calculate the Jaccard similarity between the term frequency vectors and the query vector\nvar queryVector={};terms.forEach(function(term){queryVector[term]=1;});var results=docs.map(function(doc){var _docVectors$doc2=docVectors[doc],docVector=_docVectors$doc2.vector,wordCount=_docVectors$doc2.wordCount;var intersection={};var intersectionSize=0;var unionSize=wordCount;Object.keys(queryVector).forEach(function(term){if(docVector[term]){intersection[term]=docVector[term];intersectionSize+=docVector[term];}else{unionSize+=1;}});var jaccardSimilarity=intersectionSize/unionSize;var matchedWords=Object.keys(intersection).map(function(word){return{word:word,count:intersection[word]};});return{name:doc,score:jaccardSimilarity,matchedWords:matchedWords};});results.sort(function(a,b){return b.score-a.score;});return results;}function rankTextscos(terms,texts){var docVectors={};// stores the term frequency vectors for each document\nvar docs=Object.keys(texts);// get an array of the document names\nvar wordSet=new Set(terms);// create a set of the terms to use for matching\nconsole.log(\"----docs in ranking\");console.log(texts);// iterate over each document to calculate the term frequency vector\ndocs.forEach(function(doc){var words=texts[doc].toLowerCase().match(/\\b\\w+\\b/g);// split the text into words\nconsole.log(\"--------\");console.log(words);console.log(\"--------\");var tf={};// stores the term frequency for each word\nvar maxFreq=0;// stores the highest frequency of any word in the document\nwords.forEach(function(word){if(tf[word]){tf[word]++;}else{tf[word]=1;}maxFreq=Math.max(maxFreq,tf[word]);});// normalize the term frequency vector by dividing each frequency by the max frequency\nvar docVector={};Object.keys(tf).forEach(function(word){docVector[word]=tf[word];});docVectors[doc]={vector:docVector,wordCount:words.length};// store the vector and the word count for the document\n});// calculate the cosine similarity between the term frequency vectors and the query vector\nvar queryVector={};terms.forEach(function(term){queryVector[term]=1;});var results=docs.map(function(doc){var _docVectors$doc3=docVectors[doc],docVector=_docVectors$doc3.vector,wordCount=_docVectors$doc3.wordCount;var dotProduct=Object.keys(queryVector).reduce(function(sum,term){if(docVector[term]){return sum+queryVector[term]*docVector[term];}else{return sum;}},0);var queryMagnitude=Math.sqrt(Object.keys(queryVector).reduce(function(sum,term){return sum+queryVector[term]*queryVector[term];},0));var docMagnitude=Math.sqrt(Object.keys(docVector).reduce(function(sum,term){return sum+docVector[term]*docVector[term];},0));var cosineSimilarity=dotProduct/(queryMagnitude*docMagnitude);// find the words in the text that match the query terms and calculate their frequency in the document\n// find the words in the text that match the query terms and calculate their frequency in the document\nvar matchedWords=Object.keys(docVector).filter(function(word){return wordSet.has(word);}).map(function(word){return{word:word,count:docVector[word]};// use the frequency directly\n});return{name:doc,score:cosineSimilarity,matchedWords:matchedWords};});results.sort(function(a,b){return b.score-a.score;});setAllDocsReady(true);return results;}var handleFetchFile=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(fileName){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return axios.get(\"\".concat(apiUrl,\"/api/getFile/\").concat(fileName));case 3:response=_context5.sent;console.group(\"found html file \"+response.data);setHtmls(response.data);_context5.next=11;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](0);console.error(\"Error fetching file \".concat(fileName,\": \").concat(_context5.t0.message));case 11:case\"end\":return _context5.stop();}},_callee5,null,[[0,8]]);}));return function handleFetchFile(_x3){return _ref5.apply(this,arguments);};}();function showranks(){setshowpage(false);}function showthispdf(fnamme){setshowpage(true);fnamme=fnamme.replace(\"pdf\",\"html\");handleFetchFile(fnamme);}return/*#__PURE__*/_jsxs(Provider,{store:store,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"PaperRank\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"\\\"Accelerate Your Research\\\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"queryupload\",children:[/*#__PURE__*/_jsx(Loader,{isLoading:isLoading}),/*#__PURE__*/_jsx(\"div\",{class:\"section\",children:/*#__PURE__*/_jsx(\"div\",{class:\"container-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"q col-sm-6\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Query\"}),/*#__PURE__*/_jsx(Box,{queryterms:queryterms,setcolorMap:setcolorMap,setqueryterms:setqueryterms})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"f col-sm-6\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"File Upload\"}),/*#__PURE__*/_jsx(\"i\",{class:\"fa-solid fa-cloud-arrow-up\"}),\" \",/*#__PURE__*/_jsx(FileUpload,{setIsLoading:setIsLoading,setFileText:setFileText,setFileNames:setFileNames})]})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"right-column\",children:/*#__PURE__*/_jsx(\"div\",{class:\"row\",children:/*#__PURE__*/_jsx(\"div\",{id:\"pdf-contents\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"pdf-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"pdf-buttons\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-1\"}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:startconversion,children:\"Start Ranking\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:rerankcoss,children:\"Start cosine ranking\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:rerankjacc,children:\"Start jaccard ranking\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:rerankbm25,children:\"Start bm25 ranking\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setshowdocs(!showDocs);},children:\"Show docs\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:showranks,children:\"< Back to document ranks\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-1\"})]}),/*#__PURE__*/_jsx(\"div\",{})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"afterupload\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"p row\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"col-sm-9\",children:showDocs?/*#__PURE__*/_jsx(\"div\",{id:\"pdf-main-container\",children:/*#__PURE__*/_jsx(DocList,{handleCheckboxChange:function handleCheckboxChange(){console.log(\"hc---\");},DocList:[{\"name\":\"Document 1\",\"url\":\"http://example.com/doc1\",\"isRanking\":true},{\"name\":\"Document 2\",\"url\":\"http://example.com/doc2\",\"isRanking\":false},{\"name\":\"Document 3\",\"url\":\"http://example.com/doc3\",\"isRanking\":true},{\"name\":\"Document 4\",\"url\":\"http://example.com/doc4\",\"isRanking\":false}]})}):showpage?/*#__PURE__*/_jsx(\"div\",{id:\"pdf-main-container\",children:/*#__PURE__*/_jsx(HtmlViewer,{html:htmls})}):alldocsready?/*#__PURE__*/_jsxs(\"div\",{id:\"pdf-main-container\",children:[\" \",/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(SearchResults,{results:docranks,showthispdf:showthispdf})})]}):\"\"}),/*#__PURE__*/_jsx(\"div\",{class:\"terms col-sm-3\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Terms\"}),/*#__PURE__*/_jsx(CheckboxList,{terms:querymap,checkedTerms:checkedTerms,setCheckedTerms:setCheckedTerms,onCheckedTerms:handleCheckedTerms})]})})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"fotter\"})]});}","map":{"version":3,"names":["React","useState","useEffect","HtmlViewer","CheckboxList","FileUpload","Provider","store","SearchResults","Box","pdfjsLib","axios","Loader","useLocation","DocList","jsx","_jsx","jsxs","_jsxs","apiUrl","process","env","REACT_APP_API_URL","App","_React$useState","_React$useState2","_slicedToArray","pdf","setPdf","_React$useState3","_React$useState4","width","setWidth","_React$useState5","_React$useState6","images","setImages","_React$useState7","_React$useState8","height","setHeight","_React$useState9","_React$useState10","totalPages","setTotalPages","_React$useState11","_React$useState12","currentPage","setCurrentPage","_React$useState13","_React$useState14","pdfRendering","setPdfRendering","_React$useState15","_React$useState16","pageRendering","setPageRendering","_React$useState17","_React$useState18","searchQuery","setSearchQuery","_React$useState19","_React$useState20","searchResults","setSearchResults","_React$useState21","_React$useState22","fileText","setFileText","_React$useState23","_React$useState24","docranks","setDocRanks","_React$useState25","_React$useState26","alldocsready","setAllDocsReady","_React$useState27","_React$useState28","isLoading","setIsLoading","_React$useState29","_React$useState30","currhtml","setcurrhtml","_React$useState31","_React$useState32","queryterms","setqueryterms","_useState","_useState2","fileData","setFileData","_React$useState33","_React$useState34","querymap","setquerymap","_React$useState35","_React$useState36","fileNames","setFileNames","_React$useState37","_React$useState38","colorMap","setcolorMap","_React$useState39","_React$useState40","showpage","setshowpage","_useState3","_useState4","pdfUrls","setPdfUrls","_useState5","_useState6","showDocs","setshowdocs","_useState7","_useState8","param1","setParam1","_useState9","_useState10","param2","setParam2","queryParams","URLSearchParams","window","location","search","param1Value","get","param2Value","console","log","_React$useState41","_React$useState42","htmls","setHtmls","_useState11","_useState12","checkedTerms","setCheckedTerms","onMount","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pdfUrlParam","pdfUrlsArray","downloadedPdfs","wrap","_callee$","_context","prev","next","split","Promise","all","map","downloadPdfFromUrl","sent","stop","apply","arguments","_ref2","_callee2","pdfUrl","_callee2$","_context2","abrupt","t0","error","_x","handleCheckedTerms","trueTerms","Object","keys","filter","term","falseTerms","htmltemp","i","length","backgroundStyle","replace","RegExp","concat","_loop","_i","backgroundColor","re","match","updateTermObject","prevQueryMap","updatedQueryMap","_objectSpread","forEach","includes","showPdf","_x2","_showPdf","_callee6","fnamme","path","_callee6$","_context6","fetch","then","response","text","html","convertPDFToHTML","_ref3","_callee3","pdfFilePath","_callee3$","_context3","Date","getTime","timeout","Error","startconversion","_ref4","_callee4","_callee4$","_context4","cleanTexts","resultsdemo","rankTextscos","JSON","stringify","catch","rerankjacc","rankTextsjacc","rerankbm25","rankTextsbm25","rerankcoss","obj","cleanObj","regex","_i2","_Object$entries","entries","_Object$entries$_i","key","value","cleanText","trim","renderPage","_renderPage","_callee7","imagesList","canvas","canv","page","viewport","render_context","img","_callee7$","_context7","document","createElement","setAttribute","querySelector","numPages","getPage","getViewport","scale","canvasContext","getContext","render","promise","toDataURL","push","terms","texts","docVectors","docs","wordSet","Set","idf","doc","words","toLowerCase","word","Math","tf","vector","wordCount","results","_docVectors$doc","docVector","score","matchedWords","k1","b","avgDocLength","reduce","sum","idfScore","docLengthNorm","tfScore","count","name","sort","a","queryVector","_docVectors$doc2","intersection","intersectionSize","unionSize","jaccardSimilarity","maxFreq","max","_docVectors$doc3","dotProduct","queryMagnitude","sqrt","docMagnitude","cosineSimilarity","has","handleFetchFile","_ref5","_callee5","fileName","_callee5$","_context5","group","data","message","_x3","showranks","showthispdf","children","className","class","id","onClick","handleCheckboxChange","onCheckedTerms"],"sources":["/home/ashish/pdfdoc/research-ranking-app/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport HtmlViewer from \"./HtmlViewer\";\nimport CheckboxList from \"./CheckboxList\";\nimport FileUpload from \"./FileUpload\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport SearchResults from \"./SearchResults\";\nimport Box from \"./Box\";\nimport pdfjsLib from \"pdfjs-dist\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\n\nimport { useLocation } from 'react-router-dom';\nimport DocList from \"./DocList\";\n\n\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport default function App() {\n\n  const [pdf, setPdf] = React.useState(\"\");\n  const [width, setWidth] = React.useState(0);\n  const [images, setImages] = React.useState([]);\n  const [height, setHeight] = React.useState(0);\n  const [totalPages, setTotalPages] = React.useState(1);\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [pdfRendering, setPdfRendering] = React.useState(\"\");\n  const [pageRendering, setPageRendering] = React.useState(\"\");\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [fileText, setFileText] = React.useState({});\n  const [docranks, setDocRanks] = React.useState({});\n  const [alldocsready, setAllDocsReady] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [currhtml, setcurrhtml] = React.useState(\"\");\n  const [queryterms, setqueryterms] = React.useState([]);\n  const [fileData, setFileData] = useState(\"\");\n  const [querymap, setquerymap] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [colorMap , setcolorMap ] = React.useState([]);\n  const [showpage , setshowpage ] = React.useState(false);\n  const [pdfUrls, setPdfUrls] = useState([]);\n  const [showDocs, setshowdocs] = useState(false);\n\n \n\n\n  const [param1, setParam1] = useState('');\n  const [param2, setParam2] = useState('');\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const param1Value = queryParams.get('param1');\n    const param2Value = queryParams.get('param2');\n\n    console.log(\"---------onsole.log(param1Value)\")\n    console.log(param1Value)\n    console.log(\"---------onsole.log(param1Value)\")\n    console.log(param2Value)\n    // Set the state with the query parameter values\n    setParam1(param1Value);\n    setParam2(param2Value);\n\n    // You can perform additional logic based on the query parameters here\n\n  }, []);\n  //---------\n\nconsole.log(\"apiUrl--------------   \"+apiUrl)\n\n  const [htmls, setHtmls] = React.useState(\"\");\n\n  const [checkedTerms, setCheckedTerms] = useState({});\n\n\n  const onMount = async () => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const pdfUrlParam = queryParams.get(\"pdf_urls\");\n    if (pdfUrlParam) {\n      const pdfUrlsArray = pdfUrlParam.split(\",\");\n      \n      // Download PDFs from the provided URLs\n      const downloadedPdfs = await Promise.all(pdfUrlsArray.map(downloadPdfFromUrl));\n      \n      // Set the downloaded PDFs in the state\n      setPdfUrls(\"downloadedPdfs\");\n      console.log(\"downloadedPdfs\"+ downloadPdfFromUrl)\n      // Continue with your existing logic for processing PDFs\n      // For example, you can call a function here to process the downloaded PDFs.\n    }\n  };\n\n  const downloadPdfFromUrl = async (pdfUrl) => {\n    try {\n\n      console.log(\"downloading\"+ pdfUrl)\n      // const response = await axios.get(pdfUrl, { responseType: \"arraybuffer\" });\n      // const pdfData = response.data;\n      // // Here, you can save the PDF data or perform any necessary processing.\n      return pdfUrl;\n    } catch (error) {\n      console.error(\"Error downloading PDF from URL:\", pdfUrl, error);\n      return null;\n    }\n  };\n  \n  \n  useEffect(() => {\n    onMount();\n  }, []); // Call onMount when the component mounts\n\n  \n  const handleCheckedTerms = (checkedTerms) => {\n    console.log(\"Checked terms:\", checkedTerms);\n    const trueTerms = Object.keys(checkedTerms).filter(\n      (term) => checkedTerms[term]\n    );\n  \n    const falseTerms = Object.keys(checkedTerms).filter(\n      (term) => !checkedTerms[term]\n    );\n  \n    // const colorMap = colormap;\n  \n    let htmltemp = htmls;\n  \n    for (let i = 0; i < falseTerms.length; i++) {\n      const backgroundStyle = `background-color: white;`;\n\n     \n\n\n      htmltemp = htmltemp.replace(\n        new RegExp(falseTerms[i], \"gi\"),\n        `<span style=\"${backgroundStyle}\">${falseTerms[i]}</span>`\n      );\n    }\n  \n    for (let i = 0; i < trueTerms.length; i++) {\n      const backgroundColor = colorMap[trueTerms[i]];\n\n      // const backgroundStyle = ` background-color: ;      font-weight: bold;\n      // font-size: 1.2em;       display: inline-block;`;\n\n      const backgroundStyle = checkedTerms[trueTerms[i]]\n        ? `background-color: ${backgroundColor};`\n        : `background-color: white;`;\n      \n        // const backgroundStyle = checkedTerms[trueTerms[i]]\n        // ? ` background-color: ${backgroundColor};      font-weight: bold;\n        //       display: inline-block;`\n        // : ` background-color: white ;      font-weight: bold;\n        //      display: inline-block;`;\n      \n\n        const re = new RegExp(`>${trueTerms[i]}<`, \"gi\");\n      htmltemp = htmltemp.replace(re, (match) => {\n        return match.replace(/<span style=\"[^\"]*\">(.*?)<\\/span>/gi, \"$1\");\n      });\n      htmltemp = htmltemp.replace(\n        new RegExp(`>[^<]*(${trueTerms[i]})[^<]*<`, \"gi\"),\n        (match) => {\n          return match.replace(\n            new RegExp(`(${trueTerms[i]})`, \"gi\"),\n            `<span style=\"${backgroundStyle}\">$1</span>`\n          );\n        }\n      );\n    }\n  \n    setHtmls(htmltemp);\n  };\n  \n  \n\n  \n  function updateTermObject() {\n    setquerymap((prevQueryMap) => {\n      const updatedQueryMap = { ...prevQueryMap };\n      // Add new terms to the querymap with default value false\n      queryterms.forEach((term) => {\n        if (!updatedQueryMap[term]) {\n          updatedQueryMap[term] = false;\n        }\n      });\n      // Remove terms from the querymap that are missing from queryterms\n      Object.keys(updatedQueryMap).forEach((term) => {\n        if (!queryterms.includes(term)) {\n          delete updatedQueryMap[term];\n        }\n      });\n      return updatedQueryMap;\n    });\n  }\n\n  useEffect(() => {\n    updateTermObject();\n  }, [queryterms]);\n\n  async function showPdf(fnamme) {\n    try {\n      fnamme = fnamme.replace(\"pdf\", \"html\");\n      const path = fnamme;\n\n      fetch(path)\n        .then((response) => response.text())\n        .then((html) => {\n          html = html.replace(/<span class=\"_ _\\d+\"><\\/span>/g, \"\");\n          setHtmls(html);\n        });\n    } catch (error) {\n      console.log(\"file not found\");\n    }\n  }\n\n  const convertPDFToHTML = async () => {\n    let pdfFilePath = \"./sample.pdf\";\n    try {\n      const response = await fetch(\n        `${apiUrl}/api/convert-pdf-to-html?_=${new Date().getTime()}`,\n        { timeout: 10000 }\n      );\n      return await response.text();\n    } catch (error) {\n      console.error(error);\n      throw new Error(\"Failed to convert PDF to HTML\");\n    }\n  };\n\n  const startconversion = async () => {\n    setIsLoading(true);\n    await convertPDFToHTML()\n      .then((html) => {\n        // alert(\"yes\");\n        setFileText(cleanTexts(fileText));\n        const resultsdemo = rankTextscos(queryterms, fileText);\n\n        console.log(queryterms);\n        // console.log(fileText);\n        console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n        setAllDocsReady(true);\n        setDocRanks(resultsdemo);\n        console.log(resultsdemo);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n      });\n  };\n\n  function rerankjacc() {\n    setIsLoading(true);\n    const resultsdemo = rankTextsjacc(queryterms, fileText);\n\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function rerankbm25() {\n    setIsLoading(true);\n    const resultsdemo = rankTextsbm25(queryterms, fileText);\n\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function rerankcoss() {\n    setIsLoading(true);\n    const resultsdemo = rankTextscos(queryterms, fileText);\n\n    console.log(queryterms);\n    console.log(fileText);\n    console.log(\"xxxxxx the results doc\" + JSON.stringify(resultsdemo));\n    setAllDocsReady(true);\n    setDocRanks(resultsdemo);\n    setIsLoading(false);\n  }\n\n  function cleanTexts(obj) {\n    const cleanObj = {};\n    const regex = /[^a-zA-Z0-9 ]/g; // Regex to match non-alphanumeric characters\n    for (const [key, value] of Object.entries(obj)) {\n      const cleanText = value.replace(regex, \" \"); // Replace non-alphanumeric characters with spaces\n      cleanObj[key] = cleanText.trim(); // Trim leading and trailing spaces and add to new object\n    }\n    return cleanObj;\n  }\n\n\n\n\n  async function renderPage() {\n    setPageRendering(true);\n    const imagesList = [];\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"className\", \"canv\");\n    let canv = document.querySelector(\".canv\");\n\n    for (let i = 1; i <= pdf.numPages; i++) {\n      var page = await pdf.getPage(i);\n      var viewport = page.getViewport({ scale: 1 });\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      var render_context = {\n        canvasContext: canvas.getContext(\"2d\"),\n        viewport: viewport,\n      };\n      console.log(\"page lenght\", pdf.numPages);\n      setWidth(viewport.width);\n      setHeight(viewport.height);\n      await page.render(render_context).promise;\n      let img = canvas.toDataURL(\"image/png\");\n      imagesList.push(img);\n    }\n    setImages(imagesList);\n    setPageRendering(false);\n  }\n\n  useEffect(() => {\n    pdf && renderPage();\n  }, [pdf, currentPage]);\n\n  function rankTextsbm25(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n\n    // calculate the inverse document frequency for each term\n    const idf = {};\n    docs.forEach((doc) => {\n      const words = new Set(texts[doc].toLowerCase().match(/\\b\\w+\\b/g)); // split the text into words and convert to a set\n      words.forEach((word) => {\n        if (idf[word]) {\n          idf[word]++;\n        } else {\n          idf[word] = 1;\n        }\n      });\n    });\n    Object.keys(idf).forEach((term) => {\n      idf[term] = Math.log(docs.length / idf[term]);\n    });\n\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      const tf = {}; // stores the term frequency for each word\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n      });\n      // store the vector and the word count for the document\n      docVectors[doc] = { vector: tf, wordCount: words.length };\n    });\n\n    // calculate the Okapi BM25 score for each document\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      let score = 0;\n      const matchedWords = [];\n      terms.forEach((term) => {\n        if (docVector[term]) {\n          const tf = docVector[term];\n          const k1 = 1.2;\n          const b = 0.75;\n          const avgDocLength =\n            docs.reduce((sum, doc) => {\n              return sum + docVectors[doc].wordCount;\n            }, 0) / docs.length;\n          const idfScore = idf[term];\n          const docLengthNorm = 1 - b + b * (wordCount / avgDocLength);\n          const tfScore = ((k1 + 1) * tf) / (k1 * docLengthNorm + tf);\n          score += idfScore * tfScore;\n          matchedWords.push({ word: term, count: docVector[term] });\n        }\n      });\n      return {\n        name: doc,\n        score: score,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n\n    return results;\n  }\n\n  function rankTextsjacc(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      const tf = {}; // stores the term frequency for each word\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n      });\n      // store the vector and the word count for the document\n      docVectors[doc] = { vector: tf, wordCount: words.length };\n    });\n\n    // calculate the Jaccard similarity between the term frequency vectors and the query vector\n    const queryVector = {};\n    terms.forEach((term) => {\n      queryVector[term] = 1;\n    });\n\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      const intersection = {};\n      let intersectionSize = 0;\n      let unionSize = wordCount;\n      Object.keys(queryVector).forEach((term) => {\n        if (docVector[term]) {\n          intersection[term] = docVector[term];\n          intersectionSize += docVector[term];\n        } else {\n          unionSize += 1;\n        }\n      });\n\n      const jaccardSimilarity = intersectionSize / unionSize;\n\n      const matchedWords = Object.keys(intersection).map((word) => {\n        return { word: word, count: intersection[word] };\n      });\n\n      return {\n        name: doc,\n        score: jaccardSimilarity,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n\n    return results;\n  }\n\n  function rankTextscos(terms, texts) {\n    const docVectors = {}; // stores the term frequency vectors for each document\n    const docs = Object.keys(texts); // get an array of the document names\n    const wordSet = new Set(terms); // create a set of the terms to use for matching\n    console.log(\"----docs in ranking\");\n\n    console.log(texts);\n    // iterate over each document to calculate the term frequency vector\n    docs.forEach((doc) => {\n      const words = texts[doc].toLowerCase().match(/\\b\\w+\\b/g); // split the text into words\n      console.log(\"--------\");\n      console.log(words);\n      console.log(\"--------\");\n      const tf = {}; // stores the term frequency for each word\n      var maxFreq = 0; // stores the highest frequency of any word in the document\n      words.forEach((word) => {\n        if (tf[word]) {\n          tf[word]++;\n        } else {\n          tf[word] = 1;\n        }\n        maxFreq = Math.max(maxFreq, tf[word]);\n      });\n      // normalize the term frequency vector by dividing each frequency by the max frequency\n      const docVector = {};\n      Object.keys(tf).forEach((word) => {\n        docVector[word] = tf[word];\n      });\n      docVectors[doc] = { vector: docVector, wordCount: words.length }; // store the vector and the word count for the document\n    });\n\n    // calculate the cosine similarity between the term frequency vectors and the query vector\n    const queryVector = {};\n    terms.forEach((term) => {\n      queryVector[term] = 1;\n    });\n    const results = docs.map((doc) => {\n      const { vector: docVector, wordCount } = docVectors[doc];\n      const dotProduct = Object.keys(queryVector).reduce((sum, term) => {\n        if (docVector[term]) {\n          return sum + queryVector[term] * docVector[term];\n        } else {\n          return sum;\n        }\n      }, 0);\n      const queryMagnitude = Math.sqrt(\n        Object.keys(queryVector).reduce((sum, term) => {\n          return sum + queryVector[term] * queryVector[term];\n        }, 0)\n      );\n      const docMagnitude = Math.sqrt(\n        Object.keys(docVector).reduce((sum, term) => {\n          return sum + docVector[term] * docVector[term];\n        }, 0)\n      );\n      const cosineSimilarity = dotProduct / (queryMagnitude * docMagnitude);\n      // find the words in the text that match the query terms and calculate their frequency in the document\n      // find the words in the text that match the query terms and calculate their frequency in the document\n      const matchedWords = Object.keys(docVector)\n        .filter((word) => {\n          return wordSet.has(word);\n        })\n        .map((word) => {\n          return { word: word, count: docVector[word] }; // use the frequency directly\n        });\n\n      return {\n        name: doc,\n        score: cosineSimilarity,\n        matchedWords: matchedWords,\n      };\n    });\n\n    results.sort((a, b) => {\n      return b.score - a.score;\n    });\n    setAllDocsReady(true);\n    return results;\n  }\n\n  const handleFetchFile = async (fileName) => {\n    try {\n      const response = await axios.get(\n        `${apiUrl}/api/getFile/${fileName}`\n      );\n      console.group(\"found html file \"+response.data);\n      setHtmls(response.data);\n    } catch (error) {\n      console.error(`Error fetching file ${fileName}: ${error.message}`);\n    }\n  };\n\n  function showranks(){\n    setshowpage(false);\n  }\n  function showthispdf(fnamme) {\n    setshowpage(true);\n    fnamme = fnamme.replace(\"pdf\", \"html\");\n    handleFetchFile(fnamme);\n  }\n \n  return (\n    <Provider store={store}>\n\n<div className=\"header\">\n  <h1>PaperRank</h1>\n  <h5>\"Accelerate Your Research\"</h5>\n\n</div>\n\n\n\n\n      <div className=\"queryupload\">\n        <Loader isLoading={isLoading} />\n        <div class=\"section\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n          <div class=\"q col-sm-6\">\n          <h1>Query</h1>\n          <Box queryterms={queryterms} setcolorMap={setcolorMap} setqueryterms={setqueryterms} />\n          </div>\n          <div class=\"f col-sm-6\"> \n            <h1>File Upload</h1>\n            <i class=\"fa-solid fa-cloud-arrow-up\"></i> <FileUpload  setIsLoading={setIsLoading} setFileText={setFileText} setFileNames={setFileNames} />\n          </div>\n            </div>\n        </div>\n    </div>\n   </div>\n\n   <div className=\"right-column\">\n          <div class=\"row\">\n          <div id=\"pdf-contents\">\n            <div id=\"pdf-meta\">\n              <div id=\"pdf-buttons\">\n              <div class=\"terms col-sm-1\"></div>\n              <div class=\"terms col-sm-2\"> \n                  <button onClick={startconversion}>Start Ranking</button>\n                </div>\n\n                <div class=\"terms col-sm-2\"> \n                  <button onClick={rerankcoss}>Start cosine ranking</button>\n                </div>\n\n                <div class=\"terms col-sm-2\"> \n                  <button onClick={rerankjacc}>Start jaccard ranking</button>\n                </div>\n\n                <div class=\"terms col-sm-2\"> \n                  <button onClick={rerankbm25}>Start bm25 ranking</button>\n                </div>\n                <div class=\"terms col-sm-2\"> \n                  <button onClick={()=>{setshowdocs(!showDocs)}}>Show docs</button>\n                </div>\n\n                <div class=\"terms col-sm-2\"> \n                  <button onClick={showranks}>{\"< Back to document ranks\"}</button>\n                </div>\n                <div class=\"terms col-sm-1\"></div>\n\n             \n              </div>\n\n              <div></div>\n            </div>\n          </div>\n          </div>\n          \n        </div>\n\n   \n   <div className=\"afterupload\">\n        <div class=\"p row\">\n          <div class=\"col-sm-9\">\n\n {    showDocs?\n (\n  <div id=\"pdf-main-container\">\n  \n    <DocList handleCheckboxChange={()=>{console.log(\"hc---\")}} DocList={\n[\n  { \"name\": \"Document 1\", \"url\": \"http://example.com/doc1\", \"isRanking\": true },\n  { \"name\": \"Document 2\", \"url\": \"http://example.com/doc2\", \"isRanking\": false },\n  { \"name\": \"Document 3\", \"url\": \"http://example.com/doc3\", \"isRanking\": true },\n  { \"name\": \"Document 4\", \"url\": \"http://example.com/doc4\", \"isRanking\": false }\n]\n} />\n  \n</div>\n)\n:       \n         \nshowpage ? (\n            <div id=\"pdf-main-container\">\n            \n              <HtmlViewer html={htmls} />\n            \n          </div>\n          ) : \n          \n          alldocsready ? (\n            <div id=\"pdf-main-container\"> <div>\n              <SearchResults results={docranks} showthispdf={showthispdf} />\n            </div></div>\n          ) : (\n            \"\"\n          )\n          \n          }\n\n          </div>\n\n          <div class=\"terms col-sm-3\"> \n          <div>\n                  <h1>Terms</h1>\n                  <CheckboxList\n                    terms={querymap}\n                    checkedTerms={checkedTerms}\n                    setCheckedTerms={setCheckedTerms}\n                    onCheckedTerms={handleCheckedTerms}\n                  />\n                </div>\n\n          </div>\n            </div>\n\n        </div>\n\n      \n\n        <div class=\"fotter\">\n\n\n        </div>\n    </Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}